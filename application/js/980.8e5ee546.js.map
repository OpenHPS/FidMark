{"version":3,"file":"js/980.8e5ee546.js","mappings":"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","sources":["webpack://eswc2024/./node_modules/@ionic/core/components/animation.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { w as win } from './index5.js';\nimport { r as raf } from './helpers.js';\n\nlet animationPrefix;\n/**\n * Web Animations requires hyphenated CSS properties\n * to be written in camelCase when animating\n */\nconst processKeyframes = (keyframes) => {\n  keyframes.forEach((keyframe) => {\n    for (const key in keyframe) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (keyframe.hasOwnProperty(key)) {\n        const value = keyframe[key];\n        if (key === 'easing') {\n          const newKey = 'animation-timing-function';\n          keyframe[newKey] = value;\n          delete keyframe[key];\n        }\n        else {\n          const newKey = convertCamelCaseToHypen(key);\n          if (newKey !== key) {\n            keyframe[newKey] = value;\n            delete keyframe[key];\n          }\n        }\n      }\n    }\n  });\n  return keyframes;\n};\nconst convertCamelCaseToHypen = (str) => {\n  return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n};\nconst getAnimationPrefix = (el) => {\n  if (animationPrefix === undefined) {\n    const supportsUnprefixed = el.style.animationName !== undefined;\n    const supportsWebkitPrefix = el.style.webkitAnimationName !== undefined;\n    animationPrefix = !supportsUnprefixed && supportsWebkitPrefix ? '-webkit-' : '';\n  }\n  return animationPrefix;\n};\nconst setStyleProperty = (element, propertyName, value) => {\n  const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n  element.style.setProperty(prefix + propertyName, value);\n};\nconst removeStyleProperty = (element, propertyName) => {\n  const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n  element.style.removeProperty(prefix + propertyName);\n};\nconst animationEnd = (el, callback) => {\n  let unRegTrans;\n  const opts = { passive: true };\n  const unregister = () => {\n    if (unRegTrans) {\n      unRegTrans();\n    }\n  };\n  const onTransitionEnd = (ev) => {\n    if (el === ev.target) {\n      unregister();\n      callback(ev);\n    }\n  };\n  if (el) {\n    el.addEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n    el.addEventListener('animationend', onTransitionEnd, opts);\n    unRegTrans = () => {\n      el.removeEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n      el.removeEventListener('animationend', onTransitionEnd, opts);\n    };\n  }\n  return unregister;\n};\n// TODO(FW-2832): type\nconst generateKeyframeRules = (keyframes = []) => {\n  return keyframes\n    .map((keyframe) => {\n    const offset = keyframe.offset;\n    const frameString = [];\n    for (const property in keyframe) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (keyframe.hasOwnProperty(property) && property !== 'offset') {\n        frameString.push(`${property}: ${keyframe[property]};`);\n      }\n    }\n    return `${offset * 100}% { ${frameString.join(' ')} }`;\n  })\n    .join(' ');\n};\nconst keyframeIds = [];\nconst generateKeyframeName = (keyframeRules) => {\n  let index = keyframeIds.indexOf(keyframeRules);\n  if (index < 0) {\n    index = keyframeIds.push(keyframeRules) - 1;\n  }\n  return `ion-animation-${index}`;\n};\nconst getStyleContainer = (element) => {\n  // getRootNode is not always available in SSR environments.\n  // TODO(FW-2832): types\n  const rootNode = element.getRootNode !== undefined ? element.getRootNode() : element;\n  return rootNode.head || rootNode;\n};\nconst createKeyframeStylesheet = (keyframeName, keyframeRules, element) => {\n  var _a;\n  const styleContainer = getStyleContainer(element);\n  const keyframePrefix = getAnimationPrefix(element);\n  const existingStylesheet = styleContainer.querySelector('#' + keyframeName);\n  if (existingStylesheet) {\n    return existingStylesheet;\n  }\n  const stylesheet = ((_a = element.ownerDocument) !== null && _a !== void 0 ? _a : document).createElement('style');\n  stylesheet.id = keyframeName;\n  stylesheet.textContent = `@${keyframePrefix}keyframes ${keyframeName} { ${keyframeRules} } @${keyframePrefix}keyframes ${keyframeName}-alt { ${keyframeRules} }`;\n  styleContainer.appendChild(stylesheet);\n  return stylesheet;\n};\nconst addClassToArray = (classes = [], className) => {\n  if (className !== undefined) {\n    const classNameToAppend = Array.isArray(className) ? className : [className];\n    return [...classes, ...classNameToAppend];\n  }\n  return classes;\n};\n\nconst createAnimation = (animationId) => {\n  let _delay;\n  let _duration;\n  let _easing;\n  let _iterations;\n  let _fill;\n  let _direction;\n  let _keyframes = [];\n  let beforeAddClasses = [];\n  let beforeRemoveClasses = [];\n  let initialized = false;\n  let parentAnimation;\n  let beforeStylesValue = {};\n  let afterAddClasses = [];\n  let afterRemoveClasses = [];\n  let afterStylesValue = {};\n  let numAnimationsRunning = 0;\n  let shouldForceLinearEasing = false;\n  let shouldForceSyncPlayback = false;\n  let cssAnimationsTimerFallback;\n  let forceDirectionValue;\n  let forceDurationValue;\n  let forceDelayValue;\n  let willComplete = true;\n  let finished = false;\n  let shouldCalculateNumAnimations = true;\n  let keyframeName;\n  let ani;\n  let paused = false;\n  const id = animationId;\n  const onFinishCallbacks = [];\n  const onFinishOneTimeCallbacks = [];\n  const onStopOneTimeCallbacks = [];\n  const elements = [];\n  const childAnimations = [];\n  const stylesheets = [];\n  const _beforeAddReadFunctions = [];\n  const _beforeAddWriteFunctions = [];\n  const _afterAddReadFunctions = [];\n  const _afterAddWriteFunctions = [];\n  const webAnimations = [];\n  const supportsAnimationEffect = typeof AnimationEffect === 'function' ||\n    (win !== undefined && typeof win.AnimationEffect === 'function');\n  const supportsWebAnimations = typeof Element === 'function' &&\n    typeof Element.prototype.animate === 'function' &&\n    supportsAnimationEffect;\n  const ANIMATION_END_FALLBACK_PADDING_MS = 100;\n  const getWebAnimations = () => {\n    return webAnimations;\n  };\n  const destroy = (clearStyleSheets) => {\n    childAnimations.forEach((childAnimation) => {\n      childAnimation.destroy(clearStyleSheets);\n    });\n    cleanUp(clearStyleSheets);\n    elements.length = 0;\n    childAnimations.length = 0;\n    _keyframes.length = 0;\n    clearOnFinish();\n    initialized = false;\n    shouldCalculateNumAnimations = true;\n    return ani;\n  };\n  /**\n   * Cancels any Web Animations, removes\n   * any animation properties from the\n   * animation's elements, and removes the\n   * animation's stylesheets from the DOM.\n   */\n  const cleanUp = (clearStyleSheets) => {\n    cleanUpElements();\n    if (clearStyleSheets) {\n      cleanUpStyleSheets();\n    }\n  };\n  const resetFlags = () => {\n    shouldForceLinearEasing = false;\n    shouldForceSyncPlayback = false;\n    shouldCalculateNumAnimations = true;\n    forceDirectionValue = undefined;\n    forceDurationValue = undefined;\n    forceDelayValue = undefined;\n    numAnimationsRunning = 0;\n    finished = false;\n    willComplete = true;\n    paused = false;\n  };\n  const isRunning = () => {\n    return numAnimationsRunning !== 0 && !paused;\n  };\n  /**\n   * @internal\n   * Remove a callback from a chosen callback array\n   * @param callbackToRemove: A reference to the callback that should be removed\n   * @param callbackObjects: An array of callbacks that callbackToRemove should be removed from.\n   */\n  const clearCallback = (callbackToRemove, callbackObjects) => {\n    const index = callbackObjects.findIndex((callbackObject) => callbackObject.c === callbackToRemove);\n    if (index > -1) {\n      callbackObjects.splice(index, 1);\n    }\n  };\n  /**\n   * @internal\n   * Add a callback to be fired when an animation is stopped/cancelled.\n   * @param callback: A reference to the callback that should be fired\n   * @param opts: Any options associated with this particular callback\n   */\n  const onStop = (callback, opts) => {\n    onStopOneTimeCallbacks.push({ c: callback, o: opts });\n    return ani;\n  };\n  const onFinish = (callback, opts) => {\n    const callbacks = (opts === null || opts === void 0 ? void 0 : opts.oneTimeCallback) ? onFinishOneTimeCallbacks : onFinishCallbacks;\n    callbacks.push({ c: callback, o: opts });\n    return ani;\n  };\n  const clearOnFinish = () => {\n    onFinishCallbacks.length = 0;\n    onFinishOneTimeCallbacks.length = 0;\n    return ani;\n  };\n  /**\n   * Cancels any Web Animations and removes\n   * any animation properties from the\n   * the animation's elements.\n   */\n  const cleanUpElements = () => {\n    if (supportsWebAnimations) {\n      webAnimations.forEach((animation) => {\n        animation.cancel();\n      });\n      webAnimations.length = 0;\n    }\n    else {\n      const elementsArray = elements.slice();\n      raf(() => {\n        elementsArray.forEach((element) => {\n          removeStyleProperty(element, 'animation-name');\n          removeStyleProperty(element, 'animation-duration');\n          removeStyleProperty(element, 'animation-timing-function');\n          removeStyleProperty(element, 'animation-iteration-count');\n          removeStyleProperty(element, 'animation-delay');\n          removeStyleProperty(element, 'animation-play-state');\n          removeStyleProperty(element, 'animation-fill-mode');\n          removeStyleProperty(element, 'animation-direction');\n        });\n      });\n    }\n  };\n  /**\n   * Removes the animation's stylesheets\n   * from the DOM.\n   */\n  const cleanUpStyleSheets = () => {\n    stylesheets.forEach((stylesheet) => {\n      /**\n       * When sharing stylesheets, it's possible\n       * for another animation to have already\n       * cleaned up a particular stylesheet\n       */\n      if (stylesheet === null || stylesheet === void 0 ? void 0 : stylesheet.parentNode) {\n        stylesheet.parentNode.removeChild(stylesheet);\n      }\n    });\n    stylesheets.length = 0;\n  };\n  const beforeAddRead = (readFn) => {\n    _beforeAddReadFunctions.push(readFn);\n    return ani;\n  };\n  const beforeAddWrite = (writeFn) => {\n    _beforeAddWriteFunctions.push(writeFn);\n    return ani;\n  };\n  const afterAddRead = (readFn) => {\n    _afterAddReadFunctions.push(readFn);\n    return ani;\n  };\n  const afterAddWrite = (writeFn) => {\n    _afterAddWriteFunctions.push(writeFn);\n    return ani;\n  };\n  const beforeAddClass = (className) => {\n    beforeAddClasses = addClassToArray(beforeAddClasses, className);\n    return ani;\n  };\n  const beforeRemoveClass = (className) => {\n    beforeRemoveClasses = addClassToArray(beforeRemoveClasses, className);\n    return ani;\n  };\n  /**\n   * Set CSS inline styles to the animation's\n   * elements before the animation begins.\n   */\n  const beforeStyles = (styles = {}) => {\n    beforeStylesValue = styles;\n    return ani;\n  };\n  /**\n   * Clear CSS inline styles from the animation's\n   * elements before the animation begins.\n   */\n  const beforeClearStyles = (propertyNames = []) => {\n    for (const property of propertyNames) {\n      beforeStylesValue[property] = '';\n    }\n    return ani;\n  };\n  const afterAddClass = (className) => {\n    afterAddClasses = addClassToArray(afterAddClasses, className);\n    return ani;\n  };\n  const afterRemoveClass = (className) => {\n    afterRemoveClasses = addClassToArray(afterRemoveClasses, className);\n    return ani;\n  };\n  const afterStyles = (styles = {}) => {\n    afterStylesValue = styles;\n    return ani;\n  };\n  const afterClearStyles = (propertyNames = []) => {\n    for (const property of propertyNames) {\n      afterStylesValue[property] = '';\n    }\n    return ani;\n  };\n  const getFill = () => {\n    if (_fill !== undefined) {\n      return _fill;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getFill();\n    }\n    return 'both';\n  };\n  const getDirection = () => {\n    if (forceDirectionValue !== undefined) {\n      return forceDirectionValue;\n    }\n    if (_direction !== undefined) {\n      return _direction;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getDirection();\n    }\n    return 'normal';\n  };\n  const getEasing = () => {\n    if (shouldForceLinearEasing) {\n      return 'linear';\n    }\n    if (_easing !== undefined) {\n      return _easing;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getEasing();\n    }\n    return 'linear';\n  };\n  const getDuration = () => {\n    if (shouldForceSyncPlayback) {\n      return 0;\n    }\n    if (forceDurationValue !== undefined) {\n      return forceDurationValue;\n    }\n    if (_duration !== undefined) {\n      return _duration;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getDuration();\n    }\n    return 0;\n  };\n  const getIterations = () => {\n    if (_iterations !== undefined) {\n      return _iterations;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getIterations();\n    }\n    return 1;\n  };\n  const getDelay = () => {\n    if (forceDelayValue !== undefined) {\n      return forceDelayValue;\n    }\n    if (_delay !== undefined) {\n      return _delay;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getDelay();\n    }\n    return 0;\n  };\n  const getKeyframes = () => {\n    return _keyframes;\n  };\n  const direction = (animationDirection) => {\n    _direction = animationDirection;\n    update(true);\n    return ani;\n  };\n  const fill = (animationFill) => {\n    _fill = animationFill;\n    update(true);\n    return ani;\n  };\n  const delay = (animationDelay) => {\n    _delay = animationDelay;\n    update(true);\n    return ani;\n  };\n  const easing = (animationEasing) => {\n    _easing = animationEasing;\n    update(true);\n    return ani;\n  };\n  const duration = (animationDuration) => {\n    /**\n     * CSS Animation Durations of 0ms work fine on Chrome\n     * but do not run on Safari, so force it to 1ms to\n     * get it to run on both platforms.\n     */\n    if (!supportsWebAnimations && animationDuration === 0) {\n      animationDuration = 1;\n    }\n    _duration = animationDuration;\n    update(true);\n    return ani;\n  };\n  const iterations = (animationIterations) => {\n    _iterations = animationIterations;\n    update(true);\n    return ani;\n  };\n  const parent = (animation) => {\n    parentAnimation = animation;\n    return ani;\n  };\n  const addElement = (el) => {\n    if (el != null) {\n      if (el.nodeType === 1) {\n        elements.push(el);\n      }\n      else if (el.length >= 0) {\n        for (let i = 0; i < el.length; i++) {\n          elements.push(el[i]);\n        }\n      }\n      else {\n        console.error('Invalid addElement value');\n      }\n    }\n    return ani;\n  };\n  const addAnimation = (animationToAdd) => {\n    if (animationToAdd != null) {\n      if (Array.isArray(animationToAdd)) {\n        for (const animation of animationToAdd) {\n          animation.parent(ani);\n          childAnimations.push(animation);\n        }\n      }\n      else {\n        animationToAdd.parent(ani);\n        childAnimations.push(animationToAdd);\n      }\n    }\n    return ani;\n  };\n  const keyframes = (keyframeValues) => {\n    const different = _keyframes !== keyframeValues;\n    _keyframes = keyframeValues;\n    if (different) {\n      updateKeyframes(_keyframes);\n    }\n    return ani;\n  };\n  const updateKeyframes = (keyframeValues) => {\n    if (supportsWebAnimations) {\n      getWebAnimations().forEach((animation) => {\n        /**\n         * animation.effect's type is AnimationEffect.\n         * However, in this case we have a more specific\n         * type of AnimationEffect called KeyframeEffect which\n         * inherits from AnimationEffect. As a result,\n         * we cast animation.effect to KeyframeEffect.\n         */\n        const keyframeEffect = animation.effect;\n        /**\n         * setKeyframes is not supported in all browser\n         * versions that Ionic supports, so we need to\n         * check for support before using it.\n         */\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if (keyframeEffect.setKeyframes) {\n          keyframeEffect.setKeyframes(keyframeValues);\n        }\n        else {\n          const newEffect = new KeyframeEffect(keyframeEffect.target, keyframeValues, keyframeEffect.getTiming());\n          animation.effect = newEffect;\n        }\n      });\n    }\n    else {\n      initializeCSSAnimation();\n    }\n  };\n  /**\n   * Run all \"before\" animation hooks.\n   */\n  const beforeAnimation = () => {\n    // Runs all before read callbacks\n    _beforeAddReadFunctions.forEach((callback) => callback());\n    // Runs all before write callbacks\n    _beforeAddWriteFunctions.forEach((callback) => callback());\n    // Updates styles and classes before animation runs\n    const addClasses = beforeAddClasses;\n    const removeClasses = beforeRemoveClasses;\n    const styles = beforeStylesValue;\n    elements.forEach((el) => {\n      const elementClassList = el.classList;\n      addClasses.forEach((c) => elementClassList.add(c));\n      removeClasses.forEach((c) => elementClassList.remove(c));\n      for (const property in styles) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (styles.hasOwnProperty(property)) {\n          setStyleProperty(el, property, styles[property]);\n        }\n      }\n    });\n  };\n  /**\n   * Run all \"after\" animation hooks.\n   */\n  const afterAnimation = () => {\n    clearCSSAnimationsTimeout();\n    // Runs all after read callbacks\n    _afterAddReadFunctions.forEach((callback) => callback());\n    // Runs all after write callbacks\n    _afterAddWriteFunctions.forEach((callback) => callback());\n    // Updates styles and classes before animation ends\n    const currentStep = willComplete ? 1 : 0;\n    const addClasses = afterAddClasses;\n    const removeClasses = afterRemoveClasses;\n    const styles = afterStylesValue;\n    elements.forEach((el) => {\n      const elementClassList = el.classList;\n      addClasses.forEach((c) => elementClassList.add(c));\n      removeClasses.forEach((c) => elementClassList.remove(c));\n      for (const property in styles) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (styles.hasOwnProperty(property)) {\n          setStyleProperty(el, property, styles[property]);\n        }\n      }\n    });\n    onFinishCallbacks.forEach((onFinishCallback) => {\n      return onFinishCallback.c(currentStep, ani);\n    });\n    onFinishOneTimeCallbacks.forEach((onFinishCallback) => {\n      return onFinishCallback.c(currentStep, ani);\n    });\n    onFinishOneTimeCallbacks.length = 0;\n    shouldCalculateNumAnimations = true;\n    if (willComplete) {\n      finished = true;\n    }\n    willComplete = true;\n  };\n  const animationFinish = () => {\n    if (numAnimationsRunning === 0) {\n      return;\n    }\n    numAnimationsRunning--;\n    if (numAnimationsRunning === 0) {\n      afterAnimation();\n      if (parentAnimation) {\n        parentAnimation.animationFinish();\n      }\n    }\n  };\n  const initializeCSSAnimation = (toggleAnimationName = true) => {\n    cleanUpStyleSheets();\n    const processedKeyframes = processKeyframes(_keyframes);\n    elements.forEach((element) => {\n      if (processedKeyframes.length > 0) {\n        const keyframeRules = generateKeyframeRules(processedKeyframes);\n        keyframeName = animationId !== undefined ? animationId : generateKeyframeName(keyframeRules);\n        const stylesheet = createKeyframeStylesheet(keyframeName, keyframeRules, element);\n        stylesheets.push(stylesheet);\n        setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n        setStyleProperty(element, 'animation-timing-function', getEasing());\n        setStyleProperty(element, 'animation-delay', `${getDelay()}ms`);\n        setStyleProperty(element, 'animation-fill-mode', getFill());\n        setStyleProperty(element, 'animation-direction', getDirection());\n        const iterationsCount = getIterations() === Infinity ? 'infinite' : getIterations().toString();\n        setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n        setStyleProperty(element, 'animation-play-state', 'paused');\n        if (toggleAnimationName) {\n          setStyleProperty(element, 'animation-name', `${stylesheet.id}-alt`);\n        }\n        raf(() => {\n          setStyleProperty(element, 'animation-name', stylesheet.id || null);\n        });\n      }\n    });\n  };\n  const initializeWebAnimation = () => {\n    elements.forEach((element) => {\n      const animation = element.animate(_keyframes, {\n        id,\n        delay: getDelay(),\n        duration: getDuration(),\n        easing: getEasing(),\n        iterations: getIterations(),\n        fill: getFill(),\n        direction: getDirection(),\n      });\n      animation.pause();\n      webAnimations.push(animation);\n    });\n    if (webAnimations.length > 0) {\n      webAnimations[0].onfinish = () => {\n        animationFinish();\n      };\n    }\n  };\n  const initializeAnimation = (toggleAnimationName = true) => {\n    beforeAnimation();\n    if (_keyframes.length > 0) {\n      if (supportsWebAnimations) {\n        initializeWebAnimation();\n      }\n      else {\n        initializeCSSAnimation(toggleAnimationName);\n      }\n    }\n    initialized = true;\n  };\n  const setAnimationStep = (step) => {\n    step = Math.min(Math.max(step, 0), 0.9999);\n    if (supportsWebAnimations) {\n      webAnimations.forEach((animation) => {\n        // When creating the animation the delay is guaranteed to be set to a number.\n        animation.currentTime = animation.effect.getComputedTiming().delay + getDuration() * step;\n        animation.pause();\n      });\n    }\n    else {\n      const animationDuration = `-${getDuration() * step}ms`;\n      elements.forEach((element) => {\n        if (_keyframes.length > 0) {\n          setStyleProperty(element, 'animation-delay', animationDuration);\n          setStyleProperty(element, 'animation-play-state', 'paused');\n        }\n      });\n    }\n  };\n  const updateWebAnimation = (step) => {\n    webAnimations.forEach((animation) => {\n      animation.effect.updateTiming({\n        delay: getDelay(),\n        duration: getDuration(),\n        easing: getEasing(),\n        iterations: getIterations(),\n        fill: getFill(),\n        direction: getDirection(),\n      });\n    });\n    if (step !== undefined) {\n      setAnimationStep(step);\n    }\n  };\n  const updateCSSAnimation = (toggleAnimationName = true, step) => {\n    raf(() => {\n      elements.forEach((element) => {\n        setStyleProperty(element, 'animation-name', keyframeName || null);\n        setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n        setStyleProperty(element, 'animation-timing-function', getEasing());\n        setStyleProperty(element, 'animation-delay', step !== undefined ? `-${step * getDuration()}ms` : `${getDelay()}ms`);\n        setStyleProperty(element, 'animation-fill-mode', getFill() || null);\n        setStyleProperty(element, 'animation-direction', getDirection() || null);\n        const iterationsCount = getIterations() === Infinity ? 'infinite' : getIterations().toString();\n        setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n        if (toggleAnimationName) {\n          setStyleProperty(element, 'animation-name', `${keyframeName}-alt`);\n        }\n        raf(() => {\n          setStyleProperty(element, 'animation-name', keyframeName || null);\n        });\n      });\n    });\n  };\n  const update = (deep = false, toggleAnimationName = true, step) => {\n    if (deep) {\n      childAnimations.forEach((animation) => {\n        animation.update(deep, toggleAnimationName, step);\n      });\n    }\n    if (supportsWebAnimations) {\n      updateWebAnimation(step);\n    }\n    else {\n      updateCSSAnimation(toggleAnimationName, step);\n    }\n    return ani;\n  };\n  const progressStart = (forceLinearEasing = false, step) => {\n    childAnimations.forEach((animation) => {\n      animation.progressStart(forceLinearEasing, step);\n    });\n    pauseAnimation();\n    shouldForceLinearEasing = forceLinearEasing;\n    if (!initialized) {\n      initializeAnimation();\n    }\n    update(false, true, step);\n    return ani;\n  };\n  const progressStep = (step) => {\n    childAnimations.forEach((animation) => {\n      animation.progressStep(step);\n    });\n    setAnimationStep(step);\n    return ani;\n  };\n  const progressEnd = (playTo, step, dur) => {\n    shouldForceLinearEasing = false;\n    childAnimations.forEach((animation) => {\n      animation.progressEnd(playTo, step, dur);\n    });\n    if (dur !== undefined) {\n      forceDurationValue = dur;\n    }\n    finished = false;\n    willComplete = true;\n    if (playTo === 0) {\n      forceDirectionValue = getDirection() === 'reverse' ? 'normal' : 'reverse';\n      if (forceDirectionValue === 'reverse') {\n        willComplete = false;\n      }\n      if (supportsWebAnimations) {\n        update();\n        setAnimationStep(1 - step);\n      }\n      else {\n        forceDelayValue = (1 - step) * getDuration() * -1;\n        update(false, false);\n      }\n    }\n    else if (playTo === 1) {\n      if (supportsWebAnimations) {\n        update();\n        setAnimationStep(step);\n      }\n      else {\n        forceDelayValue = step * getDuration() * -1;\n        update(false, false);\n      }\n    }\n    if (playTo !== undefined) {\n      onFinish(() => {\n        forceDurationValue = undefined;\n        forceDirectionValue = undefined;\n        forceDelayValue = undefined;\n      }, {\n        oneTimeCallback: true,\n      });\n      if (!parentAnimation) {\n        play();\n      }\n    }\n    return ani;\n  };\n  const pauseAnimation = () => {\n    if (initialized) {\n      if (supportsWebAnimations) {\n        webAnimations.forEach((animation) => {\n          animation.pause();\n        });\n      }\n      else {\n        elements.forEach((element) => {\n          setStyleProperty(element, 'animation-play-state', 'paused');\n        });\n      }\n      paused = true;\n    }\n  };\n  const pause = () => {\n    childAnimations.forEach((animation) => {\n      animation.pause();\n    });\n    pauseAnimation();\n    return ani;\n  };\n  const onAnimationEndFallback = () => {\n    cssAnimationsTimerFallback = undefined;\n    animationFinish();\n  };\n  const clearCSSAnimationsTimeout = () => {\n    if (cssAnimationsTimerFallback) {\n      clearTimeout(cssAnimationsTimerFallback);\n    }\n  };\n  const playCSSAnimations = () => {\n    clearCSSAnimationsTimeout();\n    raf(() => {\n      elements.forEach((element) => {\n        if (_keyframes.length > 0) {\n          setStyleProperty(element, 'animation-play-state', 'running');\n        }\n      });\n    });\n    if (_keyframes.length === 0 || elements.length === 0) {\n      animationFinish();\n    }\n    else {\n      /**\n       * This is a catchall in the event that a CSS Animation did not finish.\n       * The Web Animations API has mechanisms in place for preventing this.\n       * CSS Animations will not fire an `animationend` event\n       * for elements with `display: none`. The Web Animations API\n       * accounts for this, but using raw CSS Animations requires\n       * this workaround.\n       */\n      const animationDelay = getDelay() || 0;\n      const animationDuration = getDuration() || 0;\n      const animationIterations = getIterations() || 1;\n      // No need to set a timeout when animation has infinite iterations\n      if (isFinite(animationIterations)) {\n        cssAnimationsTimerFallback = setTimeout(onAnimationEndFallback, animationDelay + animationDuration * animationIterations + ANIMATION_END_FALLBACK_PADDING_MS);\n      }\n      animationEnd(elements[0], () => {\n        clearCSSAnimationsTimeout();\n        /**\n         * Ensure that clean up\n         * is always done a frame\n         * before the onFinish handlers\n         * are fired. Otherwise, there\n         * may be flickering if a new\n         * animation is started on the same\n         * element too quickly\n         */\n        raf(() => {\n          clearCSSAnimationPlayState();\n          raf(animationFinish);\n        });\n      });\n    }\n  };\n  const clearCSSAnimationPlayState = () => {\n    elements.forEach((element) => {\n      removeStyleProperty(element, 'animation-duration');\n      removeStyleProperty(element, 'animation-delay');\n      removeStyleProperty(element, 'animation-play-state');\n    });\n  };\n  const playWebAnimations = () => {\n    webAnimations.forEach((animation) => {\n      animation.play();\n    });\n    if (_keyframes.length === 0 || elements.length === 0) {\n      animationFinish();\n    }\n  };\n  const resetAnimation = () => {\n    if (supportsWebAnimations) {\n      setAnimationStep(0);\n      updateWebAnimation();\n    }\n    else {\n      updateCSSAnimation();\n    }\n  };\n  const play = (opts) => {\n    return new Promise((resolve) => {\n      if (opts === null || opts === void 0 ? void 0 : opts.sync) {\n        shouldForceSyncPlayback = true;\n        onFinish(() => (shouldForceSyncPlayback = false), { oneTimeCallback: true });\n      }\n      if (!initialized) {\n        initializeAnimation();\n      }\n      if (finished) {\n        resetAnimation();\n        finished = false;\n      }\n      if (shouldCalculateNumAnimations) {\n        numAnimationsRunning = childAnimations.length + 1;\n        shouldCalculateNumAnimations = false;\n      }\n      /**\n       * When one of these callbacks fires we\n       * need to clear the other's callback otherwise\n       * you can potentially get these callbacks\n       * firing multiple times if the play method\n       * is subsequently called.\n       * Example:\n       * animation.play() (onStop and onFinish callbacks are registered)\n       * animation.stop() (onStop callback is fired, onFinish is not)\n       * animation.play() (onStop and onFinish callbacks are registered)\n       * Total onStop callbacks: 1\n       * Total onFinish callbacks: 2\n       */\n      const onStopCallback = () => {\n        clearCallback(onFinishCallback, onFinishOneTimeCallbacks);\n        resolve();\n      };\n      const onFinishCallback = () => {\n        clearCallback(onStopCallback, onStopOneTimeCallbacks);\n        resolve();\n      };\n      /**\n       * The play method resolves when an animation\n       * run either finishes or is cancelled.\n       */\n      onFinish(onFinishCallback, { oneTimeCallback: true });\n      onStop(onStopCallback, { oneTimeCallback: true });\n      childAnimations.forEach((animation) => {\n        animation.play();\n      });\n      if (supportsWebAnimations) {\n        playWebAnimations();\n      }\n      else {\n        playCSSAnimations();\n      }\n      paused = false;\n    });\n  };\n  /**\n   * Stops an animation and resets it state to the\n   * beginning. This does not fire any onFinish\n   * callbacks because the animation did not finish.\n   * However, since the animation was not destroyed\n   * (i.e. the animation could run again) we do not\n   * clear the onFinish callbacks.\n   */\n  const stop = () => {\n    childAnimations.forEach((animation) => {\n      animation.stop();\n    });\n    if (initialized) {\n      cleanUpElements();\n      initialized = false;\n    }\n    resetFlags();\n    onStopOneTimeCallbacks.forEach((onStopCallback) => onStopCallback.c(0, ani));\n    onStopOneTimeCallbacks.length = 0;\n  };\n  const from = (property, value) => {\n    const firstFrame = _keyframes[0];\n    if (firstFrame !== undefined && (firstFrame.offset === undefined || firstFrame.offset === 0)) {\n      firstFrame[property] = value;\n    }\n    else {\n      _keyframes = [{ offset: 0, [property]: value }, ..._keyframes];\n    }\n    return ani;\n  };\n  const to = (property, value) => {\n    const lastFrame = _keyframes[_keyframes.length - 1];\n    if (lastFrame !== undefined && (lastFrame.offset === undefined || lastFrame.offset === 1)) {\n      lastFrame[property] = value;\n    }\n    else {\n      _keyframes = [..._keyframes, { offset: 1, [property]: value }];\n    }\n    return ani;\n  };\n  const fromTo = (property, fromValue, toValue) => {\n    return from(property, fromValue).to(property, toValue);\n  };\n  return (ani = {\n    parentAnimation,\n    elements,\n    childAnimations,\n    id,\n    animationFinish,\n    from,\n    to,\n    fromTo,\n    parent,\n    play,\n    pause,\n    stop,\n    destroy,\n    keyframes,\n    addAnimation,\n    addElement,\n    update,\n    fill,\n    direction,\n    iterations,\n    duration,\n    easing,\n    delay,\n    getWebAnimations,\n    getKeyframes,\n    getFill,\n    getDirection,\n    getDelay,\n    getIterations,\n    getEasing,\n    getDuration,\n    afterAddRead,\n    afterAddWrite,\n    afterClearStyles,\n    afterStyles,\n    afterRemoveClass,\n    afterAddClass,\n    beforeAddRead,\n    beforeAddWrite,\n    beforeClearStyles,\n    beforeStyles,\n    beforeRemoveClass,\n    beforeAddClass,\n    onFinish,\n    isRunning,\n    progressStart,\n    progressStep,\n    progressEnd,\n  });\n};\n\nexport { createAnimation as c };\n"],"names":["animationPrefix","processKeyframes","keyframes","forEach","keyframe","key","hasOwnProperty","value","newKey","convertCamelCaseToHypen","str","replace","toLowerCase","getAnimationPrefix","el","undefined","supportsUnprefixed","style","animationName","supportsWebkitPrefix","webkitAnimationName","setStyleProperty","element","propertyName","prefix","startsWith","setProperty","removeStyleProperty","removeProperty","animationEnd","callback","unRegTrans","opts","passive","unregister","onTransitionEnd","ev","target","addEventListener","removeEventListener","generateKeyframeRules","map","offset","frameString","property","push","join","keyframeIds","generateKeyframeName","keyframeRules","index","indexOf","getStyleContainer","rootNode","getRootNode","head","createKeyframeStylesheet","keyframeName","_a","styleContainer","keyframePrefix","existingStylesheet","querySelector","stylesheet","ownerDocument","document","createElement","id","textContent","appendChild","addClassToArray","classes","className","classNameToAppend","Array","isArray","createAnimation","animationId","_delay","_duration","_easing","_iterations","_fill","_direction","parentAnimation","cssAnimationsTimerFallback","forceDirectionValue","forceDurationValue","forceDelayValue","ani","_keyframes","beforeAddClasses","beforeRemoveClasses","initialized","beforeStylesValue","afterAddClasses","afterRemoveClasses","afterStylesValue","numAnimationsRunning","shouldForceLinearEasing","shouldForceSyncPlayback","willComplete","finished","shouldCalculateNumAnimations","paused","onFinishCallbacks","onFinishOneTimeCallbacks","onStopOneTimeCallbacks","elements","childAnimations","stylesheets","_beforeAddReadFunctions","_beforeAddWriteFunctions","_afterAddReadFunctions","_afterAddWriteFunctions","webAnimations","supportsAnimationEffect","AnimationEffect","w","supportsWebAnimations","Element","prototype","animate","ANIMATION_END_FALLBACK_PADDING_MS","getWebAnimations","destroy","clearStyleSheets","childAnimation","cleanUp","length","clearOnFinish","cleanUpElements","cleanUpStyleSheets","resetFlags","isRunning","clearCallback","callbackToRemove","callbackObjects","findIndex","callbackObject","c","splice","onStop","o","onFinish","callbacks","oneTimeCallback","animation","cancel","elementsArray","slice","r","parentNode","removeChild","beforeAddRead","readFn","beforeAddWrite","writeFn","afterAddRead","afterAddWrite","beforeAddClass","beforeRemoveClass","beforeStyles","styles","beforeClearStyles","propertyNames","afterAddClass","afterRemoveClass","afterStyles","afterClearStyles","getFill","getDirection","getEasing","getDuration","getIterations","getDelay","getKeyframes","direction","animationDirection","update","fill","animationFill","delay","animationDelay","easing","animationEasing","duration","animationDuration","iterations","animationIterations","parent","addElement","nodeType","i","console","error","addAnimation","animationToAdd","keyframeValues","different","updateKeyframes","keyframeEffect","effect","setKeyframes","newEffect","KeyframeEffect","getTiming","initializeCSSAnimation","beforeAnimation","addClasses","removeClasses","elementClassList","classList","add","remove","afterAnimation","clearCSSAnimationsTimeout","currentStep","onFinishCallback","animationFinish","toggleAnimationName","processedKeyframes","iterationsCount","Infinity","toString","initializeWebAnimation","pause","onfinish","initializeAnimation","setAnimationStep","step","Math","min","max","currentTime","getComputedTiming","updateWebAnimation","updateTiming","updateCSSAnimation","deep","progressStart","forceLinearEasing","pauseAnimation","progressStep","progressEnd","playTo","dur","play","onAnimationEndFallback","clearTimeout","playCSSAnimations","isFinite","setTimeout","clearCSSAnimationPlayState","playWebAnimations","resetAnimation","Promise","resolve","sync","onStopCallback","stop","from","firstFrame","to","lastFrame","fromTo","fromValue","toValue"],"sourceRoot":""}