{"version":3,"file":"js/789.efd2adbb.js","mappings":"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","sources":["webpack://eswc2024/./node_modules/@ionic/core/components/gesture-controller.js","webpack://eswc2024/./node_modules/@ionic/core/components/index3.js","webpack://eswc2024/./node_modules/@ionic/core/components/swipe-back.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nclass GestureController {\n    constructor() {\n        this.gestureId = 0;\n        this.requestedStart = new Map();\n        this.disabledGestures = new Map();\n        this.disabledScroll = new Set();\n    }\n    /**\n     * Creates a gesture delegate based on the GestureConfig passed\n     */\n    createGesture(config) {\n        var _a;\n        return new GestureDelegate(this, this.newID(), config.name, (_a = config.priority) !== null && _a !== void 0 ? _a : 0, !!config.disableScroll);\n    }\n    /**\n     * Creates a blocker that will block any other gesture events from firing. Set in the ion-gesture component.\n     */\n    createBlocker(opts = {}) {\n        return new BlockerDelegate(this, this.newID(), opts.disable, !!opts.disableScroll);\n    }\n    start(gestureName, id, priority) {\n        if (!this.canStart(gestureName)) {\n            this.requestedStart.delete(id);\n            return false;\n        }\n        this.requestedStart.set(id, priority);\n        return true;\n    }\n    capture(gestureName, id, priority) {\n        if (!this.start(gestureName, id, priority)) {\n            return false;\n        }\n        const requestedStart = this.requestedStart;\n        let maxPriority = -10000;\n        requestedStart.forEach((value) => {\n            maxPriority = Math.max(maxPriority, value);\n        });\n        if (maxPriority === priority) {\n            this.capturedId = id;\n            requestedStart.clear();\n            const event = new CustomEvent('ionGestureCaptured', { detail: { gestureName } });\n            document.dispatchEvent(event);\n            return true;\n        }\n        requestedStart.delete(id);\n        return false;\n    }\n    release(id) {\n        this.requestedStart.delete(id);\n        if (this.capturedId === id) {\n            this.capturedId = undefined;\n        }\n    }\n    disableGesture(gestureName, id) {\n        let set = this.disabledGestures.get(gestureName);\n        if (set === undefined) {\n            set = new Set();\n            this.disabledGestures.set(gestureName, set);\n        }\n        set.add(id);\n    }\n    enableGesture(gestureName, id) {\n        const set = this.disabledGestures.get(gestureName);\n        if (set !== undefined) {\n            set.delete(id);\n        }\n    }\n    disableScroll(id) {\n        this.disabledScroll.add(id);\n        if (this.disabledScroll.size === 1) {\n            document.body.classList.add(BACKDROP_NO_SCROLL);\n        }\n    }\n    enableScroll(id) {\n        this.disabledScroll.delete(id);\n        if (this.disabledScroll.size === 0) {\n            document.body.classList.remove(BACKDROP_NO_SCROLL);\n        }\n    }\n    canStart(gestureName) {\n        if (this.capturedId !== undefined) {\n            // a gesture already captured\n            return false;\n        }\n        if (this.isDisabled(gestureName)) {\n            return false;\n        }\n        return true;\n    }\n    isCaptured() {\n        return this.capturedId !== undefined;\n    }\n    isScrollDisabled() {\n        return this.disabledScroll.size > 0;\n    }\n    isDisabled(gestureName) {\n        const disabled = this.disabledGestures.get(gestureName);\n        if (disabled && disabled.size > 0) {\n            return true;\n        }\n        return false;\n    }\n    newID() {\n        this.gestureId++;\n        return this.gestureId;\n    }\n}\nclass GestureDelegate {\n    constructor(ctrl, id, name, priority, disableScroll) {\n        this.id = id;\n        this.name = name;\n        this.disableScroll = disableScroll;\n        this.priority = priority * 1000000 + id;\n        this.ctrl = ctrl;\n    }\n    canStart() {\n        if (!this.ctrl) {\n            return false;\n        }\n        return this.ctrl.canStart(this.name);\n    }\n    start() {\n        if (!this.ctrl) {\n            return false;\n        }\n        return this.ctrl.start(this.name, this.id, this.priority);\n    }\n    capture() {\n        if (!this.ctrl) {\n            return false;\n        }\n        const captured = this.ctrl.capture(this.name, this.id, this.priority);\n        if (captured && this.disableScroll) {\n            this.ctrl.disableScroll(this.id);\n        }\n        return captured;\n    }\n    release() {\n        if (this.ctrl) {\n            this.ctrl.release(this.id);\n            if (this.disableScroll) {\n                this.ctrl.enableScroll(this.id);\n            }\n        }\n    }\n    destroy() {\n        this.release();\n        this.ctrl = undefined;\n    }\n}\nclass BlockerDelegate {\n    constructor(ctrl, id, disable, disableScroll) {\n        this.id = id;\n        this.disable = disable;\n        this.disableScroll = disableScroll;\n        this.ctrl = ctrl;\n    }\n    block() {\n        if (!this.ctrl) {\n            return;\n        }\n        if (this.disable) {\n            for (const gesture of this.disable) {\n                this.ctrl.disableGesture(gesture, this.id);\n            }\n        }\n        if (this.disableScroll) {\n            this.ctrl.disableScroll(this.id);\n        }\n    }\n    unblock() {\n        if (!this.ctrl) {\n            return;\n        }\n        if (this.disable) {\n            for (const gesture of this.disable) {\n                this.ctrl.enableGesture(gesture, this.id);\n            }\n        }\n        if (this.disableScroll) {\n            this.ctrl.enableScroll(this.id);\n        }\n    }\n    destroy() {\n        this.unblock();\n        this.ctrl = undefined;\n    }\n}\nconst BACKDROP_NO_SCROLL = 'backdrop-no-scroll';\nconst GESTURE_CONTROLLER = new GestureController();\n\nexport { GESTURE_CONTROLLER as G };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\nexport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\n\nconst addEventListener = (el, // TODO(FW-2832): type\neventName, callback, opts) => {\n    // use event listener options when supported\n    // otherwise it's just a boolean for the \"capture\" arg\n    const listenerOpts = supportsPassive(el)\n        ? {\n            capture: !!opts.capture,\n            passive: !!opts.passive,\n        }\n        : !!opts.capture;\n    let add;\n    let remove;\n    if (el['__zone_symbol__addEventListener']) {\n        add = '__zone_symbol__addEventListener';\n        remove = '__zone_symbol__removeEventListener';\n    }\n    else {\n        add = 'addEventListener';\n        remove = 'removeEventListener';\n    }\n    el[add](eventName, callback, listenerOpts);\n    return () => {\n        el[remove](eventName, callback, listenerOpts);\n    };\n};\nconst supportsPassive = (node) => {\n    if (_sPassive === undefined) {\n        try {\n            const opts = Object.defineProperty({}, 'passive', {\n                get: () => {\n                    _sPassive = true;\n                },\n            });\n            node.addEventListener('optsTest', () => {\n                return;\n            }, opts);\n        }\n        catch (e) {\n            _sPassive = false;\n        }\n    }\n    return !!_sPassive;\n};\nlet _sPassive;\n\nconst MOUSE_WAIT = 2000;\n// TODO(FW-2832): types\nconst createPointerEvents = (el, pointerDown, pointerMove, pointerUp, options) => {\n    let rmTouchStart;\n    let rmTouchMove;\n    let rmTouchEnd;\n    let rmTouchCancel;\n    let rmMouseStart;\n    let rmMouseMove;\n    let rmMouseUp;\n    let lastTouchEvent = 0;\n    const handleTouchStart = (ev) => {\n        lastTouchEvent = Date.now() + MOUSE_WAIT;\n        if (!pointerDown(ev)) {\n            return;\n        }\n        if (!rmTouchMove && pointerMove) {\n            rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\n        }\n        /**\n         * Events are dispatched on the element that is tapped and bubble up to\n         * the reference element in the gesture. In the event that the element this\n         * event was first dispatched on is removed from the DOM, the event will no\n         * longer bubble up to our reference element. This leaves the gesture in an\n         * unusable state. To account for this, the touchend and touchcancel listeners\n         * should be added to the event target so that they still fire even if the target\n         * is removed from the DOM.\n         */\n        if (!rmTouchEnd) {\n            rmTouchEnd = addEventListener(ev.target, 'touchend', handleTouchEnd, options);\n        }\n        if (!rmTouchCancel) {\n            rmTouchCancel = addEventListener(ev.target, 'touchcancel', handleTouchEnd, options);\n        }\n    };\n    const handleMouseDown = (ev) => {\n        if (lastTouchEvent > Date.now()) {\n            return;\n        }\n        if (!pointerDown(ev)) {\n            return;\n        }\n        if (!rmMouseMove && pointerMove) {\n            rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\n        }\n        if (!rmMouseUp) {\n            rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\n        }\n    };\n    const handleTouchEnd = (ev) => {\n        stopTouch();\n        if (pointerUp) {\n            pointerUp(ev);\n        }\n    };\n    const handleMouseUp = (ev) => {\n        stopMouse();\n        if (pointerUp) {\n            pointerUp(ev);\n        }\n    };\n    const stopTouch = () => {\n        if (rmTouchMove) {\n            rmTouchMove();\n        }\n        if (rmTouchEnd) {\n            rmTouchEnd();\n        }\n        if (rmTouchCancel) {\n            rmTouchCancel();\n        }\n        rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\n    };\n    const stopMouse = () => {\n        if (rmMouseMove) {\n            rmMouseMove();\n        }\n        if (rmMouseUp) {\n            rmMouseUp();\n        }\n        rmMouseMove = rmMouseUp = undefined;\n    };\n    const stop = () => {\n        stopTouch();\n        stopMouse();\n    };\n    const enable = (isEnabled = true) => {\n        if (!isEnabled) {\n            if (rmTouchStart) {\n                rmTouchStart();\n            }\n            if (rmMouseStart) {\n                rmMouseStart();\n            }\n            rmTouchStart = rmMouseStart = undefined;\n            stop();\n        }\n        else {\n            if (!rmTouchStart) {\n                rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\n            }\n            if (!rmMouseStart) {\n                rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\n            }\n        }\n    };\n    const destroy = () => {\n        enable(false);\n        pointerUp = pointerMove = pointerDown = undefined;\n    };\n    return {\n        enable,\n        stop,\n        destroy,\n    };\n};\nconst getDocument = (node) => {\n    return node instanceof Document ? node : node.ownerDocument;\n};\n\nconst createPanRecognizer = (direction, thresh, maxAngle) => {\n    const radians = maxAngle * (Math.PI / 180);\n    const isDirX = direction === 'x';\n    const maxCosine = Math.cos(radians);\n    const threshold = thresh * thresh;\n    let startX = 0;\n    let startY = 0;\n    let dirty = false;\n    let isPan = 0;\n    return {\n        start(x, y) {\n            startX = x;\n            startY = y;\n            isPan = 0;\n            dirty = true;\n        },\n        detect(x, y) {\n            if (!dirty) {\n                return false;\n            }\n            const deltaX = x - startX;\n            const deltaY = y - startY;\n            const distance = deltaX * deltaX + deltaY * deltaY;\n            if (distance < threshold) {\n                return false;\n            }\n            const hypotenuse = Math.sqrt(distance);\n            const cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\n            if (cosine > maxCosine) {\n                isPan = 1;\n            }\n            else if (cosine < -maxCosine) {\n                isPan = -1;\n            }\n            else {\n                isPan = 0;\n            }\n            dirty = false;\n            return true;\n        },\n        isGesture() {\n            return isPan !== 0;\n        },\n        getDirection() {\n            return isPan;\n        },\n    };\n};\n\n// TODO(FW-2832): types\nconst createGesture = (config) => {\n    let hasCapturedPan = false;\n    let hasStartedPan = false;\n    let hasFiredStart = true;\n    let isMoveQueued = false;\n    const finalConfig = Object.assign({ disableScroll: false, direction: 'x', gesturePriority: 0, passive: true, maxAngle: 40, threshold: 10 }, config);\n    const canStart = finalConfig.canStart;\n    const onWillStart = finalConfig.onWillStart;\n    const onStart = finalConfig.onStart;\n    const onEnd = finalConfig.onEnd;\n    const notCaptured = finalConfig.notCaptured;\n    const onMove = finalConfig.onMove;\n    const threshold = finalConfig.threshold;\n    const passive = finalConfig.passive;\n    const blurOnStart = finalConfig.blurOnStart;\n    const detail = {\n        type: 'pan',\n        startX: 0,\n        startY: 0,\n        startTime: 0,\n        currentX: 0,\n        currentY: 0,\n        velocityX: 0,\n        velocityY: 0,\n        deltaX: 0,\n        deltaY: 0,\n        currentTime: 0,\n        event: undefined,\n        data: undefined,\n    };\n    const pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\n    const gesture = GESTURE_CONTROLLER.createGesture({\n        name: config.gestureName,\n        priority: config.gesturePriority,\n        disableScroll: config.disableScroll,\n    });\n    const pointerDown = (ev) => {\n        const timeStamp = now(ev);\n        if (hasStartedPan || !hasFiredStart) {\n            return false;\n        }\n        updateDetail(ev, detail);\n        detail.startX = detail.currentX;\n        detail.startY = detail.currentY;\n        detail.startTime = detail.currentTime = timeStamp;\n        detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\n        detail.event = ev;\n        // Check if gesture can start\n        if (canStart && canStart(detail) === false) {\n            return false;\n        }\n        // Release fallback\n        gesture.release();\n        // Start gesture\n        if (!gesture.start()) {\n            return false;\n        }\n        hasStartedPan = true;\n        if (threshold === 0) {\n            return tryToCapturePan();\n        }\n        pan.start(detail.startX, detail.startY);\n        return true;\n    };\n    const pointerMove = (ev) => {\n        // fast path, if gesture is currently captured\n        // do minimum job to get user-land even dispatched\n        if (hasCapturedPan) {\n            if (!isMoveQueued && hasFiredStart) {\n                isMoveQueued = true;\n                calcGestureData(detail, ev);\n                requestAnimationFrame(fireOnMove);\n            }\n            return;\n        }\n        // gesture is currently being detected\n        calcGestureData(detail, ev);\n        if (pan.detect(detail.currentX, detail.currentY)) {\n            if (!pan.isGesture() || !tryToCapturePan()) {\n                abortGesture();\n            }\n        }\n    };\n    const fireOnMove = () => {\n        // Since fireOnMove is called inside a RAF, onEnd() might be called,\n        // we must double check hasCapturedPan\n        if (!hasCapturedPan) {\n            return;\n        }\n        isMoveQueued = false;\n        if (onMove) {\n            onMove(detail);\n        }\n    };\n    const tryToCapturePan = () => {\n        if (!gesture.capture()) {\n            return false;\n        }\n        hasCapturedPan = true;\n        hasFiredStart = false;\n        // reset start position since the real user-land event starts here\n        // If the pan detector threshold is big, not resetting the start position\n        // will cause a jump in the animation equal to the detector threshold.\n        // the array of positions used to calculate the gesture velocity does not\n        // need to be cleaned, more points in the positions array always results in a\n        // more accurate value of the velocity.\n        detail.startX = detail.currentX;\n        detail.startY = detail.currentY;\n        detail.startTime = detail.currentTime;\n        if (onWillStart) {\n            onWillStart(detail).then(fireOnStart);\n        }\n        else {\n            fireOnStart();\n        }\n        return true;\n    };\n    const blurActiveElement = () => {\n        if (typeof document !== 'undefined') {\n            const activeElement = document.activeElement;\n            if (activeElement === null || activeElement === void 0 ? void 0 : activeElement.blur) {\n                activeElement.blur();\n            }\n        }\n    };\n    const fireOnStart = () => {\n        if (blurOnStart) {\n            blurActiveElement();\n        }\n        if (onStart) {\n            onStart(detail);\n        }\n        hasFiredStart = true;\n    };\n    const reset = () => {\n        hasCapturedPan = false;\n        hasStartedPan = false;\n        isMoveQueued = false;\n        hasFiredStart = true;\n        gesture.release();\n    };\n    // END *************************\n    const pointerUp = (ev) => {\n        const tmpHasCaptured = hasCapturedPan;\n        const tmpHasFiredStart = hasFiredStart;\n        reset();\n        if (!tmpHasFiredStart) {\n            return;\n        }\n        calcGestureData(detail, ev);\n        // Try to capture press\n        if (tmpHasCaptured) {\n            if (onEnd) {\n                onEnd(detail);\n            }\n            return;\n        }\n        // Not captured any event\n        if (notCaptured) {\n            notCaptured(detail);\n        }\n    };\n    const pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\n        capture: false,\n        passive,\n    });\n    const abortGesture = () => {\n        reset();\n        pointerEvents.stop();\n        if (notCaptured) {\n            notCaptured(detail);\n        }\n    };\n    return {\n        enable(enable = true) {\n            if (!enable) {\n                if (hasCapturedPan) {\n                    pointerUp(undefined);\n                }\n                reset();\n            }\n            pointerEvents.enable(enable);\n        },\n        destroy() {\n            gesture.destroy();\n            pointerEvents.destroy();\n        },\n    };\n};\nconst calcGestureData = (detail, ev) => {\n    if (!ev) {\n        return;\n    }\n    const prevX = detail.currentX;\n    const prevY = detail.currentY;\n    const prevT = detail.currentTime;\n    updateDetail(ev, detail);\n    const currentX = detail.currentX;\n    const currentY = detail.currentY;\n    const timestamp = (detail.currentTime = now(ev));\n    const timeDelta = timestamp - prevT;\n    if (timeDelta > 0 && timeDelta < 100) {\n        const velocityX = (currentX - prevX) / timeDelta;\n        const velocityY = (currentY - prevY) / timeDelta;\n        detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\n        detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\n    }\n    detail.deltaX = currentX - detail.startX;\n    detail.deltaY = currentY - detail.startY;\n    detail.event = ev;\n};\nconst updateDetail = (ev, detail) => {\n    // get X coordinates for either a mouse click\n    // or a touch depending on the given event\n    let x = 0;\n    let y = 0;\n    if (ev) {\n        const changedTouches = ev.changedTouches;\n        if (changedTouches && changedTouches.length > 0) {\n            const touch = changedTouches[0];\n            x = touch.clientX;\n            y = touch.clientY;\n        }\n        else if (ev.pageX !== undefined) {\n            x = ev.pageX;\n            y = ev.pageY;\n        }\n    }\n    detail.currentX = x;\n    detail.currentY = y;\n};\nconst now = (ev) => {\n    return ev.timeStamp || Date.now();\n};\n\nexport { createGesture };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { m as clamp } from './helpers.js';\nimport { i as isRTL } from './dir.js';\nimport { createGesture } from './index3.js';\n\nconst createSwipeBackGesture = (el, canStartHandler, onStartHandler, onMoveHandler, onEndHandler) => {\n    const win = el.ownerDocument.defaultView;\n    let rtl = isRTL(el);\n    /**\n     * Determine if a gesture is near the edge\n     * of the screen. If true, then the swipe\n     * to go back gesture should proceed.\n     */\n    const isAtEdge = (detail) => {\n        const threshold = 50;\n        const { startX } = detail;\n        if (rtl) {\n            return startX >= win.innerWidth - threshold;\n        }\n        return startX <= threshold;\n    };\n    const getDeltaX = (detail) => {\n        return rtl ? -detail.deltaX : detail.deltaX;\n    };\n    const getVelocityX = (detail) => {\n        return rtl ? -detail.velocityX : detail.velocityX;\n    };\n    const canStart = (detail) => {\n        /**\n         * The user's locale can change mid-session,\n         * so we need to check text direction at\n         * the beginning of every gesture.\n         */\n        rtl = isRTL(el);\n        return isAtEdge(detail) && canStartHandler();\n    };\n    const onMove = (detail) => {\n        // set the transition animation's progress\n        const delta = getDeltaX(detail);\n        const stepValue = delta / win.innerWidth;\n        onMoveHandler(stepValue);\n    };\n    const onEnd = (detail) => {\n        // the swipe back gesture has ended\n        const delta = getDeltaX(detail);\n        const width = win.innerWidth;\n        const stepValue = delta / width;\n        const velocity = getVelocityX(detail);\n        const z = width / 2.0;\n        const shouldComplete = velocity >= 0 && (velocity > 0.2 || delta > z);\n        const missing = shouldComplete ? 1 - stepValue : stepValue;\n        const missingDistance = missing * width;\n        let realDur = 0;\n        if (missingDistance > 5) {\n            const dur = missingDistance / Math.abs(velocity);\n            realDur = Math.min(dur, 540);\n        }\n        onEndHandler(shouldComplete, stepValue <= 0 ? 0.01 : clamp(0, stepValue, 0.9999), realDur);\n    };\n    return createGesture({\n        el,\n        gestureName: 'goback-swipe',\n        /**\n         * Swipe to go back should have priority over other horizontal swipe\n         * gestures. These gestures have a priority of 100 which is why 101 was chosen here.\n         */\n        gesturePriority: 101,\n        threshold: 10,\n        canStart,\n        onStart: onStartHandler,\n        onMove,\n        onEnd,\n    });\n};\n\nexport { createSwipeBackGesture };\n"],"names":["GestureController","constructor","this","gestureId","requestedStart","Map","disabledGestures","disabledScroll","Set","createGesture","config","_a","GestureDelegate","newID","name","priority","disableScroll","createBlocker","opts","BlockerDelegate","disable","start","gestureName","id","canStart","set","delete","capture","maxPriority","forEach","value","Math","max","capturedId","clear","event","CustomEvent","detail","document","dispatchEvent","release","undefined","disableGesture","get","add","enableGesture","size","body","classList","BACKDROP_NO_SCROLL","enableScroll","remove","isDisabled","isCaptured","isScrollDisabled","disabled","ctrl","captured","destroy","block","gesture","unblock","GESTURE_CONTROLLER","addEventListener","el","eventName","callback","listenerOpts","supportsPassive","passive","node","_sPassive","Object","defineProperty","e","MOUSE_WAIT","createPointerEvents","pointerDown","pointerMove","pointerUp","options","rmTouchStart","rmTouchMove","rmTouchEnd","rmTouchCancel","rmMouseStart","rmMouseMove","rmMouseUp","lastTouchEvent","handleTouchStart","ev","Date","now","target","handleTouchEnd","handleMouseDown","getDocument","handleMouseUp","stopTouch","stopMouse","stop","enable","isEnabled","Document","ownerDocument","createPanRecognizer","direction","thresh","maxAngle","radians","PI","isDirX","maxCosine","cos","threshold","startX","startY","dirty","isPan","x","y","detect","deltaX","deltaY","distance","hypotenuse","sqrt","cosine","isGesture","getDirection","hasCapturedPan","hasStartedPan","hasFiredStart","isMoveQueued","finalConfig","assign","gesturePriority","onWillStart","onStart","onEnd","notCaptured","onMove","blurOnStart","type","startTime","currentX","currentY","velocityX","velocityY","currentTime","data","pan","timeStamp","updateDetail","tryToCapturePan","calcGestureData","requestAnimationFrame","fireOnMove","abortGesture","then","fireOnStart","blurActiveElement","activeElement","blur","reset","tmpHasCaptured","tmpHasFiredStart","pointerEvents","prevX","prevY","prevT","timestamp","timeDelta","changedTouches","length","touch","clientX","clientY","pageX","pageY","createSwipeBackGesture","canStartHandler","onStartHandler","onMoveHandler","onEndHandler","win","defaultView","rtl","i","isAtEdge","innerWidth","getDeltaX","getVelocityX","delta","stepValue","width","velocity","z","shouldComplete","missing","missingDistance","realDur","dur","abs","min"],"sourceRoot":""}