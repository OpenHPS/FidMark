{"version":3,"file":"js/746.deb0fd4a.js","mappings":"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","sources":["webpack://eswc2024/./node_modules/@ionic/core/components/animation.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { w as win } from './index5.js';\nimport { r as raf } from './helpers.js';\n\nlet animationPrefix;\n/**\n * Web Animations requires hyphenated CSS properties\n * to be written in camelCase when animating\n */\nconst processKeyframes = (keyframes) => {\n    keyframes.forEach((keyframe) => {\n        for (const key in keyframe) {\n            // eslint-disable-next-line no-prototype-builtins\n            if (keyframe.hasOwnProperty(key)) {\n                const value = keyframe[key];\n                if (key === 'easing') {\n                    const newKey = 'animation-timing-function';\n                    keyframe[newKey] = value;\n                    delete keyframe[key];\n                }\n                else {\n                    const newKey = convertCamelCaseToHypen(key);\n                    if (newKey !== key) {\n                        keyframe[newKey] = value;\n                        delete keyframe[key];\n                    }\n                }\n            }\n        }\n    });\n    return keyframes;\n};\nconst convertCamelCaseToHypen = (str) => {\n    return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n};\nconst getAnimationPrefix = (el) => {\n    if (animationPrefix === undefined) {\n        const supportsUnprefixed = el.style.animationName !== undefined;\n        const supportsWebkitPrefix = el.style.webkitAnimationName !== undefined;\n        animationPrefix = !supportsUnprefixed && supportsWebkitPrefix ? '-webkit-' : '';\n    }\n    return animationPrefix;\n};\nconst setStyleProperty = (element, propertyName, value) => {\n    const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n    element.style.setProperty(prefix + propertyName, value);\n};\nconst removeStyleProperty = (element, propertyName) => {\n    const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n    element.style.removeProperty(prefix + propertyName);\n};\nconst animationEnd = (el, callback) => {\n    let unRegTrans;\n    const opts = { passive: true };\n    const unregister = () => {\n        if (unRegTrans) {\n            unRegTrans();\n        }\n    };\n    const onTransitionEnd = (ev) => {\n        if (el === ev.target) {\n            unregister();\n            callback(ev);\n        }\n    };\n    if (el) {\n        el.addEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n        el.addEventListener('animationend', onTransitionEnd, opts);\n        unRegTrans = () => {\n            el.removeEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n            el.removeEventListener('animationend', onTransitionEnd, opts);\n        };\n    }\n    return unregister;\n};\n// TODO(FW-2832): type\nconst generateKeyframeRules = (keyframes = []) => {\n    return keyframes\n        .map((keyframe) => {\n        const offset = keyframe.offset;\n        const frameString = [];\n        for (const property in keyframe) {\n            // eslint-disable-next-line no-prototype-builtins\n            if (keyframe.hasOwnProperty(property) && property !== 'offset') {\n                frameString.push(`${property}: ${keyframe[property]};`);\n            }\n        }\n        return `${offset * 100}% { ${frameString.join(' ')} }`;\n    })\n        .join(' ');\n};\nconst keyframeIds = [];\nconst generateKeyframeName = (keyframeRules) => {\n    let index = keyframeIds.indexOf(keyframeRules);\n    if (index < 0) {\n        index = keyframeIds.push(keyframeRules) - 1;\n    }\n    return `ion-animation-${index}`;\n};\nconst getStyleContainer = (element) => {\n    // getRootNode is not always available in SSR environments.\n    // TODO(FW-2832): types\n    const rootNode = element.getRootNode !== undefined ? element.getRootNode() : element;\n    return rootNode.head || rootNode;\n};\nconst createKeyframeStylesheet = (keyframeName, keyframeRules, element) => {\n    var _a;\n    const styleContainer = getStyleContainer(element);\n    const keyframePrefix = getAnimationPrefix(element);\n    const existingStylesheet = styleContainer.querySelector('#' + keyframeName);\n    if (existingStylesheet) {\n        return existingStylesheet;\n    }\n    const stylesheet = ((_a = element.ownerDocument) !== null && _a !== void 0 ? _a : document).createElement('style');\n    stylesheet.id = keyframeName;\n    stylesheet.textContent = `@${keyframePrefix}keyframes ${keyframeName} { ${keyframeRules} } @${keyframePrefix}keyframes ${keyframeName}-alt { ${keyframeRules} }`;\n    styleContainer.appendChild(stylesheet);\n    return stylesheet;\n};\nconst addClassToArray = (classes = [], className) => {\n    if (className !== undefined) {\n        const classNameToAppend = Array.isArray(className) ? className : [className];\n        return [...classes, ...classNameToAppend];\n    }\n    return classes;\n};\n\nconst createAnimation = (animationId) => {\n    let _delay;\n    let _duration;\n    let _easing;\n    let _iterations;\n    let _fill;\n    let _direction;\n    let _keyframes = [];\n    let beforeAddClasses = [];\n    let beforeRemoveClasses = [];\n    let initialized = false;\n    let parentAnimation;\n    let beforeStylesValue = {};\n    let afterAddClasses = [];\n    let afterRemoveClasses = [];\n    let afterStylesValue = {};\n    let numAnimationsRunning = 0;\n    let shouldForceLinearEasing = false;\n    let shouldForceSyncPlayback = false;\n    let cssAnimationsTimerFallback;\n    let forceDirectionValue;\n    let forceDurationValue;\n    let forceDelayValue;\n    let willComplete = true;\n    let finished = false;\n    let shouldCalculateNumAnimations = true;\n    let keyframeName;\n    let ani;\n    let paused = false;\n    const id = animationId;\n    const onFinishCallbacks = [];\n    const onFinishOneTimeCallbacks = [];\n    const onStopOneTimeCallbacks = [];\n    const elements = [];\n    const childAnimations = [];\n    const stylesheets = [];\n    const _beforeAddReadFunctions = [];\n    const _beforeAddWriteFunctions = [];\n    const _afterAddReadFunctions = [];\n    const _afterAddWriteFunctions = [];\n    const webAnimations = [];\n    const supportsAnimationEffect = typeof AnimationEffect === 'function' ||\n        (win !== undefined && typeof win.AnimationEffect === 'function');\n    const supportsWebAnimations = typeof Element === 'function' &&\n        typeof Element.prototype.animate === 'function' &&\n        supportsAnimationEffect;\n    const ANIMATION_END_FALLBACK_PADDING_MS = 100;\n    const getWebAnimations = () => {\n        return webAnimations;\n    };\n    const destroy = (clearStyleSheets) => {\n        childAnimations.forEach((childAnimation) => {\n            childAnimation.destroy(clearStyleSheets);\n        });\n        cleanUp(clearStyleSheets);\n        elements.length = 0;\n        childAnimations.length = 0;\n        _keyframes.length = 0;\n        clearOnFinish();\n        initialized = false;\n        shouldCalculateNumAnimations = true;\n        return ani;\n    };\n    /**\n     * Cancels any Web Animations, removes\n     * any animation properties from the\n     * animation's elements, and removes the\n     * animation's stylesheets from the DOM.\n     */\n    const cleanUp = (clearStyleSheets) => {\n        cleanUpElements();\n        if (clearStyleSheets) {\n            cleanUpStyleSheets();\n        }\n    };\n    const resetFlags = () => {\n        shouldForceLinearEasing = false;\n        shouldForceSyncPlayback = false;\n        shouldCalculateNumAnimations = true;\n        forceDirectionValue = undefined;\n        forceDurationValue = undefined;\n        forceDelayValue = undefined;\n        numAnimationsRunning = 0;\n        finished = false;\n        willComplete = true;\n        paused = false;\n    };\n    const isRunning = () => {\n        return numAnimationsRunning !== 0 && !paused;\n    };\n    /**\n     * @internal\n     * Remove a callback from a chosen callback array\n     * @param callbackToRemove: A reference to the callback that should be removed\n     * @param callbackObjects: An array of callbacks that callbackToRemove should be removed from.\n     */\n    const clearCallback = (callbackToRemove, callbackObjects) => {\n        const index = callbackObjects.findIndex((callbackObject) => callbackObject.c === callbackToRemove);\n        if (index > -1) {\n            callbackObjects.splice(index, 1);\n        }\n    };\n    /**\n     * @internal\n     * Add a callback to be fired when an animation is stopped/cancelled.\n     * @param callback: A reference to the callback that should be fired\n     * @param opts: Any options associated with this particular callback\n     */\n    const onStop = (callback, opts) => {\n        onStopOneTimeCallbacks.push({ c: callback, o: opts });\n        return ani;\n    };\n    const onFinish = (callback, opts) => {\n        const callbacks = (opts === null || opts === void 0 ? void 0 : opts.oneTimeCallback) ? onFinishOneTimeCallbacks : onFinishCallbacks;\n        callbacks.push({ c: callback, o: opts });\n        return ani;\n    };\n    const clearOnFinish = () => {\n        onFinishCallbacks.length = 0;\n        onFinishOneTimeCallbacks.length = 0;\n        return ani;\n    };\n    /**\n     * Cancels any Web Animations and removes\n     * any animation properties from the\n     * the animation's elements.\n     */\n    const cleanUpElements = () => {\n        if (supportsWebAnimations) {\n            webAnimations.forEach((animation) => {\n                animation.cancel();\n            });\n            webAnimations.length = 0;\n        }\n        else {\n            const elementsArray = elements.slice();\n            raf(() => {\n                elementsArray.forEach((element) => {\n                    removeStyleProperty(element, 'animation-name');\n                    removeStyleProperty(element, 'animation-duration');\n                    removeStyleProperty(element, 'animation-timing-function');\n                    removeStyleProperty(element, 'animation-iteration-count');\n                    removeStyleProperty(element, 'animation-delay');\n                    removeStyleProperty(element, 'animation-play-state');\n                    removeStyleProperty(element, 'animation-fill-mode');\n                    removeStyleProperty(element, 'animation-direction');\n                });\n            });\n        }\n    };\n    /**\n     * Removes the animation's stylesheets\n     * from the DOM.\n     */\n    const cleanUpStyleSheets = () => {\n        stylesheets.forEach((stylesheet) => {\n            /**\n             * When sharing stylesheets, it's possible\n             * for another animation to have already\n             * cleaned up a particular stylesheet\n             */\n            if (stylesheet === null || stylesheet === void 0 ? void 0 : stylesheet.parentNode) {\n                stylesheet.parentNode.removeChild(stylesheet);\n            }\n        });\n        stylesheets.length = 0;\n    };\n    const beforeAddRead = (readFn) => {\n        _beforeAddReadFunctions.push(readFn);\n        return ani;\n    };\n    const beforeAddWrite = (writeFn) => {\n        _beforeAddWriteFunctions.push(writeFn);\n        return ani;\n    };\n    const afterAddRead = (readFn) => {\n        _afterAddReadFunctions.push(readFn);\n        return ani;\n    };\n    const afterAddWrite = (writeFn) => {\n        _afterAddWriteFunctions.push(writeFn);\n        return ani;\n    };\n    const beforeAddClass = (className) => {\n        beforeAddClasses = addClassToArray(beforeAddClasses, className);\n        return ani;\n    };\n    const beforeRemoveClass = (className) => {\n        beforeRemoveClasses = addClassToArray(beforeRemoveClasses, className);\n        return ani;\n    };\n    /**\n     * Set CSS inline styles to the animation's\n     * elements before the animation begins.\n     */\n    const beforeStyles = (styles = {}) => {\n        beforeStylesValue = styles;\n        return ani;\n    };\n    /**\n     * Clear CSS inline styles from the animation's\n     * elements before the animation begins.\n     */\n    const beforeClearStyles = (propertyNames = []) => {\n        for (const property of propertyNames) {\n            beforeStylesValue[property] = '';\n        }\n        return ani;\n    };\n    const afterAddClass = (className) => {\n        afterAddClasses = addClassToArray(afterAddClasses, className);\n        return ani;\n    };\n    const afterRemoveClass = (className) => {\n        afterRemoveClasses = addClassToArray(afterRemoveClasses, className);\n        return ani;\n    };\n    const afterStyles = (styles = {}) => {\n        afterStylesValue = styles;\n        return ani;\n    };\n    const afterClearStyles = (propertyNames = []) => {\n        for (const property of propertyNames) {\n            afterStylesValue[property] = '';\n        }\n        return ani;\n    };\n    const getFill = () => {\n        if (_fill !== undefined) {\n            return _fill;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getFill();\n        }\n        return 'both';\n    };\n    const getDirection = () => {\n        if (forceDirectionValue !== undefined) {\n            return forceDirectionValue;\n        }\n        if (_direction !== undefined) {\n            return _direction;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getDirection();\n        }\n        return 'normal';\n    };\n    const getEasing = () => {\n        if (shouldForceLinearEasing) {\n            return 'linear';\n        }\n        if (_easing !== undefined) {\n            return _easing;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getEasing();\n        }\n        return 'linear';\n    };\n    const getDuration = () => {\n        if (shouldForceSyncPlayback) {\n            return 0;\n        }\n        if (forceDurationValue !== undefined) {\n            return forceDurationValue;\n        }\n        if (_duration !== undefined) {\n            return _duration;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getDuration();\n        }\n        return 0;\n    };\n    const getIterations = () => {\n        if (_iterations !== undefined) {\n            return _iterations;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getIterations();\n        }\n        return 1;\n    };\n    const getDelay = () => {\n        if (forceDelayValue !== undefined) {\n            return forceDelayValue;\n        }\n        if (_delay !== undefined) {\n            return _delay;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getDelay();\n        }\n        return 0;\n    };\n    const getKeyframes = () => {\n        return _keyframes;\n    };\n    const direction = (animationDirection) => {\n        _direction = animationDirection;\n        update(true);\n        return ani;\n    };\n    const fill = (animationFill) => {\n        _fill = animationFill;\n        update(true);\n        return ani;\n    };\n    const delay = (animationDelay) => {\n        _delay = animationDelay;\n        update(true);\n        return ani;\n    };\n    const easing = (animationEasing) => {\n        _easing = animationEasing;\n        update(true);\n        return ani;\n    };\n    const duration = (animationDuration) => {\n        /**\n         * CSS Animation Durations of 0ms work fine on Chrome\n         * but do not run on Safari, so force it to 1ms to\n         * get it to run on both platforms.\n         */\n        if (!supportsWebAnimations && animationDuration === 0) {\n            animationDuration = 1;\n        }\n        _duration = animationDuration;\n        update(true);\n        return ani;\n    };\n    const iterations = (animationIterations) => {\n        _iterations = animationIterations;\n        update(true);\n        return ani;\n    };\n    const parent = (animation) => {\n        parentAnimation = animation;\n        return ani;\n    };\n    const addElement = (el) => {\n        if (el != null) {\n            if (el.nodeType === 1) {\n                elements.push(el);\n            }\n            else if (el.length >= 0) {\n                for (let i = 0; i < el.length; i++) {\n                    elements.push(el[i]);\n                }\n            }\n            else {\n                console.error('Invalid addElement value');\n            }\n        }\n        return ani;\n    };\n    const addAnimation = (animationToAdd) => {\n        if (animationToAdd != null) {\n            if (Array.isArray(animationToAdd)) {\n                for (const animation of animationToAdd) {\n                    animation.parent(ani);\n                    childAnimations.push(animation);\n                }\n            }\n            else {\n                animationToAdd.parent(ani);\n                childAnimations.push(animationToAdd);\n            }\n        }\n        return ani;\n    };\n    const keyframes = (keyframeValues) => {\n        const different = _keyframes !== keyframeValues;\n        _keyframes = keyframeValues;\n        if (different) {\n            updateKeyframes(_keyframes);\n        }\n        return ani;\n    };\n    const updateKeyframes = (keyframeValues) => {\n        if (supportsWebAnimations) {\n            getWebAnimations().forEach((animation) => {\n                /**\n                 * animation.effect's type is AnimationEffect.\n                 * However, in this case we have a more specific\n                 * type of AnimationEffect called KeyframeEffect which\n                 * inherits from AnimationEffect. As a result,\n                 * we cast animation.effect to KeyframeEffect.\n                 */\n                const keyframeEffect = animation.effect;\n                /**\n                 * setKeyframes is not supported in all browser\n                 * versions that Ionic supports, so we need to\n                 * check for support before using it.\n                 */\n                // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n                if (keyframeEffect.setKeyframes) {\n                    keyframeEffect.setKeyframes(keyframeValues);\n                }\n                else {\n                    const newEffect = new KeyframeEffect(keyframeEffect.target, keyframeValues, keyframeEffect.getTiming());\n                    animation.effect = newEffect;\n                }\n            });\n        }\n        else {\n            initializeCSSAnimation();\n        }\n    };\n    /**\n     * Run all \"before\" animation hooks.\n     */\n    const beforeAnimation = () => {\n        // Runs all before read callbacks\n        _beforeAddReadFunctions.forEach((callback) => callback());\n        // Runs all before write callbacks\n        _beforeAddWriteFunctions.forEach((callback) => callback());\n        // Updates styles and classes before animation runs\n        const addClasses = beforeAddClasses;\n        const removeClasses = beforeRemoveClasses;\n        const styles = beforeStylesValue;\n        elements.forEach((el) => {\n            const elementClassList = el.classList;\n            addClasses.forEach((c) => elementClassList.add(c));\n            removeClasses.forEach((c) => elementClassList.remove(c));\n            for (const property in styles) {\n                // eslint-disable-next-line no-prototype-builtins\n                if (styles.hasOwnProperty(property)) {\n                    setStyleProperty(el, property, styles[property]);\n                }\n            }\n        });\n    };\n    /**\n     * Run all \"after\" animation hooks.\n     */\n    const afterAnimation = () => {\n        clearCSSAnimationsTimeout();\n        // Runs all after read callbacks\n        _afterAddReadFunctions.forEach((callback) => callback());\n        // Runs all after write callbacks\n        _afterAddWriteFunctions.forEach((callback) => callback());\n        // Updates styles and classes before animation ends\n        const currentStep = willComplete ? 1 : 0;\n        const addClasses = afterAddClasses;\n        const removeClasses = afterRemoveClasses;\n        const styles = afterStylesValue;\n        elements.forEach((el) => {\n            const elementClassList = el.classList;\n            addClasses.forEach((c) => elementClassList.add(c));\n            removeClasses.forEach((c) => elementClassList.remove(c));\n            for (const property in styles) {\n                // eslint-disable-next-line no-prototype-builtins\n                if (styles.hasOwnProperty(property)) {\n                    setStyleProperty(el, property, styles[property]);\n                }\n            }\n        });\n        /**\n         * Clean up any value coercion before\n         * the user callbacks fire otherwise\n         * they may get stale values. For example,\n         * if someone calls progressStart(0) the\n         * animation may still be reversed.\n         */\n        forceDurationValue = undefined;\n        forceDirectionValue = undefined;\n        forceDelayValue = undefined;\n        onFinishCallbacks.forEach((onFinishCallback) => {\n            return onFinishCallback.c(currentStep, ani);\n        });\n        onFinishOneTimeCallbacks.forEach((onFinishCallback) => {\n            return onFinishCallback.c(currentStep, ani);\n        });\n        onFinishOneTimeCallbacks.length = 0;\n        shouldCalculateNumAnimations = true;\n        if (willComplete) {\n            finished = true;\n        }\n        willComplete = true;\n    };\n    const animationFinish = () => {\n        if (numAnimationsRunning === 0) {\n            return;\n        }\n        numAnimationsRunning--;\n        if (numAnimationsRunning === 0) {\n            afterAnimation();\n            if (parentAnimation) {\n                parentAnimation.animationFinish();\n            }\n        }\n    };\n    const initializeCSSAnimation = (toggleAnimationName = true) => {\n        cleanUpStyleSheets();\n        const processedKeyframes = processKeyframes(_keyframes);\n        elements.forEach((element) => {\n            if (processedKeyframes.length > 0) {\n                const keyframeRules = generateKeyframeRules(processedKeyframes);\n                keyframeName = animationId !== undefined ? animationId : generateKeyframeName(keyframeRules);\n                const stylesheet = createKeyframeStylesheet(keyframeName, keyframeRules, element);\n                stylesheets.push(stylesheet);\n                setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n                setStyleProperty(element, 'animation-timing-function', getEasing());\n                setStyleProperty(element, 'animation-delay', `${getDelay()}ms`);\n                setStyleProperty(element, 'animation-fill-mode', getFill());\n                setStyleProperty(element, 'animation-direction', getDirection());\n                const iterationsCount = getIterations() === Infinity ? 'infinite' : getIterations().toString();\n                setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n                setStyleProperty(element, 'animation-play-state', 'paused');\n                if (toggleAnimationName) {\n                    setStyleProperty(element, 'animation-name', `${stylesheet.id}-alt`);\n                }\n                raf(() => {\n                    setStyleProperty(element, 'animation-name', stylesheet.id || null);\n                });\n            }\n        });\n    };\n    const initializeWebAnimation = () => {\n        elements.forEach((element) => {\n            const animation = element.animate(_keyframes, {\n                id,\n                delay: getDelay(),\n                duration: getDuration(),\n                easing: getEasing(),\n                iterations: getIterations(),\n                fill: getFill(),\n                direction: getDirection(),\n            });\n            animation.pause();\n            webAnimations.push(animation);\n        });\n        if (webAnimations.length > 0) {\n            webAnimations[0].onfinish = () => {\n                animationFinish();\n            };\n        }\n    };\n    const initializeAnimation = (toggleAnimationName = true) => {\n        beforeAnimation();\n        if (_keyframes.length > 0) {\n            if (supportsWebAnimations) {\n                initializeWebAnimation();\n            }\n            else {\n                initializeCSSAnimation(toggleAnimationName);\n            }\n        }\n        initialized = true;\n    };\n    const setAnimationStep = (step) => {\n        step = Math.min(Math.max(step, 0), 0.9999);\n        if (supportsWebAnimations) {\n            webAnimations.forEach((animation) => {\n                // When creating the animation the delay is guaranteed to be set to a number.\n                animation.currentTime = animation.effect.getComputedTiming().delay + getDuration() * step;\n                animation.pause();\n            });\n        }\n        else {\n            const animationDuration = `-${getDuration() * step}ms`;\n            elements.forEach((element) => {\n                if (_keyframes.length > 0) {\n                    setStyleProperty(element, 'animation-delay', animationDuration);\n                    setStyleProperty(element, 'animation-play-state', 'paused');\n                }\n            });\n        }\n    };\n    const updateWebAnimation = (step) => {\n        webAnimations.forEach((animation) => {\n            animation.effect.updateTiming({\n                delay: getDelay(),\n                duration: getDuration(),\n                easing: getEasing(),\n                iterations: getIterations(),\n                fill: getFill(),\n                direction: getDirection(),\n            });\n        });\n        if (step !== undefined) {\n            setAnimationStep(step);\n        }\n    };\n    const updateCSSAnimation = (toggleAnimationName = true, step) => {\n        raf(() => {\n            elements.forEach((element) => {\n                setStyleProperty(element, 'animation-name', keyframeName || null);\n                setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n                setStyleProperty(element, 'animation-timing-function', getEasing());\n                setStyleProperty(element, 'animation-delay', step !== undefined ? `-${step * getDuration()}ms` : `${getDelay()}ms`);\n                setStyleProperty(element, 'animation-fill-mode', getFill() || null);\n                setStyleProperty(element, 'animation-direction', getDirection() || null);\n                const iterationsCount = getIterations() === Infinity ? 'infinite' : getIterations().toString();\n                setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n                if (toggleAnimationName) {\n                    setStyleProperty(element, 'animation-name', `${keyframeName}-alt`);\n                }\n                raf(() => {\n                    setStyleProperty(element, 'animation-name', keyframeName || null);\n                });\n            });\n        });\n    };\n    const update = (deep = false, toggleAnimationName = true, step) => {\n        if (deep) {\n            childAnimations.forEach((animation) => {\n                animation.update(deep, toggleAnimationName, step);\n            });\n        }\n        if (supportsWebAnimations) {\n            updateWebAnimation(step);\n        }\n        else {\n            updateCSSAnimation(toggleAnimationName, step);\n        }\n        return ani;\n    };\n    const progressStart = (forceLinearEasing = false, step) => {\n        childAnimations.forEach((animation) => {\n            animation.progressStart(forceLinearEasing, step);\n        });\n        pauseAnimation();\n        shouldForceLinearEasing = forceLinearEasing;\n        if (!initialized) {\n            initializeAnimation();\n        }\n        update(false, true, step);\n        return ani;\n    };\n    const progressStep = (step) => {\n        childAnimations.forEach((animation) => {\n            animation.progressStep(step);\n        });\n        setAnimationStep(step);\n        return ani;\n    };\n    const progressEnd = (playTo, step, dur) => {\n        shouldForceLinearEasing = false;\n        childAnimations.forEach((animation) => {\n            animation.progressEnd(playTo, step, dur);\n        });\n        if (dur !== undefined) {\n            forceDurationValue = dur;\n        }\n        finished = false;\n        willComplete = true;\n        if (playTo === 0) {\n            forceDirectionValue = getDirection() === 'reverse' ? 'normal' : 'reverse';\n            if (forceDirectionValue === 'reverse') {\n                willComplete = false;\n            }\n            if (supportsWebAnimations) {\n                update();\n                setAnimationStep(1 - step);\n            }\n            else {\n                forceDelayValue = (1 - step) * getDuration() * -1;\n                update(false, false);\n            }\n        }\n        else if (playTo === 1) {\n            if (supportsWebAnimations) {\n                update();\n                setAnimationStep(step);\n            }\n            else {\n                forceDelayValue = step * getDuration() * -1;\n                update(false, false);\n            }\n        }\n        if (playTo !== undefined && !parentAnimation) {\n            play();\n        }\n        return ani;\n    };\n    const pauseAnimation = () => {\n        if (initialized) {\n            if (supportsWebAnimations) {\n                webAnimations.forEach((animation) => {\n                    animation.pause();\n                });\n            }\n            else {\n                elements.forEach((element) => {\n                    setStyleProperty(element, 'animation-play-state', 'paused');\n                });\n            }\n            paused = true;\n        }\n    };\n    const pause = () => {\n        childAnimations.forEach((animation) => {\n            animation.pause();\n        });\n        pauseAnimation();\n        return ani;\n    };\n    const onAnimationEndFallback = () => {\n        cssAnimationsTimerFallback = undefined;\n        animationFinish();\n    };\n    const clearCSSAnimationsTimeout = () => {\n        if (cssAnimationsTimerFallback) {\n            clearTimeout(cssAnimationsTimerFallback);\n        }\n    };\n    const playCSSAnimations = () => {\n        clearCSSAnimationsTimeout();\n        raf(() => {\n            elements.forEach((element) => {\n                if (_keyframes.length > 0) {\n                    setStyleProperty(element, 'animation-play-state', 'running');\n                }\n            });\n        });\n        if (_keyframes.length === 0 || elements.length === 0) {\n            animationFinish();\n        }\n        else {\n            /**\n             * This is a catchall in the event that a CSS Animation did not finish.\n             * The Web Animations API has mechanisms in place for preventing this.\n             * CSS Animations will not fire an `animationend` event\n             * for elements with `display: none`. The Web Animations API\n             * accounts for this, but using raw CSS Animations requires\n             * this workaround.\n             */\n            const animationDelay = getDelay() || 0;\n            const animationDuration = getDuration() || 0;\n            const animationIterations = getIterations() || 1;\n            // No need to set a timeout when animation has infinite iterations\n            if (isFinite(animationIterations)) {\n                cssAnimationsTimerFallback = setTimeout(onAnimationEndFallback, animationDelay + animationDuration * animationIterations + ANIMATION_END_FALLBACK_PADDING_MS);\n            }\n            animationEnd(elements[0], () => {\n                clearCSSAnimationsTimeout();\n                /**\n                 * Ensure that clean up\n                 * is always done a frame\n                 * before the onFinish handlers\n                 * are fired. Otherwise, there\n                 * may be flickering if a new\n                 * animation is started on the same\n                 * element too quickly\n                 */\n                raf(() => {\n                    clearCSSAnimationPlayState();\n                    raf(animationFinish);\n                });\n            });\n        }\n    };\n    const clearCSSAnimationPlayState = () => {\n        elements.forEach((element) => {\n            removeStyleProperty(element, 'animation-duration');\n            removeStyleProperty(element, 'animation-delay');\n            removeStyleProperty(element, 'animation-play-state');\n        });\n    };\n    const playWebAnimations = () => {\n        webAnimations.forEach((animation) => {\n            animation.play();\n        });\n        if (_keyframes.length === 0 || elements.length === 0) {\n            animationFinish();\n        }\n    };\n    const resetAnimation = () => {\n        if (supportsWebAnimations) {\n            setAnimationStep(0);\n            updateWebAnimation();\n        }\n        else {\n            updateCSSAnimation();\n        }\n    };\n    const play = (opts) => {\n        return new Promise((resolve) => {\n            if (opts === null || opts === void 0 ? void 0 : opts.sync) {\n                shouldForceSyncPlayback = true;\n                onFinish(() => (shouldForceSyncPlayback = false), { oneTimeCallback: true });\n            }\n            if (!initialized) {\n                initializeAnimation();\n            }\n            if (finished) {\n                resetAnimation();\n                finished = false;\n            }\n            if (shouldCalculateNumAnimations) {\n                numAnimationsRunning = childAnimations.length + 1;\n                shouldCalculateNumAnimations = false;\n            }\n            /**\n             * When one of these callbacks fires we\n             * need to clear the other's callback otherwise\n             * you can potentially get these callbacks\n             * firing multiple times if the play method\n             * is subsequently called.\n             * Example:\n             * animation.play() (onStop and onFinish callbacks are registered)\n             * animation.stop() (onStop callback is fired, onFinish is not)\n             * animation.play() (onStop and onFinish callbacks are registered)\n             * Total onStop callbacks: 1\n             * Total onFinish callbacks: 2\n             */\n            const onStopCallback = () => {\n                clearCallback(onFinishCallback, onFinishOneTimeCallbacks);\n                resolve();\n            };\n            const onFinishCallback = () => {\n                clearCallback(onStopCallback, onStopOneTimeCallbacks);\n                resolve();\n            };\n            /**\n             * The play method resolves when an animation\n             * run either finishes or is cancelled.\n             */\n            onFinish(onFinishCallback, { oneTimeCallback: true });\n            onStop(onStopCallback, { oneTimeCallback: true });\n            childAnimations.forEach((animation) => {\n                animation.play();\n            });\n            if (supportsWebAnimations) {\n                playWebAnimations();\n            }\n            else {\n                playCSSAnimations();\n            }\n            paused = false;\n        });\n    };\n    /**\n     * Stops an animation and resets it state to the\n     * beginning. This does not fire any onFinish\n     * callbacks because the animation did not finish.\n     * However, since the animation was not destroyed\n     * (i.e. the animation could run again) we do not\n     * clear the onFinish callbacks.\n     */\n    const stop = () => {\n        childAnimations.forEach((animation) => {\n            animation.stop();\n        });\n        if (initialized) {\n            cleanUpElements();\n            initialized = false;\n        }\n        resetFlags();\n        onStopOneTimeCallbacks.forEach((onStopCallback) => onStopCallback.c(0, ani));\n        onStopOneTimeCallbacks.length = 0;\n    };\n    const from = (property, value) => {\n        const firstFrame = _keyframes[0];\n        if (firstFrame !== undefined && (firstFrame.offset === undefined || firstFrame.offset === 0)) {\n            firstFrame[property] = value;\n        }\n        else {\n            _keyframes = [{ offset: 0, [property]: value }, ..._keyframes];\n        }\n        return ani;\n    };\n    const to = (property, value) => {\n        const lastFrame = _keyframes[_keyframes.length - 1];\n        if (lastFrame !== undefined && (lastFrame.offset === undefined || lastFrame.offset === 1)) {\n            lastFrame[property] = value;\n        }\n        else {\n            _keyframes = [..._keyframes, { offset: 1, [property]: value }];\n        }\n        return ani;\n    };\n    const fromTo = (property, fromValue, toValue) => {\n        return from(property, fromValue).to(property, toValue);\n    };\n    return (ani = {\n        parentAnimation,\n        elements,\n        childAnimations,\n        id,\n        animationFinish,\n        from,\n        to,\n        fromTo,\n        parent,\n        play,\n        pause,\n        stop,\n        destroy,\n        keyframes,\n        addAnimation,\n        addElement,\n        update,\n        fill,\n        direction,\n        iterations,\n        duration,\n        easing,\n        delay,\n        getWebAnimations,\n        getKeyframes,\n        getFill,\n        getDirection,\n        getDelay,\n        getIterations,\n        getEasing,\n        getDuration,\n        afterAddRead,\n        afterAddWrite,\n        afterClearStyles,\n        afterStyles,\n        afterRemoveClass,\n        afterAddClass,\n        beforeAddRead,\n        beforeAddWrite,\n        beforeClearStyles,\n        beforeStyles,\n        beforeRemoveClass,\n        beforeAddClass,\n        onFinish,\n        isRunning,\n        progressStart,\n        progressStep,\n        progressEnd,\n    });\n};\n\nexport { createAnimation as c };\n"],"names":["animationPrefix","processKeyframes","keyframes","forEach","keyframe","key","hasOwnProperty","value","newKey","convertCamelCaseToHypen","str","replace","toLowerCase","getAnimationPrefix","el","undefined","supportsUnprefixed","style","animationName","supportsWebkitPrefix","webkitAnimationName","setStyleProperty","element","propertyName","prefix","startsWith","setProperty","removeStyleProperty","removeProperty","animationEnd","callback","unRegTrans","opts","passive","unregister","onTransitionEnd","ev","target","addEventListener","removeEventListener","generateKeyframeRules","map","offset","frameString","property","push","join","keyframeIds","generateKeyframeName","keyframeRules","index","indexOf","getStyleContainer","rootNode","getRootNode","head","createKeyframeStylesheet","keyframeName","_a","styleContainer","keyframePrefix","existingStylesheet","querySelector","stylesheet","ownerDocument","document","createElement","id","textContent","appendChild","addClassToArray","classes","className","classNameToAppend","Array","isArray","createAnimation","animationId","_delay","_duration","_easing","_iterations","_fill","_direction","parentAnimation","cssAnimationsTimerFallback","forceDirectionValue","forceDurationValue","forceDelayValue","ani","_keyframes","beforeAddClasses","beforeRemoveClasses","initialized","beforeStylesValue","afterAddClasses","afterRemoveClasses","afterStylesValue","numAnimationsRunning","shouldForceLinearEasing","shouldForceSyncPlayback","willComplete","finished","shouldCalculateNumAnimations","paused","onFinishCallbacks","onFinishOneTimeCallbacks","onStopOneTimeCallbacks","elements","childAnimations","stylesheets","_beforeAddReadFunctions","_beforeAddWriteFunctions","_afterAddReadFunctions","_afterAddWriteFunctions","webAnimations","supportsAnimationEffect","AnimationEffect","w","supportsWebAnimations","Element","prototype","animate","ANIMATION_END_FALLBACK_PADDING_MS","getWebAnimations","destroy","clearStyleSheets","childAnimation","cleanUp","length","clearOnFinish","cleanUpElements","cleanUpStyleSheets","resetFlags","isRunning","clearCallback","callbackToRemove","callbackObjects","findIndex","callbackObject","c","splice","onStop","o","onFinish","callbacks","oneTimeCallback","animation","cancel","elementsArray","slice","r","parentNode","removeChild","beforeAddRead","readFn","beforeAddWrite","writeFn","afterAddRead","afterAddWrite","beforeAddClass","beforeRemoveClass","beforeStyles","styles","beforeClearStyles","propertyNames","afterAddClass","afterRemoveClass","afterStyles","afterClearStyles","getFill","getDirection","getEasing","getDuration","getIterations","getDelay","getKeyframes","direction","animationDirection","update","fill","animationFill","delay","animationDelay","easing","animationEasing","duration","animationDuration","iterations","animationIterations","parent","addElement","nodeType","i","console","error","addAnimation","animationToAdd","keyframeValues","different","updateKeyframes","keyframeEffect","effect","setKeyframes","newEffect","KeyframeEffect","getTiming","initializeCSSAnimation","beforeAnimation","addClasses","removeClasses","elementClassList","classList","add","remove","afterAnimation","clearCSSAnimationsTimeout","currentStep","onFinishCallback","animationFinish","toggleAnimationName","processedKeyframes","iterationsCount","Infinity","toString","initializeWebAnimation","pause","onfinish","initializeAnimation","setAnimationStep","step","Math","min","max","currentTime","getComputedTiming","updateWebAnimation","updateTiming","updateCSSAnimation","deep","progressStart","forceLinearEasing","pauseAnimation","progressStep","progressEnd","playTo","dur","play","onAnimationEndFallback","clearTimeout","playCSSAnimations","isFinite","setTimeout","clearCSSAnimationPlayState","playWebAnimations","resetAnimation","Promise","resolve","sync","onStopCallback","stop","from","firstFrame","to","lastFrame","fromTo","fromValue","toValue"],"sourceRoot":""}