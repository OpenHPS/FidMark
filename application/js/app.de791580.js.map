{"version":3,"file":"js/app.de791580.js","mappings":"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","sources":["webpack://eswc2024/./node_modules/@stencil/core/internal/client/ lazy ^\\.\\/.*\\.entry\\.js.*$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack://eswc2024/./src/App.vue?f202","webpack://eswc2024/./src/App.vue","webpack://eswc2024/./src/App.vue?7ccd","webpack://eswc2024/./src/views/TabsPage.vue?8461","webpack://eswc2024/./src/views/TabsPage.vue","webpack://eswc2024/./src/router/index.ts","webpack://eswc2024/./src/main.ts","webpack://eswc2024/./src/models/MarkerOrigin.ts","webpack://eswc2024/./src/models/MarkerDictionary.ts","webpack://eswc2024/./src/models/ImageDescriptor.ts","webpack://eswc2024/./src/models/FiducialMarker.ts","webpack://eswc2024/./src/models/markers/ArUcoMarker.ts","webpack://eswc2024/./src/models/geometry/Geometry.ts","webpack://eswc2024/./src/models/VirtualObject.ts","webpack://eswc2024/./src/models/markers/ARTagMarker.ts","webpack://eswc2024/./src/ontologies/fidmark.ts","webpack://eswc2024/./src/ontologies/omg.ts","webpack://eswc2024/./src/ontologies/fog.ts","webpack://eswc2024/./src/ontologies/index.ts","webpack://eswc2024/./src/stores/marker.ts","webpack://eswc2024/external var [\"OpenHPS\",\"core\"]","webpack://eswc2024/external var [\"OpenHPS\",\"rdf\"]","webpack://eswc2024/external var [\"OpenHPS\",\"video\"]","webpack://eswc2024/external var [\"OpenHPS\",\"webrtc\"]","webpack://eswc2024/external var []","webpack://eswc2024/webpack/bootstrap","webpack://eswc2024/webpack/runtime/chunk loaded","webpack://eswc2024/webpack/runtime/compat get default export","webpack://eswc2024/webpack/runtime/define property getters","webpack://eswc2024/webpack/runtime/ensure chunk","webpack://eswc2024/webpack/runtime/get javascript chunk filename","webpack://eswc2024/webpack/runtime/get mini-css chunk filename","webpack://eswc2024/webpack/runtime/global","webpack://eswc2024/webpack/runtime/hasOwnProperty shorthand","webpack://eswc2024/webpack/runtime/load script","webpack://eswc2024/webpack/runtime/make namespace object","webpack://eswc2024/webpack/runtime/publicPath","webpack://eswc2024/webpack/runtime/css loading","webpack://eswc2024/webpack/runtime/jsonp chunk loading","webpack://eswc2024/webpack/startup"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 1993;\nmodule.exports = webpackEmptyAsyncContext;","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_router_outlet = _resolveComponent(\"ion-router-outlet\")!\n  const _component_ion_app = _resolveComponent(\"ion-app\")!\n\n  return (_openBlock(), _createBlock(_component_ion_app, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_router_outlet)\n    ]),\n    _: 1\n  }))\n}","<template>\n  <ion-app>\n    <ion-router-outlet />\n  </ion-app>\n</template>\n\n<script lang=\"ts\">\nimport { IonApp, IonRouterOutlet } from '@ionic/vue';\nimport { Options, Vue } from 'vue-property-decorator';\nimport { loadWASM } from 'onigasm';\nimport { RDFSerializer } from '@openhps/rdf';\nimport { useMarkerStore } from './stores/marker';\n\n@Options({\n  components: {\n    IonApp, IonRouterOutlet\n  }\n})\nexport default class App extends Vue {\n  markerStore = useMarkerStore();\n  \n  async beforeMount() {\n    await loadWASM(process.env.BASE_URL + \"js/vendor/onigasm/onigasm.wasm\");\n  }\n\n  mounted(): void {\n    RDFSerializer.initialize(\"video\");\n    this.markerStore.initialize();\n  }\n}\n</script>","import { render } from \"./App.vue?vue&type=template&id=5a0b662a&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { IonTabBar, IonTabButton, IonTabs, IonLabel, IonIcon, IonPage, IonRouterOutlet } from '@ionic/vue';\nimport { cameraOutline, code, cubeOutline } from 'ionicons/icons';\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'TabsPage',\n  setup(__props) {\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(_unref(IonPage), null, {\n    default: _withCtx(() => [\n      _createVNode(_unref(IonTabs), null, {\n        default: _withCtx(() => [\n          _createVNode(_unref(IonRouterOutlet)),\n          _createVNode(_unref(IonTabBar), { slot: \"bottom\" }, {\n            default: _withCtx(() => [\n              _createVNode(_unref(IonTabButton), {\n                tab: \"camera\",\n                href: \"/tabs/camera\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_unref(IonIcon), {\n                    \"aria-hidden\": \"true\",\n                    icon: _unref(cameraOutline)\n                  }, null, 8, [\"icon\"]),\n                  _createVNode(_unref(IonLabel), null, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"AR\")\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              }),\n              _createVNode(_unref(IonTabButton), {\n                tab: \"editor\",\n                href: \"/tabs/editor\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_unref(IonIcon), {\n                    \"aria-hidden\": \"true\",\n                    icon: _unref(code)\n                  }, null, 8, [\"icon\"]),\n                  _createVNode(_unref(IonLabel), null, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"text/turtle\")\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              }),\n              _createVNode(_unref(IonTabButton), {\n                tab: \"objects\",\n                href: \"/tabs/objects\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_unref(IonIcon), {\n                    \"aria-hidden\": \"true\",\n                    icon: _unref(cubeOutline)\n                  }, null, 8, [\"icon\"]),\n                  _createVNode(_unref(IonLabel), null, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"Objects\")\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","import script from \"./TabsPage.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./TabsPage.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter, createWebHashHistory } from '@ionic/vue-router';\nimport { RouteRecordRaw } from 'vue-router';\nimport TabsPage from '../views/TabsPage.vue'\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    redirect: '/tabs/'\n  },\n  {\n    path: '/tabs/',\n    component: TabsPage,\n    children: [\n      {\n        path: '',\n        redirect: '/tabs/camera'\n      },\n      {\n        path: 'camera',\n        component: () => import('@/views/CameraPage.vue')\n      },\n      {\n        path: 'editor',\n        component: () => import('@/views/EditorPage.vue')\n      },\n      {\n        path: 'objects',\n        component: () => import('@/views/ObjectsPage.vue')\n      }\n    ]\n  }\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(process.env.BASE_URL),\n  routes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router';\nimport { createPinia } from 'pinia';\nimport { addIcons } from 'ionicons';\nimport * as icons from 'ionicons/icons';\n\nimport { IonicVue } from '@ionic/vue';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/vue/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/vue/css/normalize.css';\nimport '@ionic/vue/css/structure.css';\nimport '@ionic/vue/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/vue/css/padding.css';\nimport '@ionic/vue/css/float-elements.css';\nimport '@ionic/vue/css/text-alignment.css';\nimport '@ionic/vue/css/text-transformation.css';\nimport '@ionic/vue/css/flex-utils.css';\nimport '@ionic/vue/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nconst app = createApp(App)\n  .use(IonicVue)\n  .use(router)\n  .use(createPinia());\n  \nrouter.isReady().then(() => {\n  addIcons({ ...icons });\n  app.mount('#app');\n});","import { IriString } from \"@openhps/rdf\";\nimport { fidmark } from \"../ontologies\";\nimport { SerializableObject } from \"@openhps/core\";\n\n@SerializableObject({\n    rdf: {\n        type: fidmark.MarkerOrigin\n    }\n})\nexport class MarkerOrigin {\n    static fromURI(uri: IriString): MarkerOrigin {\n        const dict = new MarkerOrigin();\n        (dict as any).rdf = { uri };\n        return dict;\n    }\n}\n\nconst ORIGIN_CENTER: MarkerOrigin = MarkerOrigin.fromURI(fidmark.OriginCenter);\nconst ORIGIN_BOTTOM_LEFT: MarkerOrigin = MarkerOrigin.fromURI(fidmark.OriginBottomLeft);\nconst ORIGIN_BOTTOM_RIGHT: MarkerOrigin = MarkerOrigin.fromURI(fidmark.OriginBottomRight);\nconst ORIGIN_TOP_LEFT: MarkerOrigin = MarkerOrigin.fromURI(fidmark.OriginTopLeft);\nconst ORIGIN_TOP_RIGHT: MarkerOrigin = MarkerOrigin.fromURI(fidmark.OriginTopRight);\n\nexport { ORIGIN_BOTTOM_LEFT, ORIGIN_BOTTOM_RIGHT, ORIGIN_CENTER, ORIGIN_TOP_LEFT, ORIGIN_TOP_RIGHT };\n","import { IriString } from \"@openhps/rdf\";\nimport { fidmark } from \"../ontologies\";\nimport { SerializableMember, SerializableObject } from \"@openhps/core\";\n\n@SerializableObject({\n    rdf: {\n        type: fidmark.MarkerDictionary\n    }\n})\nexport class MarkerDictionary {\n    @SerializableMember({\n        rdf: {\n            predicate: fidmark.dictionarySize\n        }\n    })\n    size: number;\n\n    @SerializableMember({\n        rdf: {\n            predicate: fidmark.hammingDistance\n        }\n    })\n    hammingSize: number;\n\n    static fromURI(uri: IriString): MarkerDictionary {\n        const dict = new MarkerDictionary();\n        (dict as any).rdf = { uri };\n        return dict;\n    }\n}\n","import { IriString, xsd } from '@openhps/rdf';\nimport { fidmark } from '../ontologies';\nimport { SerializableMember, SerializableObject } from '@openhps/core';\n\n@SerializableObject({\n    rdf: {\n        type: fidmark.ImageDescriptor\n    }\n})\nexport class ImageDescriptor {\n    @SerializableMember({\n        rdf: {\n            predicate: fidmark.asImage,\n            datatype: xsd.anyURI\n        }\n    })\n    image?: IriString;\n\n    @SerializableMember({\n        rdf: {\n            predicate: fidmark.asNFT,\n            datatype: xsd.anyURI\n        }\n    })\n    nft?: IriString;\n\n    @SerializableMember({\n        rdf: {\n            predicate: fidmark.asPATT,\n            datatype: xsd.anyURI\n        }\n    })\n    pattern?: IriString;\n}\n","import { fidmark } from '../ontologies';\nimport { LengthUnit, NumberType, ReferenceSpace, SerializableMember, SerializableObject } from '@openhps/core';\nimport { MarkerDictionary } from './MarkerDictionary';\nimport { RDFBuilder, Thing, qudt, rdf, xsd, RDFSerializer } from '@openhps/rdf';\nimport { ImageDescriptor } from './ImageDescriptor';\nimport { MarkerOrigin } from './MarkerOrigin';\n\n@SerializableObject({\n    rdf: {\n        type: fidmark.FiducialMarker\n    }\n})\nexport class FiducialMarker extends ReferenceSpace {\n    @SerializableMember({\n        rdf: {\n            predicate: fidmark.markerData,\n            datatype: xsd.string\n        },\n    })\n    data?: string;\n\n    @SerializableMember({\n        rdf: {\n            predicate: fidmark.markerIdentifier,\n            datatype: xsd.integer\n        },\n        numberType: NumberType.INTEGER\n    })\n    identifier?: number;\n\n    @SerializableMember({\n        rdf: {\n            predicate: fidmark.hasDictionary\n        }\n    })\n    dictionary?: MarkerDictionary;\n\n    @SerializableMember({\n        rdf: {\n            predicate: fidmark.hasOrigin\n        }\n    })\n    origin?: MarkerOrigin;\n    \n    @SerializableMember({\n        rdf: {\n            predicate: [fidmark.hasHeight],\n            serializer: (value: number) => {\n                return RDFBuilder.blankNode()\n                    .add(rdf.type, qudt.QuantityValue)\n                    .add(qudt.unit, LengthUnit.MILLIMETER)\n                    .add(qudt.numericValue, value, xsd.double)\n                    .build();\n            },\n            deserializer: (thing: Thing) => {\n                const unit = RDFSerializer.deserialize(thing.predicates[qudt.unit][0] as Thing, LengthUnit);\n                return unit.convert(parseFloat(thing.predicates[qudt.numericValue][0].value), LengthUnit.MILLIMETER);\n            },\n        },\n    })\n    height?: number;\n\n    @SerializableMember({\n        rdf: {\n            predicate: [fidmark.hasWidth],\n            serializer: (value: number) => {\n                return RDFBuilder.blankNode()\n                    .add(rdf.type, qudt.QuantityValue)\n                    .add(qudt.unit, LengthUnit.MILLIMETER)\n                    .add(qudt.numericValue, value, xsd.double)\n                    .build();\n            },\n            deserializer: (thing: Thing) => {\n                const unit = RDFSerializer.deserialize(thing.predicates[qudt.unit][0] as Thing, LengthUnit);\n                return unit.convert(parseFloat(thing.predicates[qudt.numericValue][0].value), LengthUnit.MILLIMETER);\n            },\n        },\n    })\n    width?: number;\n\n    @SerializableMember({\n        rdf: {\n            predicate: fidmark.hasImageDesciptor\n        }\n    })\n    imageDescriptor?: ImageDescriptor;\n}\n","import { FiducialMarker } from \"../FiducialMarker\";\nimport { SerializableObject } from '@openhps/core';\nimport { fidmark } from \"../../ontologies\";\n\n@SerializableObject({\n    rdf: {\n        type: fidmark.ArUco\n    }\n})\nexport class ArUcoMarker extends FiducialMarker {\n}\n","import { fog, omg } from \"@/ontologies\";\nimport { SerializableMember, SerializableObject } from \"@openhps/core\";\nimport { xsd } from \"@openhps/rdf\";\nimport { GLTFLoader, GLTF } from 'three/examples/jsm/loaders/GLTFLoader'\n\n@SerializableObject({\n    rdf: {\n        type: omg.Geometry\n    }\n})\nexport class Geometry {\n    @SerializableMember({\n        rdf: {\n            predicate: fog.asGltf,\n            datatype: xsd.anyURI\n        }\n    })\n    asGltf?: string;\n    private _gltf: GLTF;\n\n    get gltf(): GLTF {\n        return this._gltf;\n    }\n\n    load(): Promise<GLTF> {\n        return new Promise((resolve, reject) => {\n            const loader = new GLTFLoader();\n            loader.load(\n                this.asGltf,\n                gltf => {\n                    this._gltf = gltf;\n                    resolve(this._gltf);\n                }, undefined, reject);\n        });\n    }\n}\n","import { DataObject, SerializableMember, SerializableObject } from \"@openhps/core\";\nimport { sosa } from \"@openhps/rdf\";\nimport { Geometry } from \"./geometry/Geometry\";\nimport { omg } from \"../ontologies\";\n\n@SerializableObject({\n    rdf: {\n        type: sosa.FeatureOfInterest\n    }\n})\nexport class VirtualObject extends DataObject {\n    @SerializableMember({\n        rdf: {\n            predicate: omg.hasGeometry,\n        }\n    })\n    geometry?: Geometry;\n}\n","import { FiducialMarker } from \"../FiducialMarker\";\nimport { SerializableObject } from '@openhps/core';\nimport { fidmark } from \"../../ontologies\";\n\n@SerializableObject({\n    rdf: {\n        type: fidmark.ARTag\n    }\n})\nexport class ARTagMarker extends FiducialMarker {\n}\n","type IriString = `${'http' | 'https'}://${string}`;\ntype Property = IriString; // eslint-disable-line\ntype Class = IriString; // eslint-disable-line\ntype Datatype = IriString; // eslint-disable-line\ntype OwlClass = IriString; // eslint-disable-line\ntype OwlObjectProperty = IriString; // eslint-disable-line\ntype OwlDatatypeProperty = IriString; // eslint-disable-line\ntype HydraResource = IriString; // eslint-disable-line\ntype HydraClass = IriString; // eslint-disable-line\ntype HydraLink = IriString; // eslint-disable-line\ntype HydraTemplatedLink = IriString; // eslint-disable-line\ntype HydraVariableRepresentation = IriString; // eslint-disable-line\ntype OtherIndividual = IriString; // eslint-disable-line\n\n/**\n * Fiducial marker\n * \n * A fiducial marker or fiducial is an object placed in the field of view of an imaging system that appears in the image produced, for use as a point of reference or a measure. It may be either something placed into or on the imaging subject, or a mark or set of marks in the reticle of an optical instrument.\n *\n * http://purl.org/fidmark/FiducialMarker\n */\nexport const FiducialMarker: OwlClass = 'http://purl.org/fidmark/FiducialMarker';\n\n/**\n * Marker dictionary\n * \n * A marker dictionary is a specified encoding that produces a set of identifiers that can be used for markers.\n *\n * http://purl.org/fidmark/MarkerDictionary\n */\nexport const MarkerDictionary: OwlClass = 'http://purl.org/fidmark/MarkerDictionary';\n\n/**\n * Image descriptor\n * \n * An image descriptor is a visual descriptor of a fiducial marker.\n *\n * http://purl.org/fidmark/ImageDescriptor\n */\nexport const ImageDescriptor: OwlClass = 'http://purl.org/fidmark/ImageDescriptor';\n\n/**\n * Circular barcode\n * \n * A circular barcode is made up of a series of concentric circles and is typically based on a standard barcode symbology. The barcode is thus readable by the same devices used to read traditional barcodes. The circular barcode can be scanned from any angle. The reading is not influenced by the orientation of the symbol. The redundancy in information ensures a good reading in every case, even if the surface is partially damaged.\n *\n * http://purl.org/fidmark/CircularBarcode\n */\nexport const CircularBarcode: OwlClass = 'http://purl.org/fidmark/CircularBarcode';\n\n/**\n * Algebraic Perspective-Three-Point (AP3P) pose computation\n * \n * \n *\n * http://purl.org/fidmark/AP3PPoseComputation\n */\nexport const AP3PPoseComputation: OwlClass = 'http://purl.org/fidmark/AP3PPoseComputation';\n\n/**\n * Perspective-n-Point (PnP) pose computation\n * \n * The pose computation problem consists in solving for the rotation and translation that minimizes the reprojection error from 3D-2D point correspondences.\n *\n * http://purl.org/fidmark/PnPPoseComputation\n */\nexport const PnPPoseComputation: OwlClass = 'http://purl.org/fidmark/PnPPoseComputation';\n\n/**\n * Augmented Reality (AR) platform\n * \n * \n *\n * http://purl.org/fidmark/ARPlatform\n */\nexport const ARPlatform: OwlClass = 'http://purl.org/fidmark/ARPlatform';\n\n/**\n * ARTag\n * \n * An ARTag is a fiducial marker system to support 3D registration (alignment) and pose tracking in augmented reality. They can be used to facilitate the appearance of virtual objects, games, and animations within the real world. Like the earlier ARToolKit system, they allow for video tracking capabilities that calculate a camera's position and orientation relative to physical markers in real time. Once the camera's position is known, a virtual camera can be positioned at the same point, revealing the virtual object at the location of the ARTag. It thus addresses two of the key problems in Augmented Reality: viewpoint tracking and virtual object interaction. An ARTag appears on the Mars Science Laboratory.A similar technique is being used by NASA's Spacecraft 3D smartphone app as an educational outreach tool. ARTag is supported by the open source Goblin XNA software.\n *\n * http://purl.org/fidmark/ARTag\n */\nexport const ARTag: OwlClass = 'http://purl.org/fidmark/ARTag';\n\n/**\n * 2D barcode\n * \n * Two-dimensional (2D) use rectangles, dots, hexagons and other patterns, called matrix codes or 2D barcodes, although they do not use bars as such. 2D barcodes can be read using purpose-built 2D optical scanners, which exist in a few different forms. 2D barcodes can also be read by a digital camera connected to a microcomputer running software that takes a photographic image of the barcode and analyzes the image to deconstruct and decode the 2D barcode. A mobile device with an inbuilt camera, such as smartphone, can function as the latter type of 2D barcode reader using specialized application software (The same sort of mobile device could also read 1D barcodes, depending on the application software).\n *\n * http://purl.org/fidmark/Barcode2D\n */\nexport const Barcode2D: OwlClass = 'http://purl.org/fidmark/Barcode2D';\n\n/**\n * ARToolKit\n * \n * ARToolKit is an open-source computer tracking library for creation of strong augmented reality applications that overlay virtual imagery on the real world. Currently, it is maintained as an open-source project hosted on GitHub. ARToolKit is a very widely used AR tracking library with over 160,000 downloads on its last public release in 2004.\n *\n * http://purl.org/fidmark/ARToolKit\n */\nexport const ARToolKit: OwlClass = 'http://purl.org/fidmark/ARToolKit';\n\n/**\n * Barcode\n * \n * A barcode or bar code is a method of representing data in a visual, machine-readable form.\n *\n * http://purl.org/fidmark/Barcode\n */\nexport const Barcode: OwlClass = 'http://purl.org/fidmark/Barcode';\n\n/**\n * Active marker\n * \n * An active fiducial marker is a dynamic marker that can dynamically change its visual appearance in order to enable detection or identification.\n *\n * http://purl.org/fidmark/ActiveMarker\n */\nexport const ActiveMarker: OwlClass = 'http://purl.org/fidmark/ActiveMarker';\n\n/**\n * AprilTag\n * \n * AprilTag is a visual fiducial system, useful for a wide variety of tasks including augmented reality, robotics, and camera calibration. Targets can be created from an ordinary printer, and the AprilTag detection software computes the precise 3D position, orientation, and identity of the tags relative to the camera. The AprilTag library is implemented in C with no external dependencies. It is designed to be easily included in other applications, as well as be portable to embedded devices. Real-time performance can be achieved even on cell-phone grade processors.\n *\n * http://purl.org/fidmark/AprilTag\n */\nexport const AprilTag: OwlClass = 'http://purl.org/fidmark/AprilTag';\n\n/**\n * ArUco\n * \n * An ArUco marker is a synthetic square marker composed by a wide black border and an inner binary matrix which determines its identifier (id). The black border facilitates its fast detection in the image and the binary codification allows its identification and the application of error detection and correction techniques. The marker size determines the size of the internal matrix. For instance a marker size of 4x4 is composed by 16 bits.\n *\n * http://purl.org/fidmark/ArUco\n */\nexport const ArUco: OwlClass = 'http://purl.org/fidmark/ArUco';\n\n/**\n * Passive marker\n * \n * \n *\n * http://purl.org/fidmark/PassiveMarker\n */\nexport const PassiveMarker: OwlClass = 'http://purl.org/fidmark/PassiveMarker';\n\n/**\n * 1D barcode\n * \n * A barcode or bar code is a method of representing data in a visual, machine-readable form. Initially, barcodes represented data by varying the widths, spacings and sizes of parallel lines. These barcodes, now commonly referred to as linear or one-dimensional (1D), can be scanned by special optical scanners, called barcode readers, of which there are several types.\n *\n * http://purl.org/fidmark/Barcode1D\n */\nexport const Barcode1D: OwlClass = 'http://purl.org/fidmark/Barcode1D';\n\n/**\n * BinaryID\n * \n * \n *\n * http://purl.org/fidmark/BinaryID\n */\nexport const BinaryID: OwlClass = 'http://purl.org/fidmark/BinaryID';\n\n/**\n * BullsEye\n * \n * \n *\n * http://purl.org/fidmark/BullsEye\n */\nexport const BullsEye: OwlClass = 'http://purl.org/fidmark/BullsEye';\n\n/**\n * CALTag\n * \n * CALTag is a self-identifying marker pattern that can be accurately and automatically detected in images. Detection is robust to occlusions, uneven illumination and moderate lens distortion.\n * \n * Chequerboards are often used for camera calibration, with the interior saddle points providing the necessary point correspondences. Manual identification of these points is at best tedious, and at worst, infeasible and unreliable (especially when calibrating large arrays of cameras). By augmenting the pattern with self-identifying binary codes, much like the excellent ARTag system, this process can be automated.\n * \n * Whereas ARTag has highly robust error detection and correction, it suffers from licence restrictions, and a somewhat inaccurate corner detector. CALTag employs rudimentary error detection, but the code is free to use and modify, and it detects corners using a very accurate saddle-point finder.\n *\n * http://purl.org/fidmark/CALTag\n */\nexport const CALTag: OwlClass = 'http://purl.org/fidmark/CALTag';\n\n/**\n * Concentric contrasting circles\n * \n * \n *\n * http://purl.org/fidmark/CCC\n */\nexport const CCC: OwlClass = 'http://purl.org/fidmark/CCC';\n\n/**\n * CCTag\n * \n * CCTag markers are a robust, highly accurate fiducial system that can be robustly localized in the image even under challenging conditions. The library can efficiently detect the position of the image of the (common) circle center and identify the marker based on the different ratio of their crown sizes. Each marker can be uniquely identified thanks to the thickness of each crown, which encodes the information of the marker, typically a unique ID.\n *\n * http://purl.org/fidmark/CCTag\n */\nexport const CCTag: OwlClass = 'http://purl.org/fidmark/CCTag';\n\n/**\n * Chilitags\n * \n * Chilitags are a C++ cross-platform software library for the detection and identification of 2D fiducial markers (a.k.a. tags). Their purpose is to be printed and placed on objects from the real world, to form the basis of Robotics or Augmented Reality (AR) applications. Using a camera, the position of the tagged objects can be acquired by a computer.\n *\n * http://purl.org/fidmark/Chilitags\n */\nexport const Chilitags: OwlClass = 'http://purl.org/fidmark/Chilitags';\n\n/**\n * ChromaTag\n * \n * ChromaTag is a colored fiducial marker and detection algorithm that is significantly faster than other markers; it uses opponent colors to limit and quickly reject initial false detections and grayscale for precise localization.\n *\n * http://purl.org/fidmark/ChromaTag\n */\nexport const ChromaTag: OwlClass = 'http://purl.org/fidmark/ChromaTag';\n\n/**\n * \n * \n * \n *\n * http://purl.org/fidmark/Cybercode\n */\nexport const Cybercode: OwlClass = 'http://purl.org/fidmark/Cybercode';\n\n/**\n * Efficient Perspective-n-Point (EPnP) pose computation\n * \n * \n *\n * http://purl.org/fidmark/EPnPPoseComputation\n */\nexport const EPnPPoseComputation: OwlClass = 'http://purl.org/fidmark/EPnPPoseComputation';\n\n/**\n * FourierTag\n * \n * \n *\n * http://purl.org/fidmark/FourierTag\n */\nexport const FourierTag: OwlClass = 'http://purl.org/fidmark/FourierTag';\n\n/**\n * Infinitesimal Plane-Based Pose Estimation (IPPE)\n * \n * \n *\n * http://purl.org/fidmark/IPPEPoseComputation\n */\nexport const IPPEPoseComputation: OwlClass = 'http://purl.org/fidmark/IPPEPoseComputation';\n\n/**\n * InterSense\n * \n * \n *\n * http://purl.org/fidmark/InterSense\n */\nexport const InterSense: OwlClass = 'http://purl.org/fidmark/InterSense';\n\n/**\n * Marker detection\n * \n * Marker detection is a procedure where an image sensor (e.g. a camera) detects a fiducial marker in its field of view.\n *\n * http://purl.org/fidmark/MarkerDetection\n */\nexport const MarkerDetection: OwlClass = 'http://purl.org/fidmark/MarkerDetection';\n\n/**\n * Marker origin\n * \n * Marker origin indicates the origin of the 0-point on the marker's surface.\n *\n * http://purl.org/fidmark/MarkerOrigin\n */\nexport const MarkerOrigin: OwlClass = 'http://purl.org/fidmark/MarkerOrigin';\n\n/**\n * Marker based pose estimation\n * \n * Marker based pose estimation is a positioning technique that determines a position and orientation from a detected marker.\n *\n * http://purl.org/fidmark/MarkerPoseEstimation\n */\nexport const MarkerPoseEstimation: OwlClass = 'http://purl.org/fidmark/MarkerPoseEstimation';\n\n/**\n * Markerless pose estimation\n * \n * \n *\n * http://purl.org/fidmark/MarkerlessPoseEstimation\n */\nexport const MarkerlessPoseEstimation: OwlClass = 'http://purl.org/fidmark/MarkerlessPoseEstimation';\n\n/**\n * MaxiCode\n * \n * MaxiCode is a public domain, machine-readable symbol system originally created by the United Parcel Service in 1992. Suitable for tracking and managing the shipment of packages, it resembles an Aztec Code or QR code, but uses dots arranged in a hexagonal grid instead of square grid.\n *\n * http://purl.org/fidmark/MaxiCode\n */\nexport const MaxiCode: OwlClass = 'http://purl.org/fidmark/MaxiCode';\n\n/**\n * Multi-ring\n * \n * Multi-ring color fiducials have different number of rings at different fiducial levels. We extend the concentric circular fiducials to multi-ring, multi-size fiducial systems. These provide scalability to fiducial tracking AR. Because the fiducial systems are incremental, they allow the tracking range to be easily extended. The fiducial systems also introduce a large number of unique fiducials, and that makes fiducial identification easier. These fiducial systems help in building large-scale applications by providing a convenient way to unify multiple local coordinate systems.\n *\n * http://purl.org/fidmark/MultiRing\n */\nexport const MultiRing: OwlClass = 'http://purl.org/fidmark/MultiRing';\n\n/**\n * Perspective-Three-Point (P3P) pose computation\n * \n * \n *\n * http://purl.org/fidmark/P3PPoseComputation\n */\nexport const P3PPoseComputation: OwlClass = 'http://purl.org/fidmark/P3PPoseComputation';\n\n/**\n * Pi-Tag\n * \n * \n *\n * http://purl.org/fidmark/PiTag\n */\nexport const PiTag: OwlClass = 'http://purl.org/fidmark/PiTag';\n\n/**\n * Pose output\n * \n * \n *\n * http://purl.org/fidmark/PoseOutput\n */\nexport const PoseOutput: OwlClass = 'http://purl.org/fidmark/PoseOutput';\n\n/**\n * QR code\n * \n * A QR code (an initialism for quick response code) is a type of matrix barcode (or two-dimensional barcode) invented in 1994 by the Japanese company Denso Wave. A barcode is a machine-readable optical label that can contain information about the item to which it is attached. In practice, QR codes often contain data for a locator, identifier, or tracker that points to a website or application. QR codes use four standardized encoding modes (numeric, alphanumeric, byte/binary, and kanji) to store data efficiently; extensions may also be used.\n *\n * http://purl.org/fidmark/QRCode\n */\nexport const QRCode: OwlClass = 'http://purl.org/fidmark/QRCode';\n\n/**\n * RuneTag\n * \n * \n *\n * http://purl.org/fidmark/RuneTag\n */\nexport const RuneTag: OwlClass = 'http://purl.org/fidmark/RuneTag';\n\n/**\n * SIFT\n * \n * \n *\n * http://purl.org/fidmark/SIFT\n */\nexport const SIFT: OwlClass = 'http://purl.org/fidmark/SIFT';\n\n/**\n * STag\n * \n * \n *\n * http://purl.org/fidmark/STag\n */\nexport const STag: OwlClass = 'http://purl.org/fidmark/STag';\n\n/**\n * TRIP\n * \n * \n *\n * http://purl.org/fidmark/TRIP\n */\nexport const TRIP: OwlClass = 'http://purl.org/fidmark/TRIP';\n\n/**\n * TopoTag\n * \n * Fiducial markers have been playing an important role in augmented reality (AR), robot navigation, and general applications where the relative pose between a camera and an object is required. Here we introduce TopoTag, a robust and scalable topological fiducial marker system, which supports reliable and accurate pose estimation from a single image. TopoTag uses topological and geometrical information in marker detection to achieve higher robustness. Topological information is extensively used for 2D marker detection, and further corresponding geometrical information for ID decoding. Robust 3D pose estimation is achieved by taking advantage of all TopoTag vertices. Without sacrificing bits for higher recall and precision like previous systems, TopoTag can use full bits for ID encoding. TopoTag supports tens of thousands unique IDs and easily extends to millions of unique tags resulting in massive scalability.\n *\n * http://purl.org/fidmark/TopoTag\n */\nexport const TopoTag: OwlClass = 'http://purl.org/fidmark/TopoTag';\n\n/**\n * VisualCode\n * \n * \n *\n * http://purl.org/fidmark/VisualCode\n */\nexport const VisualCode: OwlClass = 'http://purl.org/fidmark/VisualCode';\n\n/**\n * WhyCode\n * \n * \n *\n * http://purl.org/fidmark/WhyCode\n */\nexport const WhyCode: OwlClass = 'http://purl.org/fidmark/WhyCode';\n\n/**\n * \n * \n * \n *\n * http://purl.org/fidmark/WhyCon\n */\nexport const WhyCon: OwlClass = 'http://purl.org/fidmark/WhyCon';\n\n/**\n * reacTIVision\n * \n * reacTIVision is an open source, cross-platform computer vision framework for the fast and robust tracking of fiducial markers attached onto physical objects, as well as for multi-touch finger tracking. It was mainly designed as a toolkit for the rapid development of table-based tangible user interfaces (TUI) and multi-touch interactive surfaces. This framework has been developed by Martin Kaltenbrunner and Ross Bencina as the underlying sensor component of the Reactable, a tangible modular synthesizer that has set the standards for tangible multi-touch applications.\n *\n * http://purl.org/fidmark/reacTIVision\n */\nexport const reacTIVision: OwlClass = 'http://purl.org/fidmark/reacTIVision';\n\n/**\n * codes\n * \n * A list of codes associated to a dictionary.\n *\n * http://purl.org/fidmark/codes\n */\nexport const codes: OwlObjectProperty = 'http://purl.org/fidmark/codes';\n\n/**\n * has marker dictionary\n * \n * A marker dictionary defines the different variants that can be achieved using the available encoded bits and error correction.\n *\n * http://purl.org/fidmark/hasDictionary\n */\nexport const hasDictionary: OwlObjectProperty = 'http://purl.org/fidmark/hasDictionary';\n\n/**\n * has marker height\n * \n * Defines the marker height in a specified unit. This can be used for determining the scale of the marker.\n *\n * http://purl.org/fidmark/hasHeight\n */\nexport const hasHeight: OwlObjectProperty = 'http://purl.org/fidmark/hasHeight';\n\n/**\n * has image descriptor\n * \n * \n *\n * http://purl.org/fidmark/hasImageDesciptor\n */\nexport const hasImageDesciptor: OwlObjectProperty = 'http://purl.org/fidmark/hasImageDesciptor';\n\n/**\n * has marker\n * \n * Indicates a marker on an (optical) positioning system\n *\n * http://purl.org/fidmark/hasMarker\n */\nexport const hasMarker: OwlObjectProperty = 'http://purl.org/fidmark/hasMarker';\n\n/**\n * has origin\n * \n * \n *\n * http://purl.org/fidmark/hasOrigin\n */\nexport const hasOrigin: OwlObjectProperty = 'http://purl.org/fidmark/hasOrigin';\n\n/**\n * has marker width\n * \n * Defines the marker width in a specified unit. This can be used for determining the scale of the marker.\n *\n * http://purl.org/fidmark/hasWidth\n */\nexport const hasWidth: OwlObjectProperty = 'http://purl.org/fidmark/hasWidth';\n\n/**\n * is image descriptor of\n * \n * \n *\n * http://purl.org/fidmark/isImageDescriptorOf\n */\nexport const isImageDescriptorOf: OwlObjectProperty = 'http://purl.org/fidmark/isImageDescriptorOf';\n\n/**\n * part of\n * \n * Describes a feature of interest being part of another feature of interest.\n *\n * http://purl.org/fidmark/partOf\n */\nexport const partOf: OwlObjectProperty = 'http://purl.org/fidmark/partOf';\n\n/**\n * as image\n * \n * A marker image links to an image URI or base64 representation of the marker.\n *\n * http://purl.org/fidmark/asImage\n */\nexport const asImage: OwlDatatypeProperty = 'http://purl.org/fidmark/asImage';\n\n/**\n * as NFT\n * \n * Image descriptor as natural feature tracking descriptor\n *\n * http://purl.org/fidmark/asNFT\n */\nexport const asNFT: OwlDatatypeProperty = 'http://purl.org/fidmark/asNFT';\n\n/**\n * as pattern\n * \n * \n *\n * http://purl.org/fidmark/asPATT\n */\nexport const asPATT: OwlDatatypeProperty = 'http://purl.org/fidmark/asPATT';\n\n/**\n * as ZFT\n * \n * \n *\n * http://purl.org/fidmark/asZFT\n */\nexport const asZFT: OwlDatatypeProperty = 'http://purl.org/fidmark/asZFT';\n\n/**\n * CRC\n * \n * \n *\n * http://purl.org/fidmark/crc\n */\nexport const crc: OwlDatatypeProperty = 'http://purl.org/fidmark/crc';\n\n/**\n * number of crowns\n * \n * Indicates the number of crowns in a circular barcode.\n *\n * http://purl.org/fidmark/crowns\n */\nexport const crowns: OwlDatatypeProperty = 'http://purl.org/fidmark/crowns';\n\n/**\n * dictionary size\n * \n * \n *\n * http://purl.org/fidmark/dictionarySize\n */\nexport const dictionarySize: OwlDatatypeProperty = 'http://purl.org/fidmark/dictionarySize';\n\n/**\n * maximum identifiers\n * \n * \n *\n * http://purl.org/fidmark/maxIdentifiers\n */\nexport const maxIdentifiers: OwlDatatypeProperty = 'http://purl.org/fidmark/maxIdentifiers';\n\n/**\n * hamming distance\n * \n * The minimum hamming distance between two codes\n *\n * http://purl.org/fidmark/hammingDistance\n */\nexport const hammingDistance: OwlDatatypeProperty = 'http://purl.org/fidmark/hammingDistance';\n\n/**\n * marker bits\n * \n * Marker bits indicates the amount of bits that are available.\n *\n * http://purl.org/fidmark/markerBits\n */\nexport const markerBits: OwlDatatypeProperty = 'http://purl.org/fidmark/markerBits';\n\n/**\n * marker code\n * \n * Marker hexadecimal code\n *\n * http://purl.org/fidmark/markerCode\n */\nexport const markerCode: OwlDatatypeProperty = 'http://purl.org/fidmark/markerCode';\n\n/**\n * marker data\n * \n * Encoded information within a marker.\n *\n * http://purl.org/fidmark/markerData\n */\nexport const markerData: OwlDatatypeProperty = 'http://purl.org/fidmark/markerData';\n\n/**\n * marker identifier\n * \n * If the marker can be identified using a specified dictionary, its identifier can be indicated using this data property.\n *\n * http://purl.org/fidmark/markerIdentifier\n */\nexport const markerIdentifier: OwlDatatypeProperty = 'http://purl.org/fidmark/markerIdentifier';\n\n/**\n * version\n * \n * The version number of a marker dictionary.\n *\n * http://purl.org/fidmark/version\n */\nexport const version: OwlDatatypeProperty = 'http://purl.org/fidmark/version';\n\n/**\n * marker color\n * \n * Describes the color of the marker.\n *\n * http://purl.org/fidmark/color\n */\nexport const color: OtherIndividual = 'http://purl.org/fidmark/color';\n\n/**\n * marker encoding\n * \n * Describes the encoding method of the marker.\n *\n * http://purl.org/fidmark/encoding\n */\nexport const encoding: OtherIndividual = 'http://purl.org/fidmark/encoding';\n\n/**\n * OpenCV name\n * \n * OpenCV variable/object name\n *\n * http://purl.org/fidmark/opencvName\n */\nexport const opencvName: OtherIndividual = 'http://purl.org/fidmark/opencvName';\n\n/**\n * marker shape\n * \n * Describes the shape of the marker.\n *\n * http://purl.org/fidmark/shape\n */\nexport const shape: OtherIndividual = 'http://purl.org/fidmark/shape';\n\n/**\n * supported marker\n * \n * Inidicates the relationship of a dictionary to a marker type.\n *\n * http://purl.org/fidmark/supportedMarker\n */\nexport const supportedMarker: OtherIndividual = 'http://purl.org/fidmark/supportedMarker';\n\n/**\n * ArUco 4x4 dictionary with 100 tags\n * \n * \n *\n * http://purl.org/fidmark/DICT_4X4_100\n */\nexport const DICT_4X4_100: OtherIndividual = 'http://purl.org/fidmark/DICT_4X4_100';\n\n/**\n * ArUco 4x4 dictionary with 1000 tags\n * \n * \n *\n * http://purl.org/fidmark/DICT_4X4_1000\n */\nexport const DICT_4X4_1000: OtherIndividual = 'http://purl.org/fidmark/DICT_4X4_1000';\n\n/**\n * ArUco 4x4 dictionary with 250 tags\n * \n * \n *\n * http://purl.org/fidmark/DICT_4X4_250\n */\nexport const DICT_4X4_250: OtherIndividual = 'http://purl.org/fidmark/DICT_4X4_250';\n\n/**\n * ArUco 4x4 dictionary with 50 tags\n * \n * \n *\n * http://purl.org/fidmark/DICT_4X4_50\n */\nexport const DICT_4X4_50: OtherIndividual = 'http://purl.org/fidmark/DICT_4X4_50';\n\n/**\n * ArUco 5x5 dictionary with 100 tags\n * \n * \n *\n * http://purl.org/fidmark/DICT_5X5_100\n */\nexport const DICT_5X5_100: OtherIndividual = 'http://purl.org/fidmark/DICT_5X5_100';\n\n/**\n * ArUco 5x5 dictionary with 1000 tags\n * \n * \n *\n * http://purl.org/fidmark/DICT_5X5_1000\n */\nexport const DICT_5X5_1000: OtherIndividual = 'http://purl.org/fidmark/DICT_5X5_1000';\n\n/**\n * ArUco 5x5 dictionary with 250 tags\n * \n * \n *\n * http://purl.org/fidmark/DICT_5X5_250\n */\nexport const DICT_5X5_250: OtherIndividual = 'http://purl.org/fidmark/DICT_5X5_250';\n\n/**\n * ArUco 5x5 dictionary with 50 tags\n * \n * \n *\n * http://purl.org/fidmark/DICT_5X5_50\n */\nexport const DICT_5X5_50: OtherIndividual = 'http://purl.org/fidmark/DICT_5X5_50';\n\n/**\n * ArUco 6x6 dictionary with 100 tags\n * \n * \n *\n * http://purl.org/fidmark/DICT_6X6_100\n */\nexport const DICT_6X6_100: OtherIndividual = 'http://purl.org/fidmark/DICT_6X6_100';\n\n/**\n * ArUco 6x6 dictionary with 1000 tags\n * \n * \n *\n * http://purl.org/fidmark/DICT_6X6_1000\n */\nexport const DICT_6X6_1000: OtherIndividual = 'http://purl.org/fidmark/DICT_6X6_1000';\n\n/**\n * ArUco 6x6 dictionary with 250 tags\n * \n * \n *\n * http://purl.org/fidmark/DICT_6X6_250\n */\nexport const DICT_6X6_250: OtherIndividual = 'http://purl.org/fidmark/DICT_6X6_250';\n\n/**\n * ArUco 6x6 dictionary with 50 tags\n * \n * \n *\n * http://purl.org/fidmark/DICT_6X6_50\n */\nexport const DICT_6X6_50: OtherIndividual = 'http://purl.org/fidmark/DICT_6X6_50';\n\n/**\n * ArUco 7x7 dictionary with 100 tags\n * \n * \n *\n * http://purl.org/fidmark/DICT_7X7_100\n */\nexport const DICT_7X7_100: OtherIndividual = 'http://purl.org/fidmark/DICT_7X7_100';\n\n/**\n * ArUco 7x7 dictionary with 1000 tags\n * \n * \n *\n * http://purl.org/fidmark/DICT_7X7_1000\n */\nexport const DICT_7X7_1000: OtherIndividual = 'http://purl.org/fidmark/DICT_7X7_1000';\n\n/**\n * ArUco 7x7 dictionary with 250 tags\n * \n * \n *\n * http://purl.org/fidmark/DICT_7X7_250\n */\nexport const DICT_7X7_250: OtherIndividual = 'http://purl.org/fidmark/DICT_7X7_250';\n\n/**\n * ArUco 7x7 dictionary with 50 tags\n * \n * \n *\n * http://purl.org/fidmark/DICT_7X7_50\n */\nexport const DICT_7X7_50: OtherIndividual = 'http://purl.org/fidmark/DICT_7X7_50';\n\n/**\n * AprilTag 16h5 dictionary\n * \n * \n *\n * http://purl.org/fidmark/DICT_APRILTAG_16h5\n */\nexport const DICT_APRILTAG_16h5: OtherIndividual = 'http://purl.org/fidmark/DICT_APRILTAG_16h5';\n\n/**\n * AprilTag 25h9 dictionary\n * \n * \n *\n * http://purl.org/fidmark/DICT_APRILTAG_25h9\n */\nexport const DICT_APRILTAG_25h9: OtherIndividual = 'http://purl.org/fidmark/DICT_APRILTAG_25h9';\n\n/**\n * AprilTag 36h10 dictionary\n * \n * \n *\n * http://purl.org/fidmark/DICT_APRILTAG_36h10\n */\nexport const DICT_APRILTAG_36h10: OtherIndividual = 'http://purl.org/fidmark/DICT_APRILTAG_36h10';\n\n/**\n * AprilTag 36h11 dictionary\n * \n * \n *\n * http://purl.org/fidmark/DICT_APRILTAG_36h11\n */\nexport const DICT_APRILTAG_36h11: OtherIndividual = 'http://purl.org/fidmark/DICT_APRILTAG_36h11';\n\n/**\n * ARTag dictionary\n * \n * \n *\n * http://purl.org/fidmark/DICT_ARTAG\n */\nexport const DICT_ARTAG: OtherIndividual = 'http://purl.org/fidmark/DICT_ARTAG';\n\n/**\n * ArUco original dictionary\n * \n * \n *\n * http://purl.org/fidmark/DICT_ARUCO_ORIGINAL\n */\nexport const DICT_ARUCO_ORIGINAL: OtherIndividual = 'http://purl.org/fidmark/DICT_ARUCO_ORIGINAL';\n\n/**\n * ChilliTags dictionary\n * \n * \n *\n * http://purl.org/fidmark/DICT_CHILLITAGS\n */\nexport const DICT_CHILLITAGS: OtherIndividual = 'http://purl.org/fidmark/DICT_CHILLITAGS';\n\n/**\n * ArUco MIP 36h12 dictionary\n * \n * \n *\n * http://purl.org/fidmark/DICT_ARUCO_MIP_36h12\n */\nexport const DICT_ARUCO_MIP_36h12: OtherIndividual = 'http://purl.org/fidmark/DICT_ARUCO_MIP_36h12';\n\n/**\n * ArUco MIP 25h7 dictionary\n * \n * \n *\n * http://purl.org/fidmark/DICT_ARUCO_MIP_25h7\n */\nexport const DICT_ARUCO_MIP_25h7: OtherIndividual = 'http://purl.org/fidmark/DICT_ARUCO_MIP_25h7';\n\n/**\n * ArUco MIP 16h3 dictionary\n * \n * \n *\n * http://purl.org/fidmark/DICT_ARUCO_MIP_16h3\n */\nexport const DICT_ARUCO_MIP_16h3: OtherIndividual = 'http://purl.org/fidmark/DICT_ARUCO_MIP_16h3';\n\n/**\n * reacTIVision amoeba symbology\n * \n * \n *\n * http://purl.org/fidmark/DICT_REACTIVISION_AMOEBA\n */\nexport const DICT_REACTIVISION_AMOEBA: OtherIndividual = 'http://purl.org/fidmark/DICT_REACTIVISION_AMOEBA';\n\n/**\n * reacTIVision yamaarashi symbology\n * \n * \n *\n * http://purl.org/fidmark/DICT_REACTIVISION_YAMAARASHI\n */\nexport const DICT_REACTIVISION_YAMAARASHI: OtherIndividual = 'http://purl.org/fidmark/DICT_REACTIVISION_YAMAARASHI';\n\n/**\n * TopoTag 3x3 dictionary\n * \n * \n *\n * http://purl.org/fidmark/DICT_TOPOTAG_3X3\n */\nexport const DICT_TOPOTAG_3X3: OtherIndividual = 'http://purl.org/fidmark/DICT_TOPOTAG_3X3';\n\n/**\n * TopoTag 4x4 dictionary\n * \n * \n *\n * http://purl.org/fidmark/DICT_TOPOTAG_4X4\n */\nexport const DICT_TOPOTAG_4X4: OtherIndividual = 'http://purl.org/fidmark/DICT_TOPOTAG_4X4';\n\n/**\n * TopoTag 5x5 dictionary\n * \n * \n *\n * http://purl.org/fidmark/DICT_TOPOTAG_5X5\n */\nexport const DICT_TOPOTAG_5X5: OtherIndividual = 'http://purl.org/fidmark/DICT_TOPOTAG_5X5';\n\n/**\n * Bottom left origin\n * \n * \n *\n * http://purl.org/fidmark/OriginBottomLeft\n */\nexport const OriginBottomLeft: OtherIndividual = 'http://purl.org/fidmark/OriginBottomLeft';\n\n/**\n * Bottom right origin\n * \n * Bottom right origin of a square marker.\n *\n * http://purl.org/fidmark/OriginBottomRight\n */\nexport const OriginBottomRight: OtherIndividual = 'http://purl.org/fidmark/OriginBottomRight';\n\n/**\n * Center origin\n * \n * The center origin is the absolute center of a marker.\n *\n * http://purl.org/fidmark/OriginCenter\n */\nexport const OriginCenter: OtherIndividual = 'http://purl.org/fidmark/OriginCenter';\n\n/**\n * Top left origin\n * \n * \n *\n * http://purl.org/fidmark/OriginTopLeft\n */\nexport const OriginTopLeft: OtherIndividual = 'http://purl.org/fidmark/OriginTopLeft';\n\n/**\n * Top right origin\n * \n * \n *\n * http://purl.org/fidmark/OriginTopRight\n */\nexport const OriginTopRight: OtherIndividual = 'http://purl.org/fidmark/OriginTopRight';\n\nexport const _BASE: IriString = 'http://purl.org/fidmark/';\nexport const _PREFIX: string = 'fidmark';","type IriString = `${'http' | 'https'}://${string}`;\ntype Property = IriString; // eslint-disable-line\ntype Class = IriString; // eslint-disable-line\ntype Datatype = IriString; // eslint-disable-line\ntype OwlClass = IriString; // eslint-disable-line\ntype OwlObjectProperty = IriString; // eslint-disable-line\ntype OwlDatatypeProperty = IriString; // eslint-disable-line\ntype HydraResource = IriString; // eslint-disable-line\ntype HydraClass = IriString; // eslint-disable-line\ntype HydraLink = IriString; // eslint-disable-line\ntype HydraTemplatedLink = IriString; // eslint-disable-line\ntype HydraVariableRepresentation = IriString; // eslint-disable-line\ntype OtherIndividual = IriString; // eslint-disable-line\n\n/**\n * Current geometry state\n * \n * A current geometry state classifies the most current - and thereby valid - geometry state. Which state is most current will be defined by the added timestamp using the prov:generatedAtTime relation.\n *\n * https://w3id.org/omg#CurrentGeometryState\n */\nexport const CurrentGeometryState: OwlClass = 'https://w3id.org/omg#CurrentGeometryState';\n\n/**\n * Geometry state\n * \n * A geometry state is an evaluation holding the geometry description and metadata about a geometry that was true for the given time. \n * In case of geometry states, changing geometric properties does not cause the need for a new geometry state as long as the property was changed using the OPM concepts. If this is not the case, a copy of the now valid graph must be created and attached to a new geometry state. If an object within the geometry graph is changed (e.g. changing the primitive \"Box\" into a primitive \"Sphere\"), the old primitive (\"Box\") should be classified as opm:Deleted and the new primitive (\"Sphere\") should be added to the geometry graph in the correct place. The new geometry state should then be connected to any object of the geometry graph that is not opm:Deleted using the omg:containsGeometryObject relation.\n * Metadata of a geometry state must as a minimum be the time of generation stated by prov:generatedAtTime, but preferably also a prov:wasAttributedTo reference to the agent who created the state. In case properties are changed using the OPM concepts, the most current time of generation and agent who created the state will be determined using the omg:containsPropertyState relation.\n * Derived geometry descriptions are also stored as states as these change when the base geometry changes.\n *\n * https://w3id.org/omg#GeometryState\n */\nexport const GeometryState: OwlClass = 'https://w3id.org/omg#GeometryState';\n\n/**\n * Geometry\n * \n * Abstract node for geometry that should not contain geometry descriptions (neither RDF-based or text-based). This node can be used to attach additional information to the information as author, time of creation, geometry context or dependencies with other geometry descriptions as transformations, complementations or derivations. By creating subclasses of this class for specific types of geometry descriptions (e.g. OBJ, GEOM, glTF), more informational value can be added and used in querying for specific geometry description formats.\n *\n * https://w3id.org/omg#Geometry\n */\nexport const Geometry: OwlClass = 'https://w3id.org/omg#Geometry';\n\n/**\n * Geometry context\n * \n * Context of one (or multiple) geometry descriptions. A context can help extracting relevant geometry descriptions by connecting those to a specific shared context. Geometric contexts can be views of planners, planning stages (versions), or individually created contexts.\n *\n * https://w3id.org/omg#GeometryContext\n */\nexport const GeometryContext: OwlClass = 'https://w3id.org/omg#GeometryContext';\n\n/**\n * complements geometry\n * \n * Relation between one geometry and another that is composed by the first. E.g. a point cloud of a columns laser scan in a high geometric detail complementing a simplified CSG geometry of the same column. Both geometry descriptions are closely related, but not directly derived from each other. The complementing geometry description may also just depict a small part of the entire geometry (e.g. the column header).\n *\n * https://w3id.org/omg#complementsGeometry\n */\nexport const complementsGeometry: OwlObjectProperty = 'https://w3id.org/omg#complementsGeometry';\n\n/**\n * contains geometry object\n * \n * Relation between a geometry state and any object (node) of the related RDF-based geometry description that is relevant for this specific geometry state (not including deleted objects).\n *\n * https://w3id.org/omg#containsGeometryObject\n */\nexport const containsGeometryObject: OwlObjectProperty = 'https://w3id.org/omg#containsGeometryObject';\n\n/**\n * contains property state\n * \n * Relation between a geometry state and a relevant property state. Any property that belongs to the geometry state's related geometry objects (using the omg:containsGeometryObject relation) can be a host for relevant property states. \n * This relation can be inferred, as long as the connection to the geometry object (omg:containsGeometryObject), its properties (seas:hasProperty) and the considered property state (opm:hasPropertyState) are modelled correctly.\n *\n * https://w3id.org/omg#containsPropertyState\n */\nexport const containsPropertyState: OwlObjectProperty = 'https://w3id.org/omg#containsPropertyState';\n\n/**\n * has complex geometry description\n * \n * Relation between an object, a geometry, or a geometry state and its RDF-based geometry description. If more than one geometry description should be added to an object, the relation omg:hasGeometry to a new individual of the type omg:Geometry should be used for each geometry description. This step is necessary to allow interconnections between the geometry descriptions regarding their derivation or complementation for easier upkeep of data integrity. The introduction of subproperties of this property for specific geometry descriptions (e.g. OntoBREP, GEOM, OntoSTEP) may ease querying for wanted geometry description formats.\n *\n * https://w3id.org/omg#hasComplexGeometryDescription\n */\nexport const hasComplexGeometryDescription: OwlObjectProperty = 'https://w3id.org/omg#hasComplexGeometryDescription';\n\n/**\n * has geometry\n * \n * Relation between any object and its geometric representation. An object may have multiple geometric representations, while one geometric represenation may always just be connected to one object (inverse functional).\n *\n * https://w3id.org/omg#hasGeometry\n */\nexport const hasGeometry: OwlObjectProperty = 'https://w3id.org/omg#hasGeometry';\n\n/**\n * has geometry context\n * \n * Relation between a geometry or geometry state and its geometric context. A singular geometry may have multiple contexts, just as one context can be used for different geometries (of different objects)\n *\n * https://w3id.org/omg#hasGeometryContext\n */\nexport const hasGeometryContext: OwlObjectProperty = 'https://w3id.org/omg#hasGeometryContext';\n\n/**\n * has geometry state\n * \n * Relation between a geometry and one of its geometry states. For each revision in an RDF-based geometry descriptions where changes were made to the graph nodes and not the properties, a new state must be defined to capture the new graph. This property is inverse functional as one geometry state can only belong to one geometry.\n *\n * https://w3id.org/omg#hasGeometryState\n */\nexport const hasGeometryState: OwlObjectProperty = 'https://w3id.org/omg#hasGeometryState';\n\n/**\n * has inferred property state\n * \n * Relation between a property and its property state that has been inferred from the omg:isExplicitlyDerivedFrom relation. This relation will be inferred by the a chain axiom for every property that is derived from another (geometric) property (using omg:isExplicitlyDerivedFrom) which in turn has its own property state connected with the opm:hasPropertyState relation.\n *\n * https://w3id.org/omg#hasInferredPropertyState\n */\nexport const hasInferredPropertyState: OwlObjectProperty = 'https://w3id.org/omg#hasInferredPropertyState';\n\n/**\n * is explicitly derived from\n * \n * Relation between two properties, where the first property is explicitly derived from the other. This means that the first property will always have the same value as the second. Cases where this relation can be used are if an object's geometry is modelled RDF-based and contains a property defining e.g. the height of the object. Then the non-geometric property for height should be explicitly derived from the geometric property to ensure data integrity.\n *\n * https://w3id.org/omg#isExplicitlyDerivedFrom\n */\nexport const isExplicitlyDerivedFrom: OwlObjectProperty = 'https://w3id.org/omg#isExplicitlyDerivedFrom';\n\n/**\n * is derived from geometry\n * \n * Relation between two geometry descriptions where the first geometry can be derived from the second. It is possible for a geometry to be derived from multiple sources, as well as to model a bi-directional derivation between two geometries by using this relation.\n *\n * https://w3id.org/omg#isDerivedFromGeometry\n */\nexport const isDerivedFromGeometry: OwlObjectProperty = 'https://w3id.org/omg#isDerivedFromGeometry';\n\n/**\n * is derived from geometry state\n * \n * Relation between two geometry states where the first (domain) has been converted from the second (range). A geometry state can only be converted from one other geometry state.\n *\n * https://w3id.org/omg#isDerivedFromGeometryState\n */\nexport const isDerivedFromGeometryState: OwlObjectProperty = 'https://w3id.org/omg#isDerivedFromGeometryState';\n\n/**\n * is implicitly derived from\n * \n * Relation between a property and a geometry, where the property is implicitly derived from the geometry (e.g. properties for volumes or areas). This relation can be used to find inconsistencies, e.g. if the property has been changed while the geometry has not and vice versa.\n *\n * https://w3id.org/omg#isImplicitlyDerivedFrom\n */\nexport const isImplicitlyDerivedFrom: OwlObjectProperty = 'https://w3id.org/omg#isImplicitlyDerivedFrom';\n\n/**\n * is part of geometry \n * \n * Relation between a referencing geometry and its origin geometry. The origin geometry contains a large geometry description, including the reference geometry's description. The reference geometry contains only its identifier within its origin geometry description.\n *\n * https://w3id.org/omg#isPartOfGeometry\n */\nexport const isPartOfGeometry: OwlObjectProperty = 'https://w3id.org/omg#isPartOfGeometry';\n\n/**\n * transforms geometry\n * \n * Relation between one geometry and another one, where the first is a transformation of the second. This might be used when placing multiple objects of the same type and geometry within the same graph (e.g. multiple chairs into a building model). The first geometry will only consist of a transformation or tanslation matrix.\n *\n * https://w3id.org/omg#transformsGeometry\n */\nexport const transformsGeometry: OwlObjectProperty = 'https://w3id.org/omg#transformsGeometry';\n\n/**\n * has referenced geometry identifier\n * \n * Property to add an identifier to a referencing geometry that can be used to identify the referencing geometry in its origin's complete geometry descritpion.\n *\n * https://w3id.org/omg#hasReferencedGeometryId\n */\nexport const hasReferencedGeometryId: OwlDatatypeProperty = 'https://w3id.org/omg#hasReferencedGeometryId';\n\n/**\n * has simple geometry description\n * \n * Datatype property to connect a simple (non RDF-based), text-based or file-based geometry description to an object, geometry or geometry state. In case the geometry description is text-based or in a binary file format, it can be directly added to this property, if it is a file-based geometry description, the URI linking to the file should be added to this property. Should multiple geometries be added to the object, the omg:Geometry class with its relation (omg:hasGeometry) or even geometry states (omg:GeometryState and omg:hasGeometryState) should be introduced for each geometry resp. geometry version.\n *\n * https://w3id.org/omg#hasSimpleGeometryDescription\n */\nexport const hasSimpleGeometryDescription: OwlDatatypeProperty = 'https://w3id.org/omg#hasSimpleGeometryDescription';\n\nexport const _BASE: IriString = 'https://w3id.org/omg#';\nexport const _PREFIX: string = 'omg';","type IriString = `${'http' | 'https'}://${string}`;\ntype Property = IriString; // eslint-disable-line\ntype Class = IriString; // eslint-disable-line\ntype Datatype = IriString; // eslint-disable-line\ntype OwlClass = IriString; // eslint-disable-line\ntype OwlObjectProperty = IriString; // eslint-disable-line\ntype OwlDatatypeProperty = IriString; // eslint-disable-line\ntype HydraResource = IriString; // eslint-disable-line\ntype HydraClass = IriString; // eslint-disable-line\ntype HydraLink = IriString; // eslint-disable-line\ntype HydraTemplatedLink = IriString; // eslint-disable-line\ntype HydraVariableRepresentation = IriString; // eslint-disable-line\ntype OtherIndividual = IriString; // eslint-disable-line\n\n/**\n * Referenced content\n * \n * Referenced content of the following geometry descriptions: glTF and OBJ. It contains exactly one link to a texture, separate binary glTF geometry or a OBJ material that is referenced by the main file (resp. .gltf and .obj). The name of the referenced file, as stored in the main file, is connected via a rdfs:label node\n *\n * https://w3id.org/fog#ReferencedContent\n */\nexport const ReferencedContent: OwlClass = 'https://w3id.org/fog#ReferencedContent';\n\n/**\n * as 3DMO ontology\n * \n * The object relation pointing to a RDF-based geometry description following the 3DMO ontology. It is strongly adviced to use the more specific subproperty (fog:as3dmo_v1.1)\n *\n * https://w3id.org/fog#as3dmo\n */\nexport const as3dmo: OtherIndividual = 'https://w3id.org/fog#as3dmo';\n\n/**\n * as GeoJSON-LD\n * \n * The object relation pointing to a GeoJSON-LD geometry description: a GeoJSON geometry description complemented with the corresponding JSON-LD context to make it RDF. It should be connected to the topnode of the geometry description. Note that this geometry description can only be used to depict single points, as the current JSON-LD specification v1.0 does not implement the deserialisation of nested lists to RDF\n *\n * https://w3id.org/fog#asGeojson-ld\n */\nexport const asGeojson_ld: OtherIndividual = 'https://w3id.org/fog#asGeojson-ld';\n\n/**\n * as GEOM ontology\n * \n * The object relation pointing to a RDF-based geometry description following the GEOM ontology. It should be connected to the topnode of the geometry description.\n *\n * https://w3id.org/fog#asGeomOntology\n */\nexport const asGeomOntology: OtherIndividual = 'https://w3id.org/fog#asGeomOntology';\n\n/**\n * as ifcOWL ontology\n * \n * The object relation pointing to a RDF-based geometry description following the IfcOWL ontology.\n *\n * https://w3id.org/fog#asIfcowl\n */\nexport const asIfcowl: OtherIndividual = 'https://w3id.org/fog#asIfcowl';\n\n/**\n * as ifcOWL v2x3 Final ontology\n * \n * The object relation pointing to a RDF-based geometry description following the IfcOWL v2x3 Final ontology.\n *\n * https://w3id.org/fog#asIfcowl_v2x3final\n */\nexport const asIfcowl_v2x3final: OtherIndividual = 'https://w3id.org/fog#asIfcowl_v2x3final';\n\n/**\n * as ifcOWL v2x3 TC1 ontology\n * \n * The object relation pointing to a RDF-based geometry description following the IfcOWL v2x3 TC1 ontology.\n *\n * https://w3id.org/fog#asIfcowl_v2x3tc1\n */\nexport const asIfcowl_v2x3tc1: OtherIndividual = 'https://w3id.org/fog#asIfcowl_v2x3tc1';\n\n/**\n * as ifcOWL v2x4 Add1 ontology\n * \n * The object relation pointing to a RDF-based geometry description following the IfcOWL v2x4 Add1 ontology.\n *\n * https://w3id.org/fog#asIfcowl_v2x4add1\n */\nexport const asIfcowl_v2x4add1: OtherIndividual = 'https://w3id.org/fog#asIfcowl_v2x4add1';\n\n/**\n * as ifcOWL v2x4 Add2 ontology\n * \n * The object relation pointing to a RDF-based geometry description following the IfcOWL v2x4 Add2 ontology.\n *\n * https://w3id.org/fog#asIfcowl_v2x4add2\n */\nexport const asIfcowl_v2x4add2: OtherIndividual = 'https://w3id.org/fog#asIfcowl_v2x4add2';\n\n/**\n * as ifcOWL v2x4 Final ontology\n * \n * The object relation pointing to a RDF-based geometry description following the IfcOWL v2x4 Final ontology.\n *\n * https://w3id.org/fog#asIfcowl_v2x4final\n */\nexport const asIfcowl_v2x4final: OtherIndividual = 'https://w3id.org/fog#asIfcowl_v2x4final';\n\n/**\n * as OntoBREP ontology\n * \n * The object relation pointing to a RDF-based geometry description following the OntoBREP ontology. It should be connected to the topnode of the geometry description.\n *\n * https://w3id.org/fog#asOntobrepOntology\n */\nexport const asOntobrepOntology: OtherIndividual = 'https://w3id.org/fog#asOntobrepOntology';\n\n/**\n * as OntoSTEP ontology\n * \n * The object relation pointing to a RDF-based geometry description following the OntoSTEP ontology. It should be connected to the topnode of the geometry description.\n *\n * https://w3id.org/fog#asOntostepOntology\n */\nexport const asOntostepOntology: OtherIndividual = 'https://w3id.org/fog#asOntostepOntology';\n\n/**\n * \n * \n * \n *\n * https://w3id.org/fog#hasReferencedContent\n */\nexport const hasReferencedContent: OtherIndividual = 'https://w3id.org/fog#hasReferencedContent';\n\n/**\n * as COLLADA format\n * \n * The datatype relation pointing to a geometry description following the open COLLADA format from the Khronos Group. The format consists of a single .dae file (text-based). It is strongly adviced to use the more specific subproperties (e.g. fog:asCollada_v1.4.1).\n *\n * https://w3id.org/fog#asCollada\n */\nexport const asCollada: OtherIndividual = 'https://w3id.org/fog#asCollada';\n\n/**\n * as DWG format\n * \n * The datatype relation pointing to a geometry description following the proprietary DWG format from Autodesk. The Open Design Alliance created a 'specification for .dwg files' that is publicly available. The format consists of a single .dwg file (binary). It is strongly adviced to use the more specific subproperties (e.g. fog:asDwg_v2018).\n *\n * https://w3id.org/fog#asDwg\n */\nexport const asDwg: OtherIndividual = 'https://w3id.org/fog#asDwg';\n\n/**\n * as DWG 2010 format (.dwg)\n * \n * The datatype relation pointing to a geometry description following the proprietary DWG v2010 format from Autodesk. It consists of a single .dwg file (binary).\n *\n * https://w3id.org/fog#asDwg_v2010\n */\nexport const asDwg_v2010: OtherIndividual = 'https://w3id.org/fog#asDwg_v2010';\n\n/**\n * as DWG 2013 format (.dwg)\n * \n * The datatype relation pointing to a geometry description following the proprietary DWG v2013 format from Autodesk. It consists of a single .dwg file (binary).\n *\n * https://w3id.org/fog#asDwg_v2013\n */\nexport const asDwg_v2013: OtherIndividual = 'https://w3id.org/fog#asDwg_v2013';\n\n/**\n * as DWG 2018 format (.dwg)\n * \n * The datatype relation pointing to a geometry description following the proprietary DWG v2018 format from Autodesk. It consists of a single .dwg file (binary).\n *\n * https://w3id.org/fog#asDwg_v2018\n */\nexport const asDwg_v2018: OtherIndividual = 'https://w3id.org/fog#asDwg_v2018';\n\n/**\n * as E57 format\n * \n * The datatype relation pointing to a point cloud geometry description following the open E57 format developed by the ASTM Committee E57. The format consists of a single .e57 file (partially binary, partially text-based). It is strongly adviced to use the more specific subproperties (e.g. fog:asE57_v1.0).\n *\n * https://w3id.org/fog#asE57\n */\nexport const asE57: OtherIndividual = 'https://w3id.org/fog#asE57';\n\n/**\n * as GeoJSON format\n * \n * The datatype relation pointing to a geometry description following the open GeoJSON format. The format consists of a single .json file (text-based). It is strongly adviced to use the more specific subproperties (e.g. fog:asGeojson_v2016). Note that the version proposed by the IETF GeoJSON Working Group (fog:asGeojson_v2016) is derived from the now obsolete 2008 version (fog:asGeojson_v2008).\n *\n * https://w3id.org/fog#asGeojson\n */\nexport const asGeojson: OtherIndividual = 'https://w3id.org/fog#asGeojson';\n\n/**\n * as GeoJSON format v2008 (.json)\n * \n * The datatype relation pointing to a geometry description following the open GeoJSON v2008 format. The format consists of a single .json file (text-based). Note that the version proposed by the IETF (fog:asGeojson_v2016) is derived from the now obsolete 2008 version (fog:asGeojson_v2008).\n *\n * https://w3id.org/fog#asGeojson_v2008\n */\nexport const asGeojson_v2008: OtherIndividual = 'https://w3id.org/fog#asGeojson_v2008';\n\n/**\n * as GeoJSON v2016 format (.json)\n * \n * The datatype relation pointing to a geometry description following the open GeoJSON v2016 format developed by the IETF GeoJSON Working Group. The format consists of a single .json file (text-based). Note that the version proposed by the IETF (fog:asGeojson_v2016) is derived from the now obsolete 2008 version (fog:asGeojson_v2008).\n *\n * https://w3id.org/fog#asGeojson_v2016\n */\nexport const asGeojson_v2016: OtherIndividual = 'https://w3id.org/fog#asGeojson_v2016';\n\n/**\n * as glTF format\n * \n * The datatype relation pointing to a geometry description following the open glTF format from the Khronos Group. The format consists of one (.gltf with embedded binary geometry/textures/shaders, or .glb) or multiple files (combination of binary and/or text-based files). It is strongly adviced to use the more specific subsubproperties (e.g. fog:asGltf_v2.0-gltf).\n *\n * https://w3id.org/fog#asGltf\n */\nexport const asGltf: OwlDatatypeProperty = 'https://w3id.org/fog#asGltf';\n\n/**\n * as GML format\n * \n * The datatype relation pointing to a text-based geometry description following one of the open GML formats developed by OGC and ISO. The format consists of a single .gml file (text-based). It is strongly adviced to use the more specific subproperties (e.g. fog:asGml_v3.3.0). Note that this property is disjoint with geo:asGML because of the more strict domain and range restrictions in GeoSPARQL.\n *\n * https://w3id.org/fog#asGml\n */\nexport const asGml: OtherIndividual = 'https://w3id.org/fog#asGml';\n\n/**\n * as IFC format\n * \n * The datatype relation pointing to a text-based geometry description following the open IFC format as documented by buildingSMART and in its ISO 16739 standard. The format consists of a single .ifc or .ifcxml file (text-based). It is strongly adviced to use the more specific subproperties (e.g. fog:asIfc_v2x4-icfxml).\n *\n * https://w3id.org/fog#asIfc\n */\nexport const asIfc: OtherIndividual = 'https://w3id.org/fog#asIfc';\n\n/**\n * as IFC v2x3\n * \n * The datatype relation pointing to a text-based geometry description following the open IFC format v2x3 as documented by buildingSMART and in its ISO 16739 standard\n *\n * https://w3id.org/fog#asIfc_v2x3\n */\nexport const asIfc_v2x3: OtherIndividual = 'https://w3id.org/fog#asIfc_v2x3';\n\n/**\n * as IFC v2x3 file (.ifc)\n * \n * The datatype relation pointing to a text-based geometry description following the open IFC format v2x3 as documented by buildingSMART and in its ISO 16739 standard. The IFC file is serialised in the STEP Physical File Format (SPFF).\n *\n * https://w3id.org/fog#asIfc_v2x3-ifc\n */\nexport const asIfc_v2x3_ifc: OtherIndividual = 'https://w3id.org/fog#asIfc_v2x3-ifc';\n\n/**\n * as IFC v2x3 file (.ifcxml)\n * \n * The datatype relation pointing to a text-based geometry description following the open IFC format v2x3 as documented by buildingSMART and in its ISO 16739 standard. The IFC file is serialised in the XML format.\n *\n * https://w3id.org/fog#asIfc_v2x3-ifcxml\n */\nexport const asIfc_v2x3_ifcxml: OtherIndividual = 'https://w3id.org/fog#asIfc_v2x3-ifcxml';\n\n/**\n * as IFC v2x3 TC1\n * \n * The datatype relation pointing to a text-based geometry description following the open IFC format v2x3 TC1 as documented by buildingSMART and in its ISO 16739 standard\n *\n * https://w3id.org/fog#asIfc_v2x3tc1\n */\nexport const asIfc_v2x3tc1: OtherIndividual = 'https://w3id.org/fog#asIfc_v2x3tc1';\n\n/**\n * as IFC v2x3 TC1 file (.ifc)\n * \n * The datatype relation pointing to a text-based geometry description following the open IFC format v2x3 TC1 as documented by buildingSMART and in its ISO 16739 standard. The IFC file is serialised in the STEP Physical File Format (SPFF).\n *\n * https://w3id.org/fog#asIfc_v2x3tc1-ifc\n */\nexport const asIfc_v2x3tc1_ifc: OtherIndividual = 'https://w3id.org/fog#asIfc_v2x3tc1-ifc';\n\n/**\n * as IFC v2x3 TC1 file (.ifcxml)\n * \n * The datatype relation pointing to a text-based geometry description following the open IFC format v2x3 TC1 as documented by buildingSMART and in its ISO 16739 standard. The IFC file is serialised in the XML format.\n *\n * https://w3id.org/fog#asIfc_v2x3tc1-ifcxml\n */\nexport const asIfc_v2x3tc1_ifcxml: OtherIndividual = 'https://w3id.org/fog#asIfc_v2x3tc1-ifcxml';\n\n/**\n * as IFC v2x4\n * \n * The datatype relation pointing to a text-based geometry description following the open IFC format v2x4 as documented by buildingSMART and in its ISO 16739 standard\n *\n * https://w3id.org/fog#asIfc_v2x4\n */\nexport const asIfc_v2x4: OtherIndividual = 'https://w3id.org/fog#asIfc_v2x4';\n\n/**\n * as IFC v2x4 file (.ifc)\n * \n * The datatype relation pointing to a text-based geometry description following the open IFC format v2x4 as documented by buildingSMART and in its ISO 16739 standard. The IFC file is serialised in the STEP Physical File Format (SPFF).\n *\n * https://w3id.org/fog#asIfc_v2x4-ifc\n */\nexport const asIfc_v2x4_ifc: OtherIndividual = 'https://w3id.org/fog#asIfc_v2x4-ifc';\n\n/**\n * as IFC v2x4 file (.ifcxml)\n * \n * The datatype relation pointing to a text-based geometry description following the open IFC format v2x4 as documented by buildingSMART and in its ISO 16739 standard. The IFC file is serialised in the XML format.\n *\n * https://w3id.org/fog#asIfc_v2x4-ifcxml\n */\nexport const asIfc_v2x4_ifcxml: OtherIndividual = 'https://w3id.org/fog#asIfc_v2x4-ifcxml';\n\n/**\n * as IFC v2x4 Add1\n * \n * The datatype relation pointing to a text-based geometry description following the open IFC format v2x4 Add1 as documented by buildingSMART and in its ISO 16739 standard\n *\n * https://w3id.org/fog#asIfc_v2x4add1\n */\nexport const asIfc_v2x4add1: OtherIndividual = 'https://w3id.org/fog#asIfc_v2x4add1';\n\n/**\n * as IFC v2x4 Add1 file (.ifc)\n * \n * The datatype relation pointing to a text-based geometry description following the open IFC format v2x4 Add1 as documented by buildingSMART and in its ISO 16739 standard. The IFC file is serialised in the STEP Physical File Format (SPFF).\n *\n * https://w3id.org/fog#asIfc_v2x4add1-ifc\n */\nexport const asIfc_v2x4add1_ifc: OtherIndividual = 'https://w3id.org/fog#asIfc_v2x4add1-ifc';\n\n/**\n * as IFC v2x4 Add1 file (.ifcxml)\n * \n * The datatype relation pointing to a text-based geometry description following the open IFC format v2x4 Add1 as documented by buildingSMART and in its ISO 16739 standard. The IFC file is serialised in the XML format.\n *\n * https://w3id.org/fog#asIfc_v2x4add1-ifcxml\n */\nexport const asIfc_v2x4add1_ifcxml: OtherIndividual = 'https://w3id.org/fog#asIfc_v2x4add1-ifcxml';\n\n/**\n * as IFC v2x4 Add2\n * \n * The datatype relation pointing to a text-based geometry description following the open IFC format v2x4 Add2 as documented by buildingSMART and in its ISO 16739 standard\n *\n * https://w3id.org/fog#asIfc_v2x4add2\n */\nexport const asIfc_v2x4add2: OtherIndividual = 'https://w3id.org/fog#asIfc_v2x4add2';\n\n/**\n * as IFC v2x4 Add2 file (.ifc)\n * \n * The datatype relation pointing to a text-based geometry description following the open IFC format v2x4 Add2 as documented by buildingSMART and in its ISO 16739 standard. The IFC file is serialised in the STEP Physical File Format (SPFF).\n *\n * https://w3id.org/fog#asIfc_v2x4add2-ifc\n */\nexport const asIfc_v2x4add2_ifc: OtherIndividual = 'https://w3id.org/fog#asIfc_v2x4add2-ifc';\n\n/**\n * as IFC v2x4 Add 2 file (.ifcxml)\n * \n * The datatype relation pointing to a text-based geometry description following the open IFC format v2x4 Add2 as documented by buildingSMART and in its ISO 16739 standard. The IFC file is serialised in the XML format.\n *\n * https://w3id.org/fog#asIfc_v2x4add2-ifcxml\n */\nexport const asIfc_v2x4add2_ifcxml: OtherIndividual = 'https://w3id.org/fog#asIfc_v2x4add2-ifcxml';\n\n/**\n * as IGES format\n * \n * The datatype relation pointing to a geometry description following the IGES format as documented in its ANSI standard. The format consists of a single .iges/.igs file (text-based). It is strongly adviced to use the more specific subproperties (e.g. fog:asIges_v5.3).\n *\n * https://w3id.org/fog#asIges\n */\nexport const asIges: OtherIndividual = 'https://w3id.org/fog#asIges';\n\n/**\n * as LAS point cloud format\n * \n * The datatype relation pointing to a binary encoded point cloud following the open LAS format which was developed by the ASPRS. The format consists of a single .las or .laz file (binary). It is strongly adviced to use the more specific subproperties (e.g. fog:asLas_v1.4-las).\n *\n * https://w3id.org/fog#asLas\n */\nexport const asLas: OtherIndividual = 'https://w3id.org/fog#asLas';\n\n/**\n * as Nexus format\n * \n * The datatype relation pointing to a geometry description following the Nexus format for multiresoltion meshes and point clouds (ISTI - Italian National Research Council - Visual Computing Lab). The format consists of a single .nxs or .nxz file (binary). It is strongly adviced to use the more specific subproperties (e.g. fog:asNexus_v4.2-nxs)\n *\n * https://w3id.org/fog#asNexus\n */\nexport const asNexus: OtherIndividual = 'https://w3id.org/fog#asNexus';\n\n/**\n * as OBJ format\n * \n * The datatype relation pointing to a text-based geometry description following the OBJ format developed by Wavefront Technologies. The format consists of a single .obj file and an optional material file (.mtl). It is strongly adviced to use the more specific subsubproperties (e.g. fog:asObj_v3.0-obj).\n *\n * https://w3id.org/fog#asObj\n */\nexport const asObj: OwlDatatypeProperty = 'https://w3id.org/fog#asObj';\n\n/**\n * as PCD point cloud format\n * \n * The datatype relation pointing to a binary encoded point cloud following the open PCD format which was developed as part of the open source project PCL (point cloud library). The format consists of a single .pcd file (binary or text-based). It is strongly adviced to use the more specific subproperties (e.g. fog:asPcd_v0.7).\n *\n * https://w3id.org/fog#asPcd\n */\nexport const asPcd: OtherIndividual = 'https://w3id.org/fog#asPcd';\n\n/**\n * \n * \n * The datatype relation pointing to a geometry description following the PLY format which was developed by Greg Turk (Stanford University). The format consists of a single .ply file which is either text-based or binary. It is strongly adviced to use the more specific subsubproperties (e.g. fog:asPly_v1.0-ascii).\n *\n * https://w3id.org/fog#asPly\n */\nexport const asPly: OtherIndividual = 'https://w3id.org/fog#asPly';\n\n/**\n * as Revit format\n * \n * The datatype relation pointing to a geometry description following the proprietary Revit format (Autodesk). The format consists of a single .rvt file (binary). It is strongly adviced to use the more specific subproperties (e.g. fog:asRevit_v2020)\n *\n * https://w3id.org/fog#asRevit\n */\nexport const asRevit: OtherIndividual = 'https://w3id.org/fog#asRevit';\n\n/**\n * as Revit format v2017 (.rvt)\n * \n * The datatype relation pointing to a geometry description following the proprietary Revit v2017 format (Autodesk). The format consists of a single .rvt file (binary).\n *\n * https://w3id.org/fog#asRevit_v2017\n */\nexport const asRevit_v2017: OtherIndividual = 'https://w3id.org/fog#asRevit_v2017';\n\n/**\n * as Revit format v2018 (.rvt)\n * \n * The datatype relation pointing to a geometry description following the proprietary Revit v2018 format (Autodesk). The format consists of a single .rvt file (binary).\n *\n * https://w3id.org/fog#asRevit_v2018\n */\nexport const asRevit_v2018: OtherIndividual = 'https://w3id.org/fog#asRevit_v2018';\n\n/**\n * as Revit format v2019 (.rvt)\n * \n * The datatype relation pointing to a geometry description following the proprietary Revit v2019 format (Autodesk). The format consists of a single .rvt file (binary).\n *\n * https://w3id.org/fog#asRevit_v2019\n */\nexport const asRevit_v2019: OtherIndividual = 'https://w3id.org/fog#asRevit_v2019';\n\n/**\n * as Revit format v2020 (.rvt)\n * \n * The datatype relation pointing to a geometry description following the proprietary Revit v2020 format (Autodesk). The format consists of a single .rvt file (binary).\n *\n * https://w3id.org/fog#asRevit_v2020\n */\nexport const asRevit_v2020: OtherIndividual = 'https://w3id.org/fog#asRevit_v2020';\n\n/**\n * as Rhino format\n * \n * The datatype relation pointing to a geometry description following the proprietary Rhinoceros format (McNeel). The format consists of a single .3dm file (binary). It is strongly adviced to use the more specific subproperties (e.g. fog:asRhino_v6)\n *\n * https://w3id.org/fog#asRhino\n */\nexport const asRhino: OtherIndividual = 'https://w3id.org/fog#asRhino';\n\n/**\n * as Rhino format v5 (.3dm)\n * \n * The datatype relation pointing to a geometry description following the proprietary Rhinoceros format v5 (McNeel). The format consists of a single .3dm file (binary).\n *\n * https://w3id.org/fog#asRhino_v5\n */\nexport const asRhino_v5: OtherIndividual = 'https://w3id.org/fog#asRhino_v5';\n\n/**\n * as Rhino format v6 (.3dm)\n * \n * The datatype relation pointing to a geometry description following the proprietary Rhinoceros format v6 (McNeel). The format consists of a single .3dm file (binary).\n *\n * https://w3id.org/fog#asRhino_v6\n */\nexport const asRhino_v6: OtherIndividual = 'https://w3id.org/fog#asRhino_v6';\n\n/**\n * as Simple Feature Access geometry format\n * \n * The datatype relation pointing to a geometry description following the open Simple Feature Access (SFA) standard developed by the OGC and ISO. The format consists of a single .wkt (text-based) or .wkb (binary) file. It is strongly adviced to use the more specific subsubproperties (e.g. fog:asSfa_v2-wkt).\n *\n * https://w3id.org/fog#asSfa\n */\nexport const asSfa: OtherIndividual = 'https://w3id.org/fog#asSfa';\n\n/**\n * as Simple Feature Access v1 format\n * \n * The datatype relation pointing to a geometry description following the open Simple Feature Access (SFA) v1 standard developed by the OGC. The format is text-based. It is strongly adviced to use the more specific subproperties (e.g. fog:asSfa_v1-wkt). Note that this standard is now considered depreciated in favor of SFA v2.\n *\n * https://w3id.org/fog#asSfa_v1\n */\nexport const asSfa_v1: OtherIndividual = 'https://w3id.org/fog#asSfa_v1';\n\n/**\n * as Well Known Text SFA v1 geometry\n * \n * The datatype relation pointing to a Well Know Text (WKT) geometry following the open Simple Feature Access (SFA) v1 standard developed by the OGC. The format is text-based. Note that the SFA v1 standard is now considered depreciated in favor of SFA v2. Note that this property is disjoint with geo:asWKT because of the more strict domain and range restrictions in GeoSPARQL.\n *\n * https://w3id.org/fog#asSfa_v1-wkt\n */\nexport const asSfa_v1_wkt: OtherIndividual = 'https://w3id.org/fog#asSfa_v1-wkt';\n\n/**\n * as Simple Feature Access v2 format\n * \n * The datatype relation pointing to a geometry description following the open Simple Feature Access (SFA) v2 standard developed by the OGC and ISO. The format is either text-based (WKT) or binary (WKB). It is strongly adviced to use the more specific subproperties (e.g. fog:asSfa_v2-wkt).\n *\n * https://w3id.org/fog#asSfa_v2\n */\nexport const asSfa_v2: OtherIndividual = 'https://w3id.org/fog#asSfa_v2';\n\n/**\n * as Well Known Binary SFA v2 geometry\n * \n * The datatype relation pointing to a Well Know Binary (WKB) geometry following the open Simple Feature Access (SFA) v2 standard developed by the OGC and ISO.\n *\n * https://w3id.org/fog#asSfa_v2-wkb\n */\nexport const asSfa_v2_wkb: OtherIndividual = 'https://w3id.org/fog#asSfa_v2-wkb';\n\n/**\n * as Well Known Text SFA v2 geometry\n * \n * The datatype relation pointing to a Well Know Text (WKT) geometry following the open Simple Feature Access (SFA) v2 standard developed by the OGC and ISO. The format is text-based. Note that this property is disjoint with geo:asWKT because of the more strict domain and range restrictions in GeoSPARQL.\n *\n * https://w3id.org/fog#asSfa_v2-wkt\n */\nexport const asSfa_v2_wkt: OtherIndividual = 'https://w3id.org/fog#asSfa_v2-wkt';\n\n/**\n * as Shapefile format\n * \n * The datatype relation pointing to a geometry description following the open Shapefile format developed by ESRI. The format consists of multiple files, including as a minimum the geometry (.shp), the index of the feature geometry (.shx) and attribute information of features (.dbf). These three files are binary, while others can be text-based (e.g. the .prj file). It is strongly adviced to use the more specific subsubproperties (e.g. fog:asShapefile-shp). Note that no file format version is provided by ESRI and that the format is expected to be stable.\n *\n * https://w3id.org/fog#asShapefile\n */\nexport const asShapefile: OwlDatatypeProperty = 'https://w3id.org/fog#asShapefile';\n\n/**\n * as Shapefile dBASE table (.dbf)\n * \n * The datatype relation pointing to a dBASE table file (.dbf) following the open Shapefile format developed by ESRI. This file contains the attributes of each shape. The Shapefile format consists of multiple files, including as a minimum the geometry (.shp), the index of the feature geometry (.shx) and attribute information of features (.dbf). These three files are binary, while others can be text-based (e.g. the .prj file).\n *\n * https://w3id.org/fog#asShapefile-dbf\n */\nexport const asShapefile_dbf: OtherIndividual = 'https://w3id.org/fog#asShapefile-dbf';\n\n/**\n * \n * \n * The datatype relation pointing to a projection format file (.prj) following the open Shapefile format developed by ESRI. This file contains the the coordinate system and projection information of the shapes. The Shapefile format consists of multiple files, including as a minimum the geometry (.shp), the index of the feature geometry (.shx) and attribute information of features (.dbf). These three files are binary, while others can be text-based (e.g. the .prj file).\n *\n * https://w3id.org/fog#asShapefile-prj\n */\nexport const asShapefile_prj: OtherIndividual = 'https://w3id.org/fog#asShapefile-prj';\n\n/**\n * \n * \n * The datatype relation pointing to a geometry file (.shp) following the open Shapefile format developed by ESRI. This file contains the geometry of the shape. The Shapefile format consists of multiple files, including as a minimum the geometry (.shp), the index of the feature geometry (.shx) and attribute information of features (.dbf). These three files are binary, while others can be text-based (e.g. the .prj file).\n *\n * https://w3id.org/fog#asShapefile-shp\n */\nexport const asShapefile_shp: OtherIndividual = 'https://w3id.org/fog#asShapefile-shp';\n\n/**\n * \n * \n * The datatype relation pointing to a shape index format file (.shx) following the open Shapefile format developed by ESRI. This file contains the positional index of the geometry. The Shapefile format consists of multiple files, including as a minimum the geometry (.shp), the index of the feature geometry (.shx) and attribute information of features (.dbf). These three files are binary, while others can be text-based (e.g. the .prj file).\n *\n * https://w3id.org/fog#asShapefile-shx\n */\nexport const asShapefile_shx: OtherIndividual = 'https://w3id.org/fog#asShapefile-shx';\n\n/**\n * as SketchUp format\n * \n * The datatype relation pointing to a geometry description following the proprietary SketchUp format (Trimble). The format consists of a single .skp file (binary). It is strongly adviced to use the more specific subproperties (e.g. fog:asSketchUp_v2019)\n *\n * https://w3id.org/fog#asSketchUp\n */\nexport const asSketchUp: OtherIndividual = 'https://w3id.org/fog#asSketchUp';\n\n/**\n * as SketchUp format v2017 (.skp)\n * \n * The datatype relation pointing to a geometry description following the proprietary SketchUp v2017 format (Trimble). The format consists of a single .skp file (binary).\n *\n * https://w3id.org/fog#asSketchUp_v2017\n */\nexport const asSketchUp_v2017: OtherIndividual = 'https://w3id.org/fog#asSketchUp_v2017';\n\n/**\n * as SketchUp format v2018 (.skp)\n * \n * The datatype relation pointing to a geometry description following the proprietary SketchUp v2018 format (Trimble). The format consists of a single .skp file (binary).\n *\n * https://w3id.org/fog#asSketchUp_v2018\n */\nexport const asSketchUp_v2018: OtherIndividual = 'https://w3id.org/fog#asSketchUp_v2018';\n\n/**\n * as SketchUp format v2019 (.skp)\n * \n * The datatype relation pointing to a geometry description following the proprietary SketchUp v2019 format (Trimble). The format consists of a single .skp file (binary).\n *\n * https://w3id.org/fog#asSketchUp_v2019\n */\nexport const asSketchUp_v2019: OtherIndividual = 'https://w3id.org/fog#asSketchUp_v2019';\n\n/**\n * as SPFF file (.step)\n * \n * The datatype relation pointing to a geometry description following the STEP Physical File Format (SPFF) format which was developed by ISO. The format consists of a single .step file which is text-based. It is strongly adviced to use more specific subproperties.\n *\n * https://w3id.org/fog#asStep\n */\nexport const asStep: OtherIndividual = 'https://w3id.org/fog#asStep';\n\n/**\n * as STEP SPFF file (AP214)\n * \n * The datatype relation pointing to a geometry description following the STEP Physical File Format (SPFF) format which was developed by ISO. The format consists of a single .step file which is text-based. The STEP file is structured according to the Application Profile (AP) 214 - Core data for automative mechanical design processes.\n *\n * https://w3id.org/fog#asStep_ap214\n */\nexport const asStep_ap214: OtherIndividual = 'https://w3id.org/fog#asStep_ap214';\n\n/**\n * as STEP SPFF file (AP242)\n * \n * The datatype relation pointing to a geometry description following the STEP Physical File Format (SPFF) format which was developed by ISO. The format consists of a single .step file which is text-based. The STEP file is structured according to the Application Profile (AP) 242 - Managed model-based 3D engineering.\n *\n * https://w3id.org/fog#asStep_ap242\n */\nexport const asStep_ap242: OtherIndividual = 'https://w3id.org/fog#asStep_ap242';\n\n/**\n * as STL format\n * \n * The datatype relation pointing to a geometry description following the STL format which was developed by 3D Systems. The format consists of a single .stl file which is either text-based or binary. It is strongly adviced to use the more specific subsubproperties (e.g. fog:asStl_v1.0-ascii).\n *\n * https://w3id.org/fog#asStl\n */\nexport const asStl: OtherIndividual = 'https://w3id.org/fog#asStl';\n\n/**\n * as SVG format\n * \n * The datatype relation pointing to a geometry description following the open SVG format which was developed by the W3C. The format consists of a single .svg file which is text-based. It is strongly adviced to use the more specific subsubproperties (e.g. fog:asSvg_v1.1).\n *\n * https://w3id.org/fog#asSvg\n */\nexport const asSvg: OtherIndividual = 'https://w3id.org/fog#asSvg';\n\n/**\n * as X3D format\n * \n * The datatype relation pointing to a geometry description following the open X3D format which was developed by the Web3D. The format consists of a single file which is either binary or text-based. It is strongly adviced to use the more specific subsubproperties (e.g. fog:asX3d_v3.3_xml).\n *\n * https://w3id.org/fog#asX3d\n */\nexport const asX3d: OtherIndividual = 'https://w3id.org/fog#asX3d';\n\n/**\n * an IFC id\n * \n * The property links to a string containing an IFC (Industry Foundation Classes) identifier. Use any of the subproperties to be more specific regarding the type of ID.\n *\n * https://w3id.org/fog#hasIfcId\n */\nexport const hasIfcId: OwlDatatypeProperty = 'https://w3id.org/fog#hasIfcId';\n\n/**\n * an IFC GUID\n * \n * The property links to a string containing an IFC GUID as identifier.\n *\n * https://w3id.org/fog#hasIfcId-guid\n */\nexport const hasIfcId_guid: OwlDatatypeProperty = 'https://w3id.org/fog#hasIfcId-guid';\n\n/**\n * an OBJ identifier\n * \n * The property links to a string containing a OBJ identifier. Use any of the subproperties to be more specific regarding the type of ID.\n *\n * https://w3id.org/fog#hasObjId\n */\nexport const hasObjId: OwlDatatypeProperty = 'https://w3id.org/fog#hasObjId';\n\n/**\n * an OBJ group identifier\n * \n * The property links to a string containing an OBJ group identifier.\n *\n * https://w3id.org/fog#hasObjId-group\n */\nexport const hasObjId_group: OwlDatatypeProperty = 'https://w3id.org/fog#hasObjId-group';\n\n/**\n * an OBJ object identifier\n * \n * The property links to a string containing an OBJ object identifier.\n *\n * https://w3id.org/fog#hasObjId-object\n */\nexport const hasObjId_object: OwlDatatypeProperty = 'https://w3id.org/fog#hasObjId-object';\n\n/**\n * a Revit identifier\n * \n * The property links to a string containing a Revit identifier. Use any of the subproperties to be more specific regarding the type of ID.\n *\n * https://w3id.org/fog#hasRevitId\n */\nexport const hasRevitId: OwlDatatypeProperty = 'https://w3id.org/fog#hasRevitId';\n\n/**\n * a Revit element identifier\n * \n * The property links to a string containing a Revit element identifier. This is a short ID accessible directly from the Revit interface. Beware that this ID cannot be assumed unique outside the Revit project.\n *\n * https://w3id.org/fog#hasRevitId-element\n */\nexport const hasRevitId_element: OwlDatatypeProperty = 'https://w3id.org/fog#hasRevitId-element';\n\n/**\n * a Revit unique identifier (UUID)\n * \n * The property links to a string containing a Revit unique identifier (UUID). According to the Autodesk specifications, it is in fact a GUID concatenated with 8 additional hexadecimal characters  corresponding to the Revit element ID.\n *\n * https://w3id.org/fog#hasRevitId-uniqueId\n */\nexport const hasRevitId_uniqueId: OwlDatatypeProperty = 'https://w3id.org/fog#hasRevitId-uniqueId';\n\n/**\n * a Rhinoceros identifier\n * \n * The property links to a string containing a Rhinoceros identifier. Use any of the subproperties to be more specific regarding the type of ID.\n *\n * https://w3id.org/fog#hasRhinoId\n */\nexport const hasRhinoId: OwlDatatypeProperty = 'https://w3id.org/fog#hasRhinoId';\n\n/**\n * a Rhinoceros object identifier\n * \n * The property links to a string containing a Rhinoceros object identifier, i.e. a GUID.\n *\n * https://w3id.org/fog#hasRhinoId-object\n */\nexport const hasRhinoId_object: OwlDatatypeProperty = 'https://w3id.org/fog#hasRhinoId-object';\n\nexport const _BASE: IriString = 'https://w3id.org/fog#';\nexport const _PREFIX: string = 'fog';","import * as fidmarkImport from './fidmark'; export const fidmark = fidmarkImport;\nimport * as omgImport from './omg'; export const omg = omgImport;\nimport * as fogImport from './fog'; export const fog = fogImport;","import { ArUcoMarker, FiducialMarker, Geometry, MarkerDictionary, VirtualObject } from '@/models';\nimport { MarkerOrigin } from '@/models/MarkerOrigin';\nimport { fidmark, fog, omg } from '@/ontologies';\nimport { DataObject, LengthUnit, Relative3DPosition } from '@openhps/core';\nimport { DataFactory, DefaultEngine, IriString, NamedNode, Parser, Quad, RDFSerializer, SPARQLDataDriver, Store } from '@openhps/rdf';\nimport { defineStore } from 'pinia';\n\nexport interface MarkerState {\n  rdf: string;\n  markers: FiducialMarker[];\n  objects: VirtualObject[];\n}\n\nexport const useMarkerStore = defineStore('marker', {\n  state: (): MarkerState => ({\n    rdf: undefined,\n    markers: [],\n    objects: []\n  }),\n  getters: {\n\n  },\n  actions: {\n    initialize(): Promise<void> {\n      return new Promise((resolve, reject) => {\n        const BASE_URI = \"http://example.org/\";\n        const marker1 = new ArUcoMarker();\n        marker1.uid = \"marker-1\";\n        marker1.dictionary = MarkerDictionary.fromURI(fidmark.DICT_ARUCO_MIP_36h12);\n        marker1.identifier = 10;\n        marker1.origin = MarkerOrigin.fromURI(fidmark.OriginCenter);\n        marker1.height = 150;\n        marker1.width = 150;\n\n        const marker2 = new ArUcoMarker();\n        marker2.uid = \"marker-2\";\n        marker2.dictionary = MarkerDictionary.fromURI(fidmark.DICT_ARUCO_ORIGINAL);\n        marker2.identifier = 94;\n        marker2.origin = MarkerOrigin.fromURI(fidmark.OriginCenter);\n        marker2.height = 100;\n        marker2.width = 100;\n\n        const earth = new VirtualObject(\"earth\");\n        earth.addRelativePosition(new Relative3DPosition(marker1.uid, 0, 0, 100, LengthUnit.MILLIMETER));\n        earth.geometry = new Geometry();\n        earth.geometry.asGltf = \"https://raw.githubusercontent.com/microsoft/mixed-reality-extension-sdk-samples/master/samples/solar-system/public/assets/earth.gltf\";\n        \n        const jupiter = new VirtualObject(\"jupiter\");\n        jupiter.addRelativePosition(new Relative3DPosition(marker2.uid, 0, 0, 0.5, LengthUnit.METER));\n        jupiter.geometry = new Geometry();\n        jupiter.geometry.asGltf = \"https://raw.githubusercontent.com/microsoft/mixed-reality-extension-sdk-samples/master/samples/solar-system/public/assets/jupiter.gltf\";\n        \n\n        const store = new Store();\n        store.addQuads(RDFSerializer.serializeToQuads(marker1, BASE_URI));\n        store.addQuads(RDFSerializer.serializeToQuads(earth, BASE_URI));\n        store.addQuads(RDFSerializer.serializeToQuads(marker2, BASE_URI));\n        store.addQuads(RDFSerializer.serializeToQuads(jupiter, BASE_URI));\n        RDFSerializer.stringify(store, {\n          prettyPrint: true,\n          baseUri: \"http://example.org/\",\n          prefixes: {\n            fidmark: \"http://purl.org/fidmark/\",\n            example: \"http://example.org/\",\n            [omg._PREFIX]: omg._BASE,\n            [fog._PREFIX]: fog._BASE\n          }\n        }).then(text => {\n          this.rdf = text;\n          return this.fromRDF(this.rdf);\n        }).then(() => {\n          resolve();\n        }).catch(reject);\n      });\n    },\n    fromRDF(text: string): Promise<void> {\n      return new Promise((resolve, reject) => {\n        const parser = new Parser();\n        const quads: Quad[] = parser.parse(text);\n        const store = new Store(quads);\n        const driver = new SPARQLDataDriver(DataObject, {\n          sources: [store],\n          engine: DefaultEngine,\n        });\n        const query = `\n          PREFIX fidmark: <http://purl.org/fidmark/>\n          PREFIX ssn: <http://www.w3.org/ns/ssn/>\n          PREFIX sosa: <http://www.w3.org/ns/sosa/>\n          PREFIX omg: <https://w3id.org/omg#>\n\n          SELECT ?object {\n              { ?object a fidmark:ArUco }\n              UNION\n              { \n                ?object a sosa:FeatureOfInterest .\n                ?object omg:hasGeometry ?geometry .\n              }\n          }`;\n        driver\n          .queryBindings(query)\n          .then((bindings) => {\n            this.markers = [];\n            this.objects = [];\n            bindings.forEach((binding) => {\n              const uri = (binding.get('object') as NamedNode).id as IriString;\n              const object: DataObject = RDFSerializer.deserializeFromStore(\n                DataFactory.namedNode(uri),\n                store,\n              );\n              \n              if (object instanceof FiducialMarker) {\n                this.markers.push(object);\n              } else if (object instanceof VirtualObject) {\n                (object as VirtualObject).geometry.load();\n                this.objects.push(object);\n              }\n            });\n            console.log(\"Virtual objects\", this.objects)\n            resolve();\n          })\n          .catch(reject);\n      });\n    }\n  },\n});\n","module.exports = OpenHPS.core;","module.exports = OpenHPS.rdf;","module.exports = OpenHPS.video;","module.exports = OpenHPS.webrtc;","module.exports = undefined;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"74\":\"8b7ce425\",\"78\":\"36a921d5\",\"109\":\"34280411\",\"158\":\"2ef25567\",\"159\":\"284e735a\",\"320\":\"d8956853\",\"338\":\"697adcc2\",\"544\":\"0b13aa14\",\"576\":\"fcb4289a\",\"753\":\"7d6aa6c2\",\"775\":\"5aa9e00f\",\"789\":\"efd2adbb\",\"980\":\"d6174174\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"css/\" + chunkId + \".\" + {\"159\":\"00add67b\",\"320\":\"d8c23228\"}[chunkId] + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"eswc2024:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/application/\";","if (typeof document === \"undefined\") return;\nvar createStylesheet = (chunkId, fullhref, oldTag, resolve, reject) => {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tvar onLinkComplete = (event) => {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + realHref + \")\");\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tif (linkTag.parentNode) linkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\tif (oldTag) {\n\t\toldTag.parentNode.insertBefore(linkTag, oldTag.nextSibling);\n\t} else {\n\t\tdocument.head.appendChild(linkTag);\n\t}\n\treturn linkTag;\n};\nvar findStylesheet = (href, fullhref) => {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = (chunkId) => {\n\treturn new Promise((resolve, reject) => {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, null, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.miniCss = (chunkId, promises) => {\n\tvar cssChunks = {\"159\":1,\"320\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(() => {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, (e) => {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkeswc2024\"] = globalThis[\"webpackChunkeswc2024\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], () => (__webpack_require__(7461)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_router_outlet","_resolveComponent","_component_ion_app","_openBlock","_createBlock","default","_withCtx","_createVNode","_","App","Vue","constructor","args","_defineProperty","useMarkerStore","beforeMount","loadWASM","process","mounted","RDFSerializer","initialize","this","markerStore","__decorate","Options","components","IonApp","IonRouterOutlet","__exports__","_defineComponent","__name","setup","__props","_unref","IonPage","IonTabs","IonTabBar","slot","IonTabButton","tab","href","IonIcon","icon","cameraOutline","IonLabel","_createTextVNode","cubeOutline","routes","path","redirect","component","TabsPage","children","router","createRouter","history","createWebHashHistory","app","createApp","use","IonicVue","createPinia","isReady","addIcons","icons","mount","MarkerOrigin","MarkerOrigin_1","fromURI","uri","dict","rdf","SerializableObject","type","fidmark","ORIGIN_CENTER","OriginCenter","ORIGIN_BOTTOM_LEFT","OriginBottomLeft","ORIGIN_BOTTOM_RIGHT","OriginBottomRight","ORIGIN_TOP_LEFT","OriginTopLeft","ORIGIN_TOP_RIGHT","OriginTopRight","MarkerDictionary","MarkerDictionary_1","SerializableMember","predicate","dictionarySize","hammingDistance","ImageDescriptor","asImage","datatype","xsd","anyURI","IriString","_a","Object","asNFT","_b","asPATT","_c","FiducialMarker","ReferenceSpace","markerData","string","markerIdentifier","integer","numberType","NumberType","INTEGER","hasDictionary","hasOrigin","hasHeight","serializer","value","RDFBuilder","blankNode","add","qudt","QuantityValue","unit","LengthUnit","MILLIMETER","numericValue","double","build","deserializer","thing","deserialize","predicates","convert","parseFloat","hasWidth","hasImageDesciptor","ArUcoMarker","ArUco","Geometry","gltf","_gltf","load","reject","loader","GLTFLoader","asGltf","undefined","fog","omg","VirtualObject","DataObject","hasGeometry","sosa","FeatureOfInterest","ARTagMarker","ARTag","CircularBarcode","AP3PPoseComputation","PnPPoseComputation","ARPlatform","Barcode2D","ARToolKit","Barcode","ActiveMarker","AprilTag","PassiveMarker","Barcode1D","BinaryID","BullsEye","CALTag","CCC","CCTag","Chilitags","ChromaTag","Cybercode","EPnPPoseComputation","FourierTag","IPPEPoseComputation","InterSense","MarkerDetection","MarkerPoseEstimation","MarkerlessPoseEstimation","MaxiCode","MultiRing","P3PPoseComputation","PiTag","PoseOutput","QRCode","RuneTag","SIFT","STag","TRIP","TopoTag","VisualCode","WhyCode","WhyCon","reacTIVision","codes","hasMarker","isImageDescriptorOf","partOf","asZFT","crc","crowns","maxIdentifiers","markerBits","markerCode","version","color","encoding","opencvName","shape","supportedMarker","DICT_4X4_100","DICT_4X4_1000","DICT_4X4_250","DICT_4X4_50","DICT_5X5_100","DICT_5X5_1000","DICT_5X5_250","DICT_5X5_50","DICT_6X6_100","DICT_6X6_1000","DICT_6X6_250","DICT_6X6_50","DICT_7X7_100","DICT_7X7_1000","DICT_7X7_250","DICT_7X7_50","DICT_APRILTAG_16h5","DICT_APRILTAG_25h9","DICT_APRILTAG_36h10","DICT_APRILTAG_36h11","DICT_ARTAG","DICT_ARUCO_ORIGINAL","DICT_CHILLITAGS","DICT_ARUCO_MIP_36h12","DICT_ARUCO_MIP_25h7","DICT_ARUCO_MIP_16h3","DICT_REACTIVISION_AMOEBA","DICT_REACTIVISION_YAMAARASHI","DICT_TOPOTAG_3X3","DICT_TOPOTAG_4X4","DICT_TOPOTAG_5X5","_BASE","_PREFIX","CurrentGeometryState","GeometryState","GeometryContext","complementsGeometry","containsGeometryObject","containsPropertyState","hasComplexGeometryDescription","hasGeometryContext","hasGeometryState","hasInferredPropertyState","isExplicitlyDerivedFrom","isDerivedFromGeometry","isDerivedFromGeometryState","isImplicitlyDerivedFrom","isPartOfGeometry","transformsGeometry","hasReferencedGeometryId","hasSimpleGeometryDescription","ReferencedContent","as3dmo","asGeojson_ld","asGeomOntology","asIfcowl","asIfcowl_v2x3final","asIfcowl_v2x3tc1","asIfcowl_v2x4add1","asIfcowl_v2x4add2","asIfcowl_v2x4final","asOntobrepOntology","asOntostepOntology","hasReferencedContent","asCollada","asDwg","asDwg_v2010","asDwg_v2013","asDwg_v2018","asE57","asGeojson","asGeojson_v2008","asGeojson_v2016","asGml","asIfc","asIfc_v2x3","asIfc_v2x3_ifc","asIfc_v2x3_ifcxml","asIfc_v2x3tc1","asIfc_v2x3tc1_ifc","asIfc_v2x3tc1_ifcxml","asIfc_v2x4","asIfc_v2x4_ifc","asIfc_v2x4_ifcxml","asIfc_v2x4add1","asIfc_v2x4add1_ifc","asIfc_v2x4add1_ifcxml","asIfc_v2x4add2","asIfc_v2x4add2_ifc","asIfc_v2x4add2_ifcxml","asIges","asLas","asNexus","asObj","asPcd","asPly","asRevit","asRevit_v2017","asRevit_v2018","asRevit_v2019","asRevit_v2020","asRhino","asRhino_v5","asRhino_v6","asSfa","asSfa_v1","asSfa_v1_wkt","asSfa_v2","asSfa_v2_wkb","asSfa_v2_wkt","asShapefile","asShapefile_dbf","asShapefile_prj","asShapefile_shp","asShapefile_shx","asSketchUp","asSketchUp_v2017","asSketchUp_v2018","asSketchUp_v2019","asStep","asStep_ap214","asStep_ap242","asStl","asSvg","asX3d","hasIfcId","hasIfcId_guid","hasObjId","hasObjId_group","hasObjId_object","hasRevitId","hasRevitId_element","hasRevitId_uniqueId","hasRhinoId","hasRhinoId_object","fidmarkImport","omgImport","fogImport","defineStore","state","markers","objects","getters","actions","BASE_URI","marker1","uid","dictionary","identifier","origin","height","width","marker2","earth","addRelativePosition","Relative3DPosition","geometry","jupiter","METER","store","Store","addQuads","serializeToQuads","stringify","prettyPrint","baseUri","prefixes","example","text","fromRDF","catch","parser","Parser","quads","parse","driver","SPARQLDataDriver","sources","engine","DefaultEngine","query","queryBindings","bindings","forEach","binding","get","object","deserializeFromStore","DataFactory","namedNode","push","console","log","OpenHPS","core","video","webrtc","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","f","chunkId","all","reduce","promises","u","miniCssF","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","url","done","script","needAttach","scripts","document","getElementsByTagName","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","setTimeout","bind","target","head","appendChild","Symbol","toStringTag","p","createStylesheet","fullhref","oldTag","linkTag","rel","onLinkComplete","errorType","realHref","err","request","insertBefore","nextSibling","findStylesheet","existingLinkTags","tag","dataHref","existingStyleTags","loadStylesheet","installedCssChunks","miniCss","cssChunks","installedChunks","installedChunkData","promise","error","loadingEnded","realSrc","message","name","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}