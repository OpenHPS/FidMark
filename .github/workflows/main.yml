name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Load dependency cache
        uses: actions/cache@v2
        with:
          path: |
            openhps/node_modules
          key: ${{ runner.os }}-dependencies-v1-${{ hashFiles('openhps/package.json') }}-${{ hashFiles('openhps/yarn.lock') }}
      - name: Load build cache
        uses: actions/cache@v2
        with:
          path: |
            openhps/dist
          key: ${{ runner.os }}-build-v1-${{ hashFiles('openhps/package.json') }}-${{ hashFiles('openhps/yarn.lock') }}-${{ github.run_number }}
      - name: Installing dependencies
        working-directory: openhps
        run: |
          yarn install
      - name: Build
        working-directory: openhps
        run: |
          yarn run build
      - name: Upload web artifacts
        uses: actions/upload-artifact@v2
        with:
          name: web
          path: |
            openhps/dist/web/*
            !openhps/dist/web/*.txt

  quality:
    name: Code quality
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Load dependency cache
        uses: actions/cache@v2
        with:
          path: |
            openhps/node_modules
          key: ${{ runner.os }}-dependencies-v1-${{ hashFiles('openhps/package.json') }}-${{ hashFiles('openhps/yarn.lock') }}
      - name: Quality
        working-directory: openhps
        run: |
          npm run lint

  test_coverage:
    name: Unit tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Load dependency cache
        uses: actions/cache@v2
        with:
          path: |
            openhps/node_modules
          key: ${{ runner.os }}-dependencies-v1-${{ hashFiles('openhps/package.json') }}-${{ hashFiles('openhps/yarn.lock') }}
      - name: Load build cache
        uses: actions/cache@v2
        with:
          path: |
            openhps/dist
          key: ${{ runner.os }}-build-v1-${{ hashFiles('openhps/package.json') }}-${{ hashFiles('openhps/yarn.lock') }}-${{ github.run_number }}
      - name: Load test and coverage cache
        uses: actions/cache@v2
        with:
          path: |
            **/test-results.xml
            **/coverage
          key: ${{ runner.os }}-test-v1-${{ hashFiles('openhps/package.json') }}-${{ hashFiles('openhps/yarn.lock') }}-${{ github.run_number }}
      # - name: Test
      #   working-directory: openhps
      #   run: |
      #     npm run cover:ci

  documentation:
    name: Build documentation
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Load dependency cache
        uses: actions/cache@v2
        with:
          path: |
            openhps/node_modules
          key: ${{ runner.os }}-dependencies-v1-${{ hashFiles('openhps/package.json') }}-${{ hashFiles('openhps/yarn.lock') }}
      - name: Load build cache
        uses: actions/cache@v2
        with:
          path: |
            openhps/dist
          key: ${{ runner.os }}-build-v1-${{ hashFiles('openhps/package.json') }}-${{ hashFiles('openhps/yarn.lock') }}-${{ github.run_number }}
      - name: Load document cache
        uses: actions/cache@v2
        with:
          path: |
            openhps/docs/out
          key: ${{ runner.os }}-docs-v1-${{ hashFiles('openhps/package.json') }}-${{ hashFiles('openhps/yarn.lock') }}-${{ github.run_number }}
      - name: Build documentation
        working-directory: openhps
        run: |
          npm run build:typedoc

  publish_test_coverage:
    name: Publish unit tests and coverage
    needs: test_coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Load test and coverage cache
        uses: actions/cache@v2
        with:
          path: |
            **/test-results.xml
            **/coverage
          key: ${{ runner.os }}-test-v1-${{ hashFiles('openhps/package.json') }}-${{ hashFiles('openhps/yarn.lock') }}-${{ github.run_number }}
      - name: Publish unit test results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: test-results.xml
      - name: Upload code coverage
        uses: codecov/codecov-action@v2
        with:
          files: coverage/cobertura-coverage.xml
          verbose: true
    
  release_dev:
    name: Release DEV
    needs:
      - build
      - quality
      - test_coverage
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    steps:
      - uses: actions/checkout@v3
      - name: Load dependency cache
        uses: actions/cache@v2
        with:
          path: |
            openhps/node_modules
          key: ${{ runner.os }}-dependencies-v1-${{ hashFiles('openhps/package.json') }}-${{ hashFiles('openhps/yarn.lock') }}
      - name: Load build cache
        uses: actions/cache@v2
        with:
          path: |
            openhps/dist
          key: ${{ runner.os }}-build-v1-${{ hashFiles('openhps/package.json') }}-${{ hashFiles('openhps/yarn.lock') }}-${{ github.run_number }}
      - name: Configure Publish
        run: |
          git config --global user.name 'CI'
          git config --global user.email 'ci@openhps.org'
      - name: Bump version development
        working-directory: openhps
        run: |
          npm run bump:development
      - name: Publish to NPM (dev)
        uses: JS-DevTools/npm-publish@v1
        with:
          package: openhps/package.json
          token: ${{ secrets.NPM_TOKEN }}
          tag: dev
      - name: Publish to GitHub
        if: success()
        run: |
          git push
  
  release_master:
    name: Release MAIN
    needs:
      - build
      - quality
      - test_coverage
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Load dependency cache
        uses: actions/cache@v2
        with:
          path: |
            openhps/node_modules
          key: ${{ runner.os }}-dependencies-v1-${{ hashFiles('openhps/package.json') }}-${{ hashFiles('openhps/yarn.lock') }}
      - name: Load build cache
        uses: actions/cache@v2
        with:
          path: |
            openhps/dist
          key: ${{ runner.os }}-build-v1-${{ hashFiles('openhps/package.json') }}-${{ hashFiles('openhps/yarn.lock') }}-${{ github.run_number }}
      - name: Configure Publish
        run: |
          git config --global user.name 'CI'
          git config --global user.email 'ci@openhps.org'
      - name: Bump version release
        working-directory: openhps
        run: |
          npm run bump:release
      - name: Publish to NPM (main)
        uses: JS-DevTools/npm-publish@v1
        with:
          package: openhps/package.json
          token: ${{ secrets.NPM_TOKEN }}
          tag: latest
      - name: Publish to GitHub
        if: success()
        run: |
          git push

  deploy:
    name: 'Deploy Ontology Documentation'
    needs:
      - documentation
      - quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Load document cache
        uses: actions/cache@v2
        with:
          path: |
            openhps/docs/out
          key: ${{ runner.os }}-docs-v1-${{ hashFiles('openhps/package.json') }}-${{ hashFiles('openhps/yarn.lock') }}-${{ github.run_number }}
      - name: Publish OpenHPS Documentation
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: |
            openhps/docs/out/*
      - name: Build site
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ./website
        run: |
          npm install
          npm run build
      - name: Copy OpenHPS documentation
        run: |
          cp -r ./openhps/docs/out ./website/_site/openhps
          cp -r ./docs/images ./website/_site/images
      - name: Build example application
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ./examples/eswc2024
        run: |
          npm install
          npm run build
          cp -r ./dist ../../website/_site/application
      - name: Deploy site to GitHub
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./website/_site